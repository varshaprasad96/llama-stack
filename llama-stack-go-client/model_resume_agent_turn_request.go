/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResumeAgentTurnRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResumeAgentTurnRequest{}

// ResumeAgentTurnRequest struct for ResumeAgentTurnRequest
type ResumeAgentTurnRequest struct {
	// The tool call responses to resume the turn with.
	ToolResponses []ToolResponse `json:"tool_responses"`
	// Whether to stream the response.
	Stream *bool `json:"stream,omitempty"`
}

type _ResumeAgentTurnRequest ResumeAgentTurnRequest

// NewResumeAgentTurnRequest instantiates a new ResumeAgentTurnRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResumeAgentTurnRequest(toolResponses []ToolResponse) *ResumeAgentTurnRequest {
	this := ResumeAgentTurnRequest{}
	this.ToolResponses = toolResponses
	return &this
}

// NewResumeAgentTurnRequestWithDefaults instantiates a new ResumeAgentTurnRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResumeAgentTurnRequestWithDefaults() *ResumeAgentTurnRequest {
	this := ResumeAgentTurnRequest{}
	return &this
}

// GetToolResponses returns the ToolResponses field value
func (o *ResumeAgentTurnRequest) GetToolResponses() []ToolResponse {
	if o == nil {
		var ret []ToolResponse
		return ret
	}

	return o.ToolResponses
}

// GetToolResponsesOk returns a tuple with the ToolResponses field value
// and a boolean to check if the value has been set.
func (o *ResumeAgentTurnRequest) GetToolResponsesOk() ([]ToolResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToolResponses, true
}

// SetToolResponses sets field value
func (o *ResumeAgentTurnRequest) SetToolResponses(v []ToolResponse) {
	o.ToolResponses = v
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *ResumeAgentTurnRequest) GetStream() bool {
	if o == nil || IsNil(o.Stream) {
		var ret bool
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResumeAgentTurnRequest) GetStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *ResumeAgentTurnRequest) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given bool and assigns it to the Stream field.
func (o *ResumeAgentTurnRequest) SetStream(v bool) {
	o.Stream = &v
}

func (o ResumeAgentTurnRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResumeAgentTurnRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tool_responses"] = o.ToolResponses
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	return toSerialize, nil
}

func (o *ResumeAgentTurnRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tool_responses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResumeAgentTurnRequest := _ResumeAgentTurnRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResumeAgentTurnRequest)

	if err != nil {
		return err
	}

	*o = ResumeAgentTurnRequest(varResumeAgentTurnRequest)

	return err
}

type NullableResumeAgentTurnRequest struct {
	value *ResumeAgentTurnRequest
	isSet bool
}

func (v NullableResumeAgentTurnRequest) Get() *ResumeAgentTurnRequest {
	return v.value
}

func (v *NullableResumeAgentTurnRequest) Set(val *ResumeAgentTurnRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResumeAgentTurnRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResumeAgentTurnRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResumeAgentTurnRequest(val *ResumeAgentTurnRequest) *NullableResumeAgentTurnRequest {
	return &NullableResumeAgentTurnRequest{value: val, isSet: true}
}

func (v NullableResumeAgentTurnRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResumeAgentTurnRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


