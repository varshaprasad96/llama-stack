/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AgentTurnResponseTurnCompletePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentTurnResponseTurnCompletePayload{}

// AgentTurnResponseTurnCompletePayload struct for AgentTurnResponseTurnCompletePayload
type AgentTurnResponseTurnCompletePayload struct {
	EventType string `json:"event_type"`
	Turn Turn `json:"turn"`
}

type _AgentTurnResponseTurnCompletePayload AgentTurnResponseTurnCompletePayload

// NewAgentTurnResponseTurnCompletePayload instantiates a new AgentTurnResponseTurnCompletePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentTurnResponseTurnCompletePayload(eventType string, turn Turn) *AgentTurnResponseTurnCompletePayload {
	this := AgentTurnResponseTurnCompletePayload{}
	this.EventType = eventType
	this.Turn = turn
	return &this
}

// NewAgentTurnResponseTurnCompletePayloadWithDefaults instantiates a new AgentTurnResponseTurnCompletePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentTurnResponseTurnCompletePayloadWithDefaults() *AgentTurnResponseTurnCompletePayload {
	this := AgentTurnResponseTurnCompletePayload{}
	var eventType string = "turn_complete"
	this.EventType = eventType
	return &this
}

// GetEventType returns the EventType field value
func (o *AgentTurnResponseTurnCompletePayload) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *AgentTurnResponseTurnCompletePayload) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *AgentTurnResponseTurnCompletePayload) SetEventType(v string) {
	o.EventType = v
}

// GetTurn returns the Turn field value
func (o *AgentTurnResponseTurnCompletePayload) GetTurn() Turn {
	if o == nil {
		var ret Turn
		return ret
	}

	return o.Turn
}

// GetTurnOk returns a tuple with the Turn field value
// and a boolean to check if the value has been set.
func (o *AgentTurnResponseTurnCompletePayload) GetTurnOk() (*Turn, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Turn, true
}

// SetTurn sets field value
func (o *AgentTurnResponseTurnCompletePayload) SetTurn(v Turn) {
	o.Turn = v
}

func (o AgentTurnResponseTurnCompletePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentTurnResponseTurnCompletePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["event_type"] = o.EventType
	toSerialize["turn"] = o.Turn
	return toSerialize, nil
}

func (o *AgentTurnResponseTurnCompletePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"event_type",
		"turn",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentTurnResponseTurnCompletePayload := _AgentTurnResponseTurnCompletePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAgentTurnResponseTurnCompletePayload)

	if err != nil {
		return err
	}

	*o = AgentTurnResponseTurnCompletePayload(varAgentTurnResponseTurnCompletePayload)

	return err
}

type NullableAgentTurnResponseTurnCompletePayload struct {
	value *AgentTurnResponseTurnCompletePayload
	isSet bool
}

func (v NullableAgentTurnResponseTurnCompletePayload) Get() *AgentTurnResponseTurnCompletePayload {
	return v.value
}

func (v *NullableAgentTurnResponseTurnCompletePayload) Set(val *AgentTurnResponseTurnCompletePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentTurnResponseTurnCompletePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentTurnResponseTurnCompletePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentTurnResponseTurnCompletePayload(val *AgentTurnResponseTurnCompletePayload) *NullableAgentTurnResponseTurnCompletePayload {
	return &NullableAgentTurnResponseTurnCompletePayload{value: val, isSet: true}
}

func (v NullableAgentTurnResponseTurnCompletePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentTurnResponseTurnCompletePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


