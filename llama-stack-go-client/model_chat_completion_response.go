/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatCompletionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatCompletionResponse{}

// ChatCompletionResponse Response from a chat completion request.
type ChatCompletionResponse struct {
	Metrics []MetricInResponse `json:"metrics,omitempty"`
	// The complete response message
	CompletionMessage CompletionMessage `json:"completion_message"`
	// Optional log probabilities for generated tokens
	Logprobs []TokenLogProbs `json:"logprobs,omitempty"`
}

type _ChatCompletionResponse ChatCompletionResponse

// NewChatCompletionResponse instantiates a new ChatCompletionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatCompletionResponse(completionMessage CompletionMessage) *ChatCompletionResponse {
	this := ChatCompletionResponse{}
	this.CompletionMessage = completionMessage
	return &this
}

// NewChatCompletionResponseWithDefaults instantiates a new ChatCompletionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatCompletionResponseWithDefaults() *ChatCompletionResponse {
	this := ChatCompletionResponse{}
	return &this
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *ChatCompletionResponse) GetMetrics() []MetricInResponse {
	if o == nil || IsNil(o.Metrics) {
		var ret []MetricInResponse
		return ret
	}
	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetMetricsOk() ([]MetricInResponse, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *ChatCompletionResponse) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []MetricInResponse and assigns it to the Metrics field.
func (o *ChatCompletionResponse) SetMetrics(v []MetricInResponse) {
	o.Metrics = v
}

// GetCompletionMessage returns the CompletionMessage field value
func (o *ChatCompletionResponse) GetCompletionMessage() CompletionMessage {
	if o == nil {
		var ret CompletionMessage
		return ret
	}

	return o.CompletionMessage
}

// GetCompletionMessageOk returns a tuple with the CompletionMessage field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetCompletionMessageOk() (*CompletionMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompletionMessage, true
}

// SetCompletionMessage sets field value
func (o *ChatCompletionResponse) SetCompletionMessage(v CompletionMessage) {
	o.CompletionMessage = v
}

// GetLogprobs returns the Logprobs field value if set, zero value otherwise.
func (o *ChatCompletionResponse) GetLogprobs() []TokenLogProbs {
	if o == nil || IsNil(o.Logprobs) {
		var ret []TokenLogProbs
		return ret
	}
	return o.Logprobs
}

// GetLogprobsOk returns a tuple with the Logprobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetLogprobsOk() ([]TokenLogProbs, bool) {
	if o == nil || IsNil(o.Logprobs) {
		return nil, false
	}
	return o.Logprobs, true
}

// HasLogprobs returns a boolean if a field has been set.
func (o *ChatCompletionResponse) HasLogprobs() bool {
	if o != nil && !IsNil(o.Logprobs) {
		return true
	}

	return false
}

// SetLogprobs gets a reference to the given []TokenLogProbs and assigns it to the Logprobs field.
func (o *ChatCompletionResponse) SetLogprobs(v []TokenLogProbs) {
	o.Logprobs = v
}

func (o ChatCompletionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatCompletionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	toSerialize["completion_message"] = o.CompletionMessage
	if !IsNil(o.Logprobs) {
		toSerialize["logprobs"] = o.Logprobs
	}
	return toSerialize, nil
}

func (o *ChatCompletionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"completion_message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatCompletionResponse := _ChatCompletionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatCompletionResponse)

	if err != nil {
		return err
	}

	*o = ChatCompletionResponse(varChatCompletionResponse)

	return err
}

type NullableChatCompletionResponse struct {
	value *ChatCompletionResponse
	isSet bool
}

func (v NullableChatCompletionResponse) Get() *ChatCompletionResponse {
	return v.value
}

func (v *NullableChatCompletionResponse) Set(val *ChatCompletionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChatCompletionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChatCompletionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatCompletionResponse(val *ChatCompletionResponse) *NullableChatCompletionResponse {
	return &NullableChatCompletionResponse{value: val, isSet: true}
}

func (v NullableChatCompletionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatCompletionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


