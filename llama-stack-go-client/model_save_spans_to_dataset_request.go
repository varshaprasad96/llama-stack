/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SaveSpansToDatasetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SaveSpansToDatasetRequest{}

// SaveSpansToDatasetRequest struct for SaveSpansToDatasetRequest
type SaveSpansToDatasetRequest struct {
	AttributeFilters []QueryCondition `json:"attribute_filters"`
	AttributesToSave []string `json:"attributes_to_save"`
	DatasetId string `json:"dataset_id"`
	MaxDepth *int32 `json:"max_depth,omitempty"`
}

type _SaveSpansToDatasetRequest SaveSpansToDatasetRequest

// NewSaveSpansToDatasetRequest instantiates a new SaveSpansToDatasetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaveSpansToDatasetRequest(attributeFilters []QueryCondition, attributesToSave []string, datasetId string) *SaveSpansToDatasetRequest {
	this := SaveSpansToDatasetRequest{}
	this.AttributeFilters = attributeFilters
	this.AttributesToSave = attributesToSave
	this.DatasetId = datasetId
	return &this
}

// NewSaveSpansToDatasetRequestWithDefaults instantiates a new SaveSpansToDatasetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaveSpansToDatasetRequestWithDefaults() *SaveSpansToDatasetRequest {
	this := SaveSpansToDatasetRequest{}
	return &this
}

// GetAttributeFilters returns the AttributeFilters field value
func (o *SaveSpansToDatasetRequest) GetAttributeFilters() []QueryCondition {
	if o == nil {
		var ret []QueryCondition
		return ret
	}

	return o.AttributeFilters
}

// GetAttributeFiltersOk returns a tuple with the AttributeFilters field value
// and a boolean to check if the value has been set.
func (o *SaveSpansToDatasetRequest) GetAttributeFiltersOk() ([]QueryCondition, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttributeFilters, true
}

// SetAttributeFilters sets field value
func (o *SaveSpansToDatasetRequest) SetAttributeFilters(v []QueryCondition) {
	o.AttributeFilters = v
}

// GetAttributesToSave returns the AttributesToSave field value
func (o *SaveSpansToDatasetRequest) GetAttributesToSave() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AttributesToSave
}

// GetAttributesToSaveOk returns a tuple with the AttributesToSave field value
// and a boolean to check if the value has been set.
func (o *SaveSpansToDatasetRequest) GetAttributesToSaveOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttributesToSave, true
}

// SetAttributesToSave sets field value
func (o *SaveSpansToDatasetRequest) SetAttributesToSave(v []string) {
	o.AttributesToSave = v
}

// GetDatasetId returns the DatasetId field value
func (o *SaveSpansToDatasetRequest) GetDatasetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field value
// and a boolean to check if the value has been set.
func (o *SaveSpansToDatasetRequest) GetDatasetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatasetId, true
}

// SetDatasetId sets field value
func (o *SaveSpansToDatasetRequest) SetDatasetId(v string) {
	o.DatasetId = v
}

// GetMaxDepth returns the MaxDepth field value if set, zero value otherwise.
func (o *SaveSpansToDatasetRequest) GetMaxDepth() int32 {
	if o == nil || IsNil(o.MaxDepth) {
		var ret int32
		return ret
	}
	return *o.MaxDepth
}

// GetMaxDepthOk returns a tuple with the MaxDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaveSpansToDatasetRequest) GetMaxDepthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDepth) {
		return nil, false
	}
	return o.MaxDepth, true
}

// HasMaxDepth returns a boolean if a field has been set.
func (o *SaveSpansToDatasetRequest) HasMaxDepth() bool {
	if o != nil && !IsNil(o.MaxDepth) {
		return true
	}

	return false
}

// SetMaxDepth gets a reference to the given int32 and assigns it to the MaxDepth field.
func (o *SaveSpansToDatasetRequest) SetMaxDepth(v int32) {
	o.MaxDepth = &v
}

func (o SaveSpansToDatasetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SaveSpansToDatasetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attribute_filters"] = o.AttributeFilters
	toSerialize["attributes_to_save"] = o.AttributesToSave
	toSerialize["dataset_id"] = o.DatasetId
	if !IsNil(o.MaxDepth) {
		toSerialize["max_depth"] = o.MaxDepth
	}
	return toSerialize, nil
}

func (o *SaveSpansToDatasetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attribute_filters",
		"attributes_to_save",
		"dataset_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSaveSpansToDatasetRequest := _SaveSpansToDatasetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSaveSpansToDatasetRequest)

	if err != nil {
		return err
	}

	*o = SaveSpansToDatasetRequest(varSaveSpansToDatasetRequest)

	return err
}

type NullableSaveSpansToDatasetRequest struct {
	value *SaveSpansToDatasetRequest
	isSet bool
}

func (v NullableSaveSpansToDatasetRequest) Get() *SaveSpansToDatasetRequest {
	return v.value
}

func (v *NullableSaveSpansToDatasetRequest) Set(val *SaveSpansToDatasetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSaveSpansToDatasetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSaveSpansToDatasetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaveSpansToDatasetRequest(val *SaveSpansToDatasetRequest) *NullableSaveSpansToDatasetRequest {
	return &NullableSaveSpansToDatasetRequest{value: val, isSet: true}
}

func (v NullableSaveSpansToDatasetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaveSpansToDatasetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


