/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenAIChatCompletionToolCallFunction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenAIChatCompletionToolCallFunction{}

// OpenAIChatCompletionToolCallFunction struct for OpenAIChatCompletionToolCallFunction
type OpenAIChatCompletionToolCallFunction struct {
	Name *string `json:"name,omitempty"`
	Arguments *string `json:"arguments,omitempty"`
}

// NewOpenAIChatCompletionToolCallFunction instantiates a new OpenAIChatCompletionToolCallFunction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenAIChatCompletionToolCallFunction() *OpenAIChatCompletionToolCallFunction {
	this := OpenAIChatCompletionToolCallFunction{}
	return &this
}

// NewOpenAIChatCompletionToolCallFunctionWithDefaults instantiates a new OpenAIChatCompletionToolCallFunction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenAIChatCompletionToolCallFunctionWithDefaults() *OpenAIChatCompletionToolCallFunction {
	this := OpenAIChatCompletionToolCallFunction{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenAIChatCompletionToolCallFunction) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenAIChatCompletionToolCallFunction) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenAIChatCompletionToolCallFunction) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenAIChatCompletionToolCallFunction) SetName(v string) {
	o.Name = &v
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *OpenAIChatCompletionToolCallFunction) GetArguments() string {
	if o == nil || IsNil(o.Arguments) {
		var ret string
		return ret
	}
	return *o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenAIChatCompletionToolCallFunction) GetArgumentsOk() (*string, bool) {
	if o == nil || IsNil(o.Arguments) {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *OpenAIChatCompletionToolCallFunction) HasArguments() bool {
	if o != nil && !IsNil(o.Arguments) {
		return true
	}

	return false
}

// SetArguments gets a reference to the given string and assigns it to the Arguments field.
func (o *OpenAIChatCompletionToolCallFunction) SetArguments(v string) {
	o.Arguments = &v
}

func (o OpenAIChatCompletionToolCallFunction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenAIChatCompletionToolCallFunction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Arguments) {
		toSerialize["arguments"] = o.Arguments
	}
	return toSerialize, nil
}

type NullableOpenAIChatCompletionToolCallFunction struct {
	value *OpenAIChatCompletionToolCallFunction
	isSet bool
}

func (v NullableOpenAIChatCompletionToolCallFunction) Get() *OpenAIChatCompletionToolCallFunction {
	return v.value
}

func (v *NullableOpenAIChatCompletionToolCallFunction) Set(val *OpenAIChatCompletionToolCallFunction) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenAIChatCompletionToolCallFunction) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenAIChatCompletionToolCallFunction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenAIChatCompletionToolCallFunction(val *OpenAIChatCompletionToolCallFunction) *NullableOpenAIChatCompletionToolCallFunction {
	return &NullableOpenAIChatCompletionToolCallFunction{value: val, isSet: true}
}

func (v NullableOpenAIChatCompletionToolCallFunction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenAIChatCompletionToolCallFunction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


