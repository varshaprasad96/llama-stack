/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OpenaiCompletionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenaiCompletionRequest{}

// OpenaiCompletionRequest struct for OpenaiCompletionRequest
type OpenaiCompletionRequest struct {
	// The identifier of the model to use. The model must be registered with Llama Stack and available via the /models endpoint.
	Model string `json:"model"`
	Prompt OpenaiCompletionRequestPrompt `json:"prompt"`
	// (Optional) The number of completions to generate
	BestOf *int32 `json:"best_of,omitempty"`
	// (Optional) Whether to echo the prompt
	Echo *bool `json:"echo,omitempty"`
	// (Optional) The penalty for repeated tokens
	FrequencyPenalty *float32 `json:"frequency_penalty,omitempty"`
	// (Optional) The logit bias to use
	LogitBias map[string]float32 `json:"logit_bias,omitempty"`
	// (Optional) The log probabilities to use
	Logprobs *bool `json:"logprobs,omitempty"`
	// (Optional) The maximum number of tokens to generate
	MaxTokens *int32 `json:"max_tokens,omitempty"`
	// (Optional) The number of completions to generate
	N *int32 `json:"n,omitempty"`
	// (Optional) The penalty for repeated tokens
	PresencePenalty *float32 `json:"presence_penalty,omitempty"`
	// (Optional) The seed to use
	Seed *int32 `json:"seed,omitempty"`
	Stop *OpenaiChatCompletionRequestStop `json:"stop,omitempty"`
	// (Optional) Whether to stream the response
	Stream *bool `json:"stream,omitempty"`
	// (Optional) The stream options to use
	StreamOptions map[string]AppendRowsRequestRowsInnerValue `json:"stream_options,omitempty"`
	// (Optional) The temperature to use
	Temperature *float32 `json:"temperature,omitempty"`
	// (Optional) The top p to use
	TopP *float32 `json:"top_p,omitempty"`
	// (Optional) The user to use
	User *string `json:"user,omitempty"`
	GuidedChoice []string `json:"guided_choice,omitempty"`
	PromptLogprobs *int32 `json:"prompt_logprobs,omitempty"`
}

type _OpenaiCompletionRequest OpenaiCompletionRequest

// NewOpenaiCompletionRequest instantiates a new OpenaiCompletionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenaiCompletionRequest(model string, prompt OpenaiCompletionRequestPrompt) *OpenaiCompletionRequest {
	this := OpenaiCompletionRequest{}
	this.Model = model
	this.Prompt = prompt
	return &this
}

// NewOpenaiCompletionRequestWithDefaults instantiates a new OpenaiCompletionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenaiCompletionRequestWithDefaults() *OpenaiCompletionRequest {
	this := OpenaiCompletionRequest{}
	return &this
}

// GetModel returns the Model field value
func (o *OpenaiCompletionRequest) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *OpenaiCompletionRequest) SetModel(v string) {
	o.Model = v
}

// GetPrompt returns the Prompt field value
func (o *OpenaiCompletionRequest) GetPrompt() OpenaiCompletionRequestPrompt {
	if o == nil {
		var ret OpenaiCompletionRequestPrompt
		return ret
	}

	return o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetPromptOk() (*OpenaiCompletionRequestPrompt, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prompt, true
}

// SetPrompt sets field value
func (o *OpenaiCompletionRequest) SetPrompt(v OpenaiCompletionRequestPrompt) {
	o.Prompt = v
}

// GetBestOf returns the BestOf field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetBestOf() int32 {
	if o == nil || IsNil(o.BestOf) {
		var ret int32
		return ret
	}
	return *o.BestOf
}

// GetBestOfOk returns a tuple with the BestOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetBestOfOk() (*int32, bool) {
	if o == nil || IsNil(o.BestOf) {
		return nil, false
	}
	return o.BestOf, true
}

// HasBestOf returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasBestOf() bool {
	if o != nil && !IsNil(o.BestOf) {
		return true
	}

	return false
}

// SetBestOf gets a reference to the given int32 and assigns it to the BestOf field.
func (o *OpenaiCompletionRequest) SetBestOf(v int32) {
	o.BestOf = &v
}

// GetEcho returns the Echo field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetEcho() bool {
	if o == nil || IsNil(o.Echo) {
		var ret bool
		return ret
	}
	return *o.Echo
}

// GetEchoOk returns a tuple with the Echo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetEchoOk() (*bool, bool) {
	if o == nil || IsNil(o.Echo) {
		return nil, false
	}
	return o.Echo, true
}

// HasEcho returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasEcho() bool {
	if o != nil && !IsNil(o.Echo) {
		return true
	}

	return false
}

// SetEcho gets a reference to the given bool and assigns it to the Echo field.
func (o *OpenaiCompletionRequest) SetEcho(v bool) {
	o.Echo = &v
}

// GetFrequencyPenalty returns the FrequencyPenalty field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetFrequencyPenalty() float32 {
	if o == nil || IsNil(o.FrequencyPenalty) {
		var ret float32
		return ret
	}
	return *o.FrequencyPenalty
}

// GetFrequencyPenaltyOk returns a tuple with the FrequencyPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetFrequencyPenaltyOk() (*float32, bool) {
	if o == nil || IsNil(o.FrequencyPenalty) {
		return nil, false
	}
	return o.FrequencyPenalty, true
}

// HasFrequencyPenalty returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasFrequencyPenalty() bool {
	if o != nil && !IsNil(o.FrequencyPenalty) {
		return true
	}

	return false
}

// SetFrequencyPenalty gets a reference to the given float32 and assigns it to the FrequencyPenalty field.
func (o *OpenaiCompletionRequest) SetFrequencyPenalty(v float32) {
	o.FrequencyPenalty = &v
}

// GetLogitBias returns the LogitBias field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetLogitBias() map[string]float32 {
	if o == nil || IsNil(o.LogitBias) {
		var ret map[string]float32
		return ret
	}
	return o.LogitBias
}

// GetLogitBiasOk returns a tuple with the LogitBias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetLogitBiasOk() (map[string]float32, bool) {
	if o == nil || IsNil(o.LogitBias) {
		return map[string]float32{}, false
	}
	return o.LogitBias, true
}

// HasLogitBias returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasLogitBias() bool {
	if o != nil && !IsNil(o.LogitBias) {
		return true
	}

	return false
}

// SetLogitBias gets a reference to the given map[string]float32 and assigns it to the LogitBias field.
func (o *OpenaiCompletionRequest) SetLogitBias(v map[string]float32) {
	o.LogitBias = v
}

// GetLogprobs returns the Logprobs field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetLogprobs() bool {
	if o == nil || IsNil(o.Logprobs) {
		var ret bool
		return ret
	}
	return *o.Logprobs
}

// GetLogprobsOk returns a tuple with the Logprobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetLogprobsOk() (*bool, bool) {
	if o == nil || IsNil(o.Logprobs) {
		return nil, false
	}
	return o.Logprobs, true
}

// HasLogprobs returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasLogprobs() bool {
	if o != nil && !IsNil(o.Logprobs) {
		return true
	}

	return false
}

// SetLogprobs gets a reference to the given bool and assigns it to the Logprobs field.
func (o *OpenaiCompletionRequest) SetLogprobs(v bool) {
	o.Logprobs = &v
}

// GetMaxTokens returns the MaxTokens field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetMaxTokens() int32 {
	if o == nil || IsNil(o.MaxTokens) {
		var ret int32
		return ret
	}
	return *o.MaxTokens
}

// GetMaxTokensOk returns a tuple with the MaxTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetMaxTokensOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTokens) {
		return nil, false
	}
	return o.MaxTokens, true
}

// HasMaxTokens returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasMaxTokens() bool {
	if o != nil && !IsNil(o.MaxTokens) {
		return true
	}

	return false
}

// SetMaxTokens gets a reference to the given int32 and assigns it to the MaxTokens field.
func (o *OpenaiCompletionRequest) SetMaxTokens(v int32) {
	o.MaxTokens = &v
}

// GetN returns the N field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetN() int32 {
	if o == nil || IsNil(o.N) {
		var ret int32
		return ret
	}
	return *o.N
}

// GetNOk returns a tuple with the N field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetNOk() (*int32, bool) {
	if o == nil || IsNil(o.N) {
		return nil, false
	}
	return o.N, true
}

// HasN returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasN() bool {
	if o != nil && !IsNil(o.N) {
		return true
	}

	return false
}

// SetN gets a reference to the given int32 and assigns it to the N field.
func (o *OpenaiCompletionRequest) SetN(v int32) {
	o.N = &v
}

// GetPresencePenalty returns the PresencePenalty field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetPresencePenalty() float32 {
	if o == nil || IsNil(o.PresencePenalty) {
		var ret float32
		return ret
	}
	return *o.PresencePenalty
}

// GetPresencePenaltyOk returns a tuple with the PresencePenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetPresencePenaltyOk() (*float32, bool) {
	if o == nil || IsNil(o.PresencePenalty) {
		return nil, false
	}
	return o.PresencePenalty, true
}

// HasPresencePenalty returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasPresencePenalty() bool {
	if o != nil && !IsNil(o.PresencePenalty) {
		return true
	}

	return false
}

// SetPresencePenalty gets a reference to the given float32 and assigns it to the PresencePenalty field.
func (o *OpenaiCompletionRequest) SetPresencePenalty(v float32) {
	o.PresencePenalty = &v
}

// GetSeed returns the Seed field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetSeed() int32 {
	if o == nil || IsNil(o.Seed) {
		var ret int32
		return ret
	}
	return *o.Seed
}

// GetSeedOk returns a tuple with the Seed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetSeedOk() (*int32, bool) {
	if o == nil || IsNil(o.Seed) {
		return nil, false
	}
	return o.Seed, true
}

// HasSeed returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasSeed() bool {
	if o != nil && !IsNil(o.Seed) {
		return true
	}

	return false
}

// SetSeed gets a reference to the given int32 and assigns it to the Seed field.
func (o *OpenaiCompletionRequest) SetSeed(v int32) {
	o.Seed = &v
}

// GetStop returns the Stop field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetStop() OpenaiChatCompletionRequestStop {
	if o == nil || IsNil(o.Stop) {
		var ret OpenaiChatCompletionRequestStop
		return ret
	}
	return *o.Stop
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetStopOk() (*OpenaiChatCompletionRequestStop, bool) {
	if o == nil || IsNil(o.Stop) {
		return nil, false
	}
	return o.Stop, true
}

// HasStop returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasStop() bool {
	if o != nil && !IsNil(o.Stop) {
		return true
	}

	return false
}

// SetStop gets a reference to the given OpenaiChatCompletionRequestStop and assigns it to the Stop field.
func (o *OpenaiCompletionRequest) SetStop(v OpenaiChatCompletionRequestStop) {
	o.Stop = &v
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetStream() bool {
	if o == nil || IsNil(o.Stream) {
		var ret bool
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given bool and assigns it to the Stream field.
func (o *OpenaiCompletionRequest) SetStream(v bool) {
	o.Stream = &v
}

// GetStreamOptions returns the StreamOptions field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetStreamOptions() map[string]AppendRowsRequestRowsInnerValue {
	if o == nil || IsNil(o.StreamOptions) {
		var ret map[string]AppendRowsRequestRowsInnerValue
		return ret
	}
	return o.StreamOptions
}

// GetStreamOptionsOk returns a tuple with the StreamOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetStreamOptionsOk() (map[string]AppendRowsRequestRowsInnerValue, bool) {
	if o == nil || IsNil(o.StreamOptions) {
		return map[string]AppendRowsRequestRowsInnerValue{}, false
	}
	return o.StreamOptions, true
}

// HasStreamOptions returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasStreamOptions() bool {
	if o != nil && !IsNil(o.StreamOptions) {
		return true
	}

	return false
}

// SetStreamOptions gets a reference to the given map[string]AppendRowsRequestRowsInnerValue and assigns it to the StreamOptions field.
func (o *OpenaiCompletionRequest) SetStreamOptions(v map[string]AppendRowsRequestRowsInnerValue) {
	o.StreamOptions = v
}

// GetTemperature returns the Temperature field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetTemperature() float32 {
	if o == nil || IsNil(o.Temperature) {
		var ret float32
		return ret
	}
	return *o.Temperature
}

// GetTemperatureOk returns a tuple with the Temperature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetTemperatureOk() (*float32, bool) {
	if o == nil || IsNil(o.Temperature) {
		return nil, false
	}
	return o.Temperature, true
}

// HasTemperature returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasTemperature() bool {
	if o != nil && !IsNil(o.Temperature) {
		return true
	}

	return false
}

// SetTemperature gets a reference to the given float32 and assigns it to the Temperature field.
func (o *OpenaiCompletionRequest) SetTemperature(v float32) {
	o.Temperature = &v
}

// GetTopP returns the TopP field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetTopP() float32 {
	if o == nil || IsNil(o.TopP) {
		var ret float32
		return ret
	}
	return *o.TopP
}

// GetTopPOk returns a tuple with the TopP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetTopPOk() (*float32, bool) {
	if o == nil || IsNil(o.TopP) {
		return nil, false
	}
	return o.TopP, true
}

// HasTopP returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasTopP() bool {
	if o != nil && !IsNil(o.TopP) {
		return true
	}

	return false
}

// SetTopP gets a reference to the given float32 and assigns it to the TopP field.
func (o *OpenaiCompletionRequest) SetTopP(v float32) {
	o.TopP = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *OpenaiCompletionRequest) SetUser(v string) {
	o.User = &v
}

// GetGuidedChoice returns the GuidedChoice field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetGuidedChoice() []string {
	if o == nil || IsNil(o.GuidedChoice) {
		var ret []string
		return ret
	}
	return o.GuidedChoice
}

// GetGuidedChoiceOk returns a tuple with the GuidedChoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetGuidedChoiceOk() ([]string, bool) {
	if o == nil || IsNil(o.GuidedChoice) {
		return nil, false
	}
	return o.GuidedChoice, true
}

// HasGuidedChoice returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasGuidedChoice() bool {
	if o != nil && !IsNil(o.GuidedChoice) {
		return true
	}

	return false
}

// SetGuidedChoice gets a reference to the given []string and assigns it to the GuidedChoice field.
func (o *OpenaiCompletionRequest) SetGuidedChoice(v []string) {
	o.GuidedChoice = v
}

// GetPromptLogprobs returns the PromptLogprobs field value if set, zero value otherwise.
func (o *OpenaiCompletionRequest) GetPromptLogprobs() int32 {
	if o == nil || IsNil(o.PromptLogprobs) {
		var ret int32
		return ret
	}
	return *o.PromptLogprobs
}

// GetPromptLogprobsOk returns a tuple with the PromptLogprobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenaiCompletionRequest) GetPromptLogprobsOk() (*int32, bool) {
	if o == nil || IsNil(o.PromptLogprobs) {
		return nil, false
	}
	return o.PromptLogprobs, true
}

// HasPromptLogprobs returns a boolean if a field has been set.
func (o *OpenaiCompletionRequest) HasPromptLogprobs() bool {
	if o != nil && !IsNil(o.PromptLogprobs) {
		return true
	}

	return false
}

// SetPromptLogprobs gets a reference to the given int32 and assigns it to the PromptLogprobs field.
func (o *OpenaiCompletionRequest) SetPromptLogprobs(v int32) {
	o.PromptLogprobs = &v
}

func (o OpenaiCompletionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenaiCompletionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model"] = o.Model
	toSerialize["prompt"] = o.Prompt
	if !IsNil(o.BestOf) {
		toSerialize["best_of"] = o.BestOf
	}
	if !IsNil(o.Echo) {
		toSerialize["echo"] = o.Echo
	}
	if !IsNil(o.FrequencyPenalty) {
		toSerialize["frequency_penalty"] = o.FrequencyPenalty
	}
	if !IsNil(o.LogitBias) {
		toSerialize["logit_bias"] = o.LogitBias
	}
	if !IsNil(o.Logprobs) {
		toSerialize["logprobs"] = o.Logprobs
	}
	if !IsNil(o.MaxTokens) {
		toSerialize["max_tokens"] = o.MaxTokens
	}
	if !IsNil(o.N) {
		toSerialize["n"] = o.N
	}
	if !IsNil(o.PresencePenalty) {
		toSerialize["presence_penalty"] = o.PresencePenalty
	}
	if !IsNil(o.Seed) {
		toSerialize["seed"] = o.Seed
	}
	if !IsNil(o.Stop) {
		toSerialize["stop"] = o.Stop
	}
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	if !IsNil(o.StreamOptions) {
		toSerialize["stream_options"] = o.StreamOptions
	}
	if !IsNil(o.Temperature) {
		toSerialize["temperature"] = o.Temperature
	}
	if !IsNil(o.TopP) {
		toSerialize["top_p"] = o.TopP
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.GuidedChoice) {
		toSerialize["guided_choice"] = o.GuidedChoice
	}
	if !IsNil(o.PromptLogprobs) {
		toSerialize["prompt_logprobs"] = o.PromptLogprobs
	}
	return toSerialize, nil
}

func (o *OpenaiCompletionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
		"prompt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOpenaiCompletionRequest := _OpenaiCompletionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOpenaiCompletionRequest)

	if err != nil {
		return err
	}

	*o = OpenaiCompletionRequest(varOpenaiCompletionRequest)

	return err
}

type NullableOpenaiCompletionRequest struct {
	value *OpenaiCompletionRequest
	isSet bool
}

func (v NullableOpenaiCompletionRequest) Get() *OpenaiCompletionRequest {
	return v.value
}

func (v *NullableOpenaiCompletionRequest) Set(val *OpenaiCompletionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenaiCompletionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenaiCompletionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenaiCompletionRequest(val *OpenaiCompletionRequest) *NullableOpenaiCompletionRequest {
	return &NullableOpenaiCompletionRequest{value: val, isSet: true}
}

func (v NullableOpenaiCompletionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenaiCompletionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


