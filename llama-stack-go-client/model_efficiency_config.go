/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EfficiencyConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EfficiencyConfig{}

// EfficiencyConfig struct for EfficiencyConfig
type EfficiencyConfig struct {
	EnableActivationCheckpointing *bool `json:"enable_activation_checkpointing,omitempty"`
	EnableActivationOffloading *bool `json:"enable_activation_offloading,omitempty"`
	MemoryEfficientFsdpWrap *bool `json:"memory_efficient_fsdp_wrap,omitempty"`
	FsdpCpuOffload *bool `json:"fsdp_cpu_offload,omitempty"`
}

// NewEfficiencyConfig instantiates a new EfficiencyConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEfficiencyConfig() *EfficiencyConfig {
	this := EfficiencyConfig{}
	var enableActivationCheckpointing bool = false
	this.EnableActivationCheckpointing = &enableActivationCheckpointing
	var enableActivationOffloading bool = false
	this.EnableActivationOffloading = &enableActivationOffloading
	var memoryEfficientFsdpWrap bool = false
	this.MemoryEfficientFsdpWrap = &memoryEfficientFsdpWrap
	var fsdpCpuOffload bool = false
	this.FsdpCpuOffload = &fsdpCpuOffload
	return &this
}

// NewEfficiencyConfigWithDefaults instantiates a new EfficiencyConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEfficiencyConfigWithDefaults() *EfficiencyConfig {
	this := EfficiencyConfig{}
	var enableActivationCheckpointing bool = false
	this.EnableActivationCheckpointing = &enableActivationCheckpointing
	var enableActivationOffloading bool = false
	this.EnableActivationOffloading = &enableActivationOffloading
	var memoryEfficientFsdpWrap bool = false
	this.MemoryEfficientFsdpWrap = &memoryEfficientFsdpWrap
	var fsdpCpuOffload bool = false
	this.FsdpCpuOffload = &fsdpCpuOffload
	return &this
}

// GetEnableActivationCheckpointing returns the EnableActivationCheckpointing field value if set, zero value otherwise.
func (o *EfficiencyConfig) GetEnableActivationCheckpointing() bool {
	if o == nil || IsNil(o.EnableActivationCheckpointing) {
		var ret bool
		return ret
	}
	return *o.EnableActivationCheckpointing
}

// GetEnableActivationCheckpointingOk returns a tuple with the EnableActivationCheckpointing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EfficiencyConfig) GetEnableActivationCheckpointingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableActivationCheckpointing) {
		return nil, false
	}
	return o.EnableActivationCheckpointing, true
}

// HasEnableActivationCheckpointing returns a boolean if a field has been set.
func (o *EfficiencyConfig) HasEnableActivationCheckpointing() bool {
	if o != nil && !IsNil(o.EnableActivationCheckpointing) {
		return true
	}

	return false
}

// SetEnableActivationCheckpointing gets a reference to the given bool and assigns it to the EnableActivationCheckpointing field.
func (o *EfficiencyConfig) SetEnableActivationCheckpointing(v bool) {
	o.EnableActivationCheckpointing = &v
}

// GetEnableActivationOffloading returns the EnableActivationOffloading field value if set, zero value otherwise.
func (o *EfficiencyConfig) GetEnableActivationOffloading() bool {
	if o == nil || IsNil(o.EnableActivationOffloading) {
		var ret bool
		return ret
	}
	return *o.EnableActivationOffloading
}

// GetEnableActivationOffloadingOk returns a tuple with the EnableActivationOffloading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EfficiencyConfig) GetEnableActivationOffloadingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableActivationOffloading) {
		return nil, false
	}
	return o.EnableActivationOffloading, true
}

// HasEnableActivationOffloading returns a boolean if a field has been set.
func (o *EfficiencyConfig) HasEnableActivationOffloading() bool {
	if o != nil && !IsNil(o.EnableActivationOffloading) {
		return true
	}

	return false
}

// SetEnableActivationOffloading gets a reference to the given bool and assigns it to the EnableActivationOffloading field.
func (o *EfficiencyConfig) SetEnableActivationOffloading(v bool) {
	o.EnableActivationOffloading = &v
}

// GetMemoryEfficientFsdpWrap returns the MemoryEfficientFsdpWrap field value if set, zero value otherwise.
func (o *EfficiencyConfig) GetMemoryEfficientFsdpWrap() bool {
	if o == nil || IsNil(o.MemoryEfficientFsdpWrap) {
		var ret bool
		return ret
	}
	return *o.MemoryEfficientFsdpWrap
}

// GetMemoryEfficientFsdpWrapOk returns a tuple with the MemoryEfficientFsdpWrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EfficiencyConfig) GetMemoryEfficientFsdpWrapOk() (*bool, bool) {
	if o == nil || IsNil(o.MemoryEfficientFsdpWrap) {
		return nil, false
	}
	return o.MemoryEfficientFsdpWrap, true
}

// HasMemoryEfficientFsdpWrap returns a boolean if a field has been set.
func (o *EfficiencyConfig) HasMemoryEfficientFsdpWrap() bool {
	if o != nil && !IsNil(o.MemoryEfficientFsdpWrap) {
		return true
	}

	return false
}

// SetMemoryEfficientFsdpWrap gets a reference to the given bool and assigns it to the MemoryEfficientFsdpWrap field.
func (o *EfficiencyConfig) SetMemoryEfficientFsdpWrap(v bool) {
	o.MemoryEfficientFsdpWrap = &v
}

// GetFsdpCpuOffload returns the FsdpCpuOffload field value if set, zero value otherwise.
func (o *EfficiencyConfig) GetFsdpCpuOffload() bool {
	if o == nil || IsNil(o.FsdpCpuOffload) {
		var ret bool
		return ret
	}
	return *o.FsdpCpuOffload
}

// GetFsdpCpuOffloadOk returns a tuple with the FsdpCpuOffload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EfficiencyConfig) GetFsdpCpuOffloadOk() (*bool, bool) {
	if o == nil || IsNil(o.FsdpCpuOffload) {
		return nil, false
	}
	return o.FsdpCpuOffload, true
}

// HasFsdpCpuOffload returns a boolean if a field has been set.
func (o *EfficiencyConfig) HasFsdpCpuOffload() bool {
	if o != nil && !IsNil(o.FsdpCpuOffload) {
		return true
	}

	return false
}

// SetFsdpCpuOffload gets a reference to the given bool and assigns it to the FsdpCpuOffload field.
func (o *EfficiencyConfig) SetFsdpCpuOffload(v bool) {
	o.FsdpCpuOffload = &v
}

func (o EfficiencyConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EfficiencyConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableActivationCheckpointing) {
		toSerialize["enable_activation_checkpointing"] = o.EnableActivationCheckpointing
	}
	if !IsNil(o.EnableActivationOffloading) {
		toSerialize["enable_activation_offloading"] = o.EnableActivationOffloading
	}
	if !IsNil(o.MemoryEfficientFsdpWrap) {
		toSerialize["memory_efficient_fsdp_wrap"] = o.MemoryEfficientFsdpWrap
	}
	if !IsNil(o.FsdpCpuOffload) {
		toSerialize["fsdp_cpu_offload"] = o.FsdpCpuOffload
	}
	return toSerialize, nil
}

type NullableEfficiencyConfig struct {
	value *EfficiencyConfig
	isSet bool
}

func (v NullableEfficiencyConfig) Get() *EfficiencyConfig {
	return v.value
}

func (v *NullableEfficiencyConfig) Set(val *EfficiencyConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEfficiencyConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEfficiencyConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEfficiencyConfig(val *EfficiencyConfig) *NullableEfficiencyConfig {
	return &NullableEfficiencyConfig{value: val, isSet: true}
}

func (v NullableEfficiencyConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEfficiencyConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


