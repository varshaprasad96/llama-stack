openapi: 3.1.0
info:
  description: |-
    This is the specification of the Llama Stack that provides
                    a set of endpoints and their corresponding interfaces that are
    tailored to
                    best leverage Llama Models.
  title: Llama Stack Specification
  version: v1
servers:
- url: http://any-hosted-llama-stack.com
security:
- Default: []
tags:
- description: |-
    Main functionalities provided by this API:
    - Create agents with specific instructions and ability to use tools.
    - Interactions with agents are grouped into sessions ("threads"), and each interaction is called a "turn".
    - Agents can be provided with various tools (see the ToolGroups and ToolRuntime APIs for more details).
    - Agents can be provided with various shields (see the Safety API for more details).
    - Agents can also use Memory to retrieve information from knowledge bases. See the RAG Tool and Vector IO APIs for more details.
  name: Agents
  x-displayName: Agents API for creating and interacting with agentic systems.
- description: |-
    This is an asynchronous API. If the request is successful, the response will be a job which can be polled for completion.

    NOTE: This API is not yet implemented and is subject to change in concert with other asynchronous APIs
    including (post-training, evals, etc).
  name: BatchInference (Coming Soon)
  x-displayName: Batch inference API for generating completions and chat completions.
- name: Benchmarks
- name: DatasetIO
- name: Datasets
- name: Eval
  x-displayName: Llama Stack Evaluation API for running evaluations on model and agent
    candidates.
- name: Files
- description: |-
    This API provides the raw interface to the underlying models. Two kinds of models are supported:
    - LLM models: these models generate "raw" and "chat" (conversational) completions.
    - Embedding models: these models generate embeddings to be used for semantic search.
  name: Inference
  x-displayName: "Llama Stack Inference API for generating completions, chat completions,\
    \ and embeddings."
- name: Inspect
- name: Models
- name: PostTraining (Coming Soon)
- name: Providers
  x-displayName: "Providers API for inspecting, listing, and modifying providers and\
    \ their configurations."
- name: Safety
- name: Scoring
- name: ScoringFunctions
- name: Shields
- name: SyntheticDataGeneration (Coming Soon)
- name: Telemetry
- name: ToolGroups
- name: ToolRuntime
- name: VectorDBs
- name: VectorIO
paths:
  /v1/datasetio/append-rows/{dataset_id}:
    post:
      description: ""
      parameters:
      - explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppendRowsRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - DatasetIO
  /v1/inference/batch-chat-completion:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchChatCompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchChatCompletionResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Inference
  /v1/inference/batch-completion:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCompletionResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Inference
  /v1/post-training/job/cancel:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTrainingJobRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - PostTraining (Coming Soon)
  /v1/inference/chat-completion:
    post:
      description: Generate a chat completion for the given messages using the specified
        model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCompletionResponse'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/ChatCompletionResponseStreamChunk'
          description: "If stream=False, returns a ChatCompletionResponse with the\
            \ full completion. If stream=True, returns an SSE event stream of ChatCompletionResponseStreamChunk"
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - BatchInference (Coming Soon)
  /v1/inference/completion:
    post:
      description: Generate a completion for the given content using the specified
        model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/CompletionResponseStreamChunk'
          description: "If stream=False, returns a CompletionResponse with the full\
            \ completion. If stream=True, returns an SSE event stream of CompletionResponseStreamChunk"
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - BatchInference (Coming Soon)
  /v1/agents:
    get:
      description: List all agents.
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAgentsResponse'
          description: A ListAgentsResponse.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
    post:
      description: Create an agent with the given configuration.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentCreateResponse'
          description: An AgentCreateResponse with the agent ID.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/agents/{agent_id}/session:
    post:
      description: Create a new session for an agent.
      parameters:
      - description: The ID of the agent to create the session for.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSessionCreateResponse'
          description: An AgentSessionCreateResponse.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/agents/{agent_id}/session/{session_id}/turn:
    post:
      description: Create a new turn for an agent.
      parameters:
      - description: The ID of the agent to create the turn for.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the session to create the turn for.
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentTurnRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turn'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/AgentTurnResponseStreamChunk'
          description: "If stream=False, returns a Turn object. If stream=True, returns\
            \ an SSE event stream of AgentTurnResponseStreamChunk"
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/files:
    get:
      description: List all buckets.
      parameters:
      - explode: true
        in: query
        name: bucket
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBucketResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Files
    post:
      description: Create a new upload session for a file identified by a bucket and
        key.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUploadSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Files
  /v1/agents/{agent_id}:
    delete:
      description: Delete an agent by its ID.
      parameters:
      - description: The ID of the agent to delete.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
    get:
      description: Describe an agent by its ID.
      parameters:
      - description: ID of the agent.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: An Agent of the agent.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/agents/{agent_id}/session/{session_id}:
    delete:
      description: Delete an agent session by its ID.
      parameters:
      - description: The ID of the session to delete.
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the agent to delete the session for.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
    get:
      description: Retrieve an agent session by its ID.
      parameters:
      - description: The ID of the session to get.
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the agent to get the session for.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      - description: (Optional) List of turn IDs to filter the session by.
        explode: true
        in: query
        name: turn_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/files/{bucket}/{key}:
    delete:
      description: Delete a file identified by a bucket and key.
      parameters:
      - description: "Bucket name (valid chars: a-zA-Z0-9_-)"
        explode: false
        in: path
        name: bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "Key under which the file is stored (valid chars: a-zA-Z0-9_-/.)"
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Files
    get:
      description: Get a file info identified by a bucket and key.
      parameters:
      - description: "Bucket name (valid chars: a-zA-Z0-9_-)"
        explode: false
        in: path
        name: bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "Key under which the file is stored (valid chars: a-zA-Z0-9_-/.)"
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Files
  /v1/inference/embeddings:
    post:
      description: Generate embeddings for content pieces using the specified model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingsResponse'
          description: "An array of embeddings, one for each content. Each embedding\
            \ is a list of floats. The dimensionality of the embedding is model-specific;\
            \ you can check model metadata using /models/{model_id}"
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Inference
  /v1/eval/benchmarks/{benchmark_id}/evaluations:
    post:
      description: Evaluate a list of rows on a benchmark.
      parameters:
      - description: The ID of the benchmark to run the evaluation on.
        explode: false
        in: path
        name: benchmark_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateRowsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateResponse'
          description: EvaluateResponse object containing generations and scores
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Eval
  /v1/agents/{agent_id}/session/{session_id}/turn/{turn_id}/step/{step_id}:
    get:
      description: Retrieve an agent step by its ID.
      parameters:
      - description: The ID of the agent to get the step for.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the session to get the step for.
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the turn to get the step for.
        explode: false
        in: path
        name: turn_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the step to get.
        explode: false
        in: path
        name: step_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentStepResponse'
          description: An AgentStepResponse.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/agents/{agent_id}/session/{session_id}/turn/{turn_id}:
    get:
      description: Retrieve an agent turn by its ID.
      parameters:
      - description: The ID of the agent to get the turn for.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the session to get the turn for.
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the turn to get.
        explode: false
        in: path
        name: turn_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turn'
          description: A Turn.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/eval/benchmarks/{benchmark_id}:
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: benchmark_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benchmark'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Benchmarks
  /v1/datasets/{dataset_id}:
    delete:
      description: ""
      parameters:
      - explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Datasets
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Datasets
  /v1/models/{model_id}:
    delete:
      description: ""
      parameters:
      - explode: false
        in: path
        name: model_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Models
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: model_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Models
  /v1/scoring-functions/{scoring_fn_id}:
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: scoring_fn_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoringFn'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ScoringFunctions
  /v1/shields/{identifier}:
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shield'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Shields
  /v1/telemetry/traces/{trace_id}/spans/{span_id}:
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: trace_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: span_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Span'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Telemetry
  /v1/telemetry/spans/{span_id}/tree:
    post:
      description: ""
      parameters:
      - explode: false
        in: path
        name: span_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSpanTreeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySpanTreeResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Telemetry
  /v1/tools/{tool_name}:
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: tool_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolGroups
  /v1/toolgroups/{toolgroup_id}:
    delete:
      description: Unregister a tool group
      parameters:
      - explode: false
        in: path
        name: toolgroup_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolGroups
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: toolgroup_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolGroup'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolGroups
  /v1/telemetry/traces/{trace_id}:
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: trace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trace'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Telemetry
  /v1/post-training/job/artifacts:
    get:
      description: ""
      parameters:
      - explode: true
        in: query
        name: job_uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrainingJobArtifactsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - PostTraining (Coming Soon)
  /v1/post-training/job/status:
    get:
      description: ""
      parameters:
      - explode: true
        in: query
        name: job_uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrainingJobStatusResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - PostTraining (Coming Soon)
  /v1/post-training/jobs:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPostTrainingJobsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - PostTraining (Coming Soon)
  /v1/files/session:{upload_id}:
    get:
      description: Returns information about an existsing upload session
      parameters:
      - description: ID of the upload session
        explode: false
        in: path
        name: upload_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Files
    post:
      description: "Upload file content to an existing upload session. On the server,\
        \ request body will have the raw bytes that are uploaded."
      parameters:
      - description: ID of the upload session
        explode: false
        in: path
        name: upload_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Files
  /v1/vector-dbs/{vector_db_id}:
    delete:
      description: ""
      parameters:
      - explode: false
        in: path
        name: vector_db_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - VectorDBs
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: vector_db_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorDB'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - VectorDBs
  /v1/health:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthInfo'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Inspect
  /v1/tool-runtime/rag-tool/insert:
    post:
      description: Index documents so they can be used by the RAG system
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolRuntime
  /v1/vector-io/insert:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertChunksRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - VectorIO
  /v1/providers/{provider_id}:
    get:
      description: ""
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInfo'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Providers
  /v1/tool-runtime/invoke:
    post:
      description: Run a tool with the given arguments
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvokeToolRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolInvocationResult'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolRuntime
  /v1/datasetio/iterrows/{dataset_id}:
    get:
      description: |-
        Get a paginated list of rows from a dataset.
        Uses offset-based pagination where:
        - start_index: The starting index (0-based). If None, starts from beginning.
        - limit: Number of items to return. If None or -1, returns all items.

        The response includes:
        - data: List of items for the current page
        - has_more: Whether there are more items available after this set
      parameters:
      - description: The ID of the dataset to get the rows from.
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      - description: Index into dataset for the first row to get. Get all rows if
          None.
        explode: true
        in: query
        name: start_index
        required: false
        schema:
          type: integer
        style: form
      - description: The number of rows to get.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - DatasetIO
  /v1/eval/benchmarks/{benchmark_id}/jobs/{job_id}:
    delete:
      description: Cancel a job.
      parameters:
      - description: The ID of the benchmark to run the evaluation on.
        explode: false
        in: path
        name: benchmark_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the job to cancel.
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Eval
    get:
      description: Get the status of a job.
      parameters:
      - description: The ID of the benchmark to run the evaluation on.
        explode: false
        in: path
        name: benchmark_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the job to get the status of.
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: The status of the evaluationjob.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Eval
  /v1/eval/benchmarks/{benchmark_id}/jobs/{job_id}/result:
    get:
      description: Get the result of a job.
      parameters:
      - description: The ID of the benchmark to run the evaluation on.
        explode: false
        in: path
        name: benchmark_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the job to get the result of.
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateResponse'
          description: The result of the job.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Eval
  /v1/agents/{agent_id}/sessions:
    get:
      description: List all session(s) of a given agent.
      parameters:
      - description: The ID of the agent to list sessions for.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAgentSessionsResponse'
          description: A ListAgentSessionsResponse.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/eval/benchmarks:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBenchmarksResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Benchmarks
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBenchmarkRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Benchmarks
  /v1/datasets:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Datasets
    post:
      description: Register a new dataset.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDatasetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Datasets
  /v1/files/{bucket}:
    get:
      description: List all files in a bucket.
      parameters:
      - description: "Bucket name (valid chars: a-zA-Z0-9_-)"
        explode: false
        in: path
        name: bucket
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Files
  /v1/models:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Models
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterModelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Models
  /v1/providers:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvidersResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Providers
  /v1/inspect/routes:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Inspect
  /v1/tool-runtime/list-tools:
    get:
      description: ""
      parameters:
      - explode: true
        in: query
        name: tool_group_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: mcp_endpoint
        required: false
        schema:
          $ref: '#/components/schemas/URL'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListToolDefsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolRuntime
  /v1/scoring-functions:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScoringFunctionsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ScoringFunctions
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterScoringFunctionRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ScoringFunctions
  /v1/shields:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListShieldsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Shields
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterShieldRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shield'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Shields
  /v1/toolgroups:
    get:
      description: List tool groups with optional provider
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListToolGroupsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolGroups
    post:
      description: Register a tool group
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterToolGroupRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolGroups
  /v1/tools:
    get:
      description: List tools with optional tool group
      parameters:
      - explode: true
        in: query
        name: toolgroup_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListToolsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolGroups
  /v1/vector-dbs:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVectorDBsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - VectorDBs
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterVectorDbRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorDB'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - VectorDBs
  /v1/telemetry/events:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEventRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Telemetry
  /v1/openai/v1/chat/completions:
    post:
      description: Generate an OpenAI-compatible chat completion for the given messages
        using the specified model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenaiChatCompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v1_openai_v1_chat_completions_post_200_response'
          description: Response from an OpenAI-compatible chat completion request.
            **OR** Chunk from a streaming response to an OpenAI-compatible chat completion
            request.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Inference
  /v1/openai/v1/completions:
    post:
      description: Generate an OpenAI-compatible completion for the given prompt using
        the specified model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenaiCompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenAICompletion'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Inference
  /v1/openai/v1/models:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenAIListModelsResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Models
  /v1/post-training/preference-optimize:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceOptimizeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrainingJob'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - PostTraining (Coming Soon)
  /v1/tool-runtime/rag-tool/query:
    post:
      description: Query the RAG system for context; typically invoked by the agent
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RAGQueryResult'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - ToolRuntime
  /v1/vector-io/query:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryChunksRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryChunksResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - VectorIO
  /v1/telemetry/spans:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySpansRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySpansResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Telemetry
  /v1/telemetry/traces:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTracesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTracesResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Telemetry
  /v1/agents/{agent_id}/session/{session_id}/turn/{turn_id}/resume:
    post:
      description: |-
        Resume an agent turn with executed tool call responses.
        When a Turn has the status `awaiting_input` due to pending input from client side tool calls, this endpoint can be used to submit the outputs from the tool calls once they are ready.
      parameters:
      - description: The ID of the agent to resume.
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the session to resume.
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the turn to resume.
        explode: false
        in: path
        name: turn_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeAgentTurnRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turn'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/AgentTurnResponseStreamChunk'
          description: "A Turn object if stream is False, otherwise an AsyncIterator\
            \ of AgentTurnResponseStreamChunk objects."
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Agents
  /v1/eval/benchmarks/{benchmark_id}/jobs:
    post:
      description: Run an evaluation on a benchmark.
      parameters:
      - description: The ID of the benchmark to run the evaluation on.
        explode: false
        in: path
        name: benchmark_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunEvalRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: The job that was created to run the evaluation.
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Eval
  /v1/safety/run-shield:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunShieldRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunShieldResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Safety
  /v1/telemetry/spans/export:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveSpansToDatasetRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Telemetry
  /v1/scoring/score:
    post:
      description: Score a list of rows.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResponse'
          description: ScoreResponse object containing rows and aggregated results
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Scoring
  /v1/scoring/score-batch:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreBatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreBatchResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Scoring
  /v1/post-training/supervised-fine-tune:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupervisedFineTuneRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrainingJob'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - PostTraining (Coming Soon)
  /v1/synthetic-data-generation/generate:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticDataGenerateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticDataGenerationResponse'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - SyntheticDataGeneration (Coming Soon)
  /v1/version:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequest400'
        "429":
          $ref: '#/components/responses/TooManyRequests429'
        "500":
          $ref: '#/components/responses/InternalServerError500'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
      - Inspect
components:
  responses:
    BadRequest400:
      content:
        application/json:
          example:
            status: 400
            title: Bad Request
            detail: The request was invalid or malformed
          schema:
            $ref: '#/components/schemas/Error'
      description: The request was invalid or malformed
    TooManyRequests429:
      content:
        application/json:
          example:
            status: 429
            title: Too Many Requests
            detail: You have exceeded the rate limit. Please try again later.
          schema:
            $ref: '#/components/schemas/Error'
      description: The client has sent too many requests in a given amount of time
    InternalServerError500:
      content:
        application/json:
          example:
            status: 500
            title: Internal Server Error
            detail: An unexpected error occurred. Our team has been notified.
          schema:
            $ref: '#/components/schemas/Error'
      description: The server encountered an unexpected error
    DefaultError:
      content:
        application/json:
          example:
            status: 0
            title: Error
            detail: An unexpected error occurred
          schema:
            $ref: '#/components/schemas/Error'
      description: An unexpected error occurred
  schemas:
    Error:
      additionalProperties: false
      description: Error response from the API. Roughly follows RFC 7807.
      example:
        instance: instance
        detail: detail
        title: title
        status: 0
      properties:
        status:
          description: HTTP status code
          type: integer
        title:
          description: "Error title, a short summary of the error which is invariant\
            \ for an error type"
          type: string
        detail:
          description: "Error detail, a longer human-readable description of the error"
          type: string
        instance:
          description: (Optional) A URL which can be used to retrieve more information
            about the specific occurrence of the error
          type: string
      required:
      - detail
      - status
      - title
      title: Error
    AppendRowsRequest:
      additionalProperties: false
      example:
        rows:
        - key: true
        - key: true
      properties:
        rows:
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
      required:
      - rows
      title: AppendRowsRequest
    CompletionMessage:
      additionalProperties: false
      description: A message containing the model's (assistant) response in a chat
        conversation.
      example:
        role: assistant
        stop_reason: end_of_turn
        tool_calls:
        - tool_name: brave_search
          arguments_json: arguments_json
          arguments: ToolCall_arguments
          call_id: call_id
        - tool_name: brave_search
          arguments_json: arguments_json
          arguments: ToolCall_arguments
          call_id: call_id
        content: InterleavedContent
      properties:
        role:
          default: assistant
          description: Must be "assistant" to identify this as the model's response
          enum:
          - assistant
          type: string
        content:
          $ref: '#/components/schemas/InterleavedContent'
        stop_reason:
          description: "Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`:\
            \ The model finished generating the entire response. - `StopReason.end_of_message`:\
            \ The model finished generating but generated a partial response -- usually,\
            \ a tool call. The user may call the tool and continue the conversation\
            \ with the tool's response. - `StopReason.out_of_tokens`: The model ran\
            \ out of token budget."
          enum:
          - end_of_turn
          - end_of_message
          - out_of_tokens
          type: string
        tool_calls:
          description: List of tool calls. Each tool call is a ToolCall object.
          items:
            $ref: '#/components/schemas/ToolCall'
          type: array
      required:
      - content
      - role
      - stop_reason
      title: CompletionMessage
    GrammarResponseFormat:
      additionalProperties: false
      description: Configuration for grammar-guided response generation.
      properties:
        type:
          default: grammar
          description: Must be "grammar" to identify this format type
          enum:
          - grammar
          type: string
        bnf:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          description: The BNF grammar specification the response should conform to
      required:
      - bnf
      - type
      title: GrammarResponseFormat
    GreedySamplingStrategy:
      additionalProperties: false
      example:
        type: greedy
      properties:
        type:
          default: greedy
          enum:
          - greedy
          type: string
      required:
      - type
      title: GreedySamplingStrategy
    ImageContentItem:
      additionalProperties: {}
      description: A image content item
      properties:
        type:
          default: image
          description: Discriminator type of the content item. Always "image"
        image:
          $ref: '#/components/schemas/ImageContentItem_image'
      required:
      - image
      - type
      title: ImageContentItem
    InterleavedContent:
      oneOf:
      - type: string
      - $ref: '#/components/schemas/InterleavedContentItem'
      - items:
          $ref: '#/components/schemas/InterleavedContentItem'
        type: array
    InterleavedContentItem:
      discriminator:
        mapping:
          image: '#/components/schemas/ImageContentItem'
          text: '#/components/schemas/TextContentItem'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ImageContentItem'
      - $ref: '#/components/schemas/TextContentItem'
    JsonSchemaResponseFormat:
      additionalProperties: false
      description: Configuration for JSON schema-guided response generation.
      example:
        json_schema:
          key: null
        type: json_schema
      properties:
        type:
          default: json_schema
          description: Must be "json_schema" to identify this format type
          enum:
          - json_schema
          type: string
        json_schema:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          description: "The JSON schema the response should conform to. In a Python\
            \ SDK, this is often a `pydantic` model."
      required:
      - json_schema
      - type
      title: JsonSchemaResponseFormat
    Message:
      discriminator:
        mapping:
          user: '#/components/schemas/UserMessage'
          system: '#/components/schemas/SystemMessage'
          tool: '#/components/schemas/ToolResponseMessage'
          assistant: '#/components/schemas/CompletionMessage'
        propertyName: role
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/SystemMessage'
      - $ref: '#/components/schemas/ToolResponseMessage'
      - $ref: '#/components/schemas/CompletionMessage'
    ResponseFormat:
      discriminator:
        mapping:
          json_schema: '#/components/schemas/JsonSchemaResponseFormat'
          grammar: '#/components/schemas/GrammarResponseFormat'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/JsonSchemaResponseFormat'
      - $ref: '#/components/schemas/GrammarResponseFormat'
    SamplingParams:
      additionalProperties: false
      description: Sampling parameters.
      example:
        stop:
        - stop
        - stop
        max_tokens: 0
        strategy:
          type: greedy
        repetition_penalty: 6.027456183070403
      properties:
        strategy:
          $ref: '#/components/schemas/SamplingStrategy'
        max_tokens:
          default: 0
          description: The maximum number of tokens that can be generated in the completion.
            The token count of your prompt plus max_tokens cannot exceed the model's
            context length.
          type: integer
        repetition_penalty:
          default: 1.0
          description: "Number between -2.0 and 2.0. Positive values penalize new\
            \ tokens based on whether they appear in the text so far, increasing the\
            \ model's likelihood to talk about new topics."
          type: number
        stop:
          description: Up to 4 sequences where the API will stop generating further
            tokens. The returned text will not contain the stop sequence.
          items:
            type: string
          type: array
      required:
      - strategy
      title: SamplingParams
    SamplingStrategy:
      discriminator:
        mapping:
          greedy: '#/components/schemas/GreedySamplingStrategy'
          top_p: '#/components/schemas/TopPSamplingStrategy'
          top_k: '#/components/schemas/TopKSamplingStrategy'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/GreedySamplingStrategy'
      - $ref: '#/components/schemas/TopPSamplingStrategy'
      - $ref: '#/components/schemas/TopKSamplingStrategy'
    SystemMessage:
      additionalProperties: false
      description: A system message providing instructions or context to the model.
      example:
        role: system
        content: InterleavedContent
      properties:
        role:
          default: system
          description: Must be "system" to identify this as a system message
          enum:
          - system
          type: string
        content:
          $ref: '#/components/schemas/InterleavedContent'
      required:
      - content
      - role
      title: SystemMessage
    TextContentItem:
      additionalProperties: false
      description: A text content item
      properties:
        type:
          default: text
          description: Discriminator type of the content item. Always "text"
          enum:
          - text
          type: string
        text:
          description: Text content
          type: string
      required:
      - text
      - type
      title: TextContentItem
    ToolCall:
      additionalProperties: false
      example:
        tool_name: brave_search
        arguments_json: arguments_json
        arguments: ToolCall_arguments
        call_id: call_id
      properties:
        call_id:
          type: string
        tool_name:
          $ref: '#/components/schemas/ToolCall_tool_name'
        arguments:
          $ref: '#/components/schemas/ToolCall_arguments'
        arguments_json:
          type: string
      required:
      - arguments
      - call_id
      - tool_name
      title: ToolCall
    ToolConfig:
      additionalProperties: false
      description: Configuration for tool use.
      example:
        system_message_behavior: append
        tool_choice: auto
        tool_prompt_format: json
      properties:
        tool_choice:
          $ref: '#/components/schemas/ToolConfig_tool_choice'
        tool_prompt_format:
          description: "(Optional) Instructs the model how to format tool calls. By\
            \ default, Llama Stack will attempt to use a format that is best adapted\
            \ to the model. - `ToolPromptFormat.json`: The tool calls are formatted\
            \ as a JSON object. - `ToolPromptFormat.function_tag`: The tool calls\
            \ are enclosed in a <function=function_name> tag. - `ToolPromptFormat.python_list`:\
            \ The tool calls are output as Python syntax -- a list of function calls."
          enum:
          - json
          - function_tag
          - python_list
          type: string
        system_message_behavior:
          default: append
          description: "(Optional) Config for how to override the default system prompt.\
            \ - `SystemMessageBehavior.append`: Appends the provided system message\
            \ to the default system prompt. - `SystemMessageBehavior.replace`: Replaces\
            \ the default system prompt with the provided system message. The system\
            \ message can include the string '{{function_definitions}}' to indicate\
            \ where the function definitions should be inserted."
          enum:
          - append
          - replace
          type: string
      title: ToolConfig
    ToolDefinition:
      additionalProperties: false
      example:
        tool_name: brave_search
        description: description
        parameters:
          key:
            default: true
            description: description
            required: true
            param_type: param_type
      properties:
        tool_name:
          $ref: '#/components/schemas/ToolCall_tool_name'
        description:
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/ToolParamDefinition'
      required:
      - tool_name
      title: ToolDefinition
    ToolParamDefinition:
      additionalProperties: false
      example:
        default: true
        description: description
        required: true
        param_type: param_type
      properties:
        param_type:
          type: string
        description:
          type: string
        required:
          default: true
          type: boolean
        default:
          $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - param_type
      title: ToolParamDefinition
    ToolResponseMessage:
      additionalProperties: false
      description: A message representing the result of a tool invocation.
      properties:
        role:
          default: tool
          description: Must be "tool" to identify this as a tool response
          enum:
          - tool
          type: string
        call_id:
          description: Unique identifier for the tool call this response is for
          type: string
        content:
          $ref: '#/components/schemas/InterleavedContent'
      required:
      - call_id
      - content
      - role
      title: ToolResponseMessage
    TopKSamplingStrategy:
      additionalProperties: false
      properties:
        type:
          default: top_k
          enum:
          - top_k
          type: string
        top_k:
          type: integer
      required:
      - top_k
      - type
      title: TopKSamplingStrategy
    TopPSamplingStrategy:
      additionalProperties: {}
      properties:
        type:
          default: top_p
        temperature: {}
        top_p:
          default: 0.95
      required:
      - type
      title: TopPSamplingStrategy
    URL:
      additionalProperties: false
      example:
        uri: uri
      properties:
        uri:
          type: string
      required:
      - uri
      title: URL
    UserMessage:
      additionalProperties: false
      description: A message from the user in a chat conversation.
      example:
        role: user
        context: null
        content: InterleavedContent
      properties:
        role:
          default: user
          description: Must be "user" to identify this as a user message
          enum:
          - user
          type: string
        content:
          $ref: '#/components/schemas/InterleavedContent'
        context:
          $ref: '#/components/schemas/InterleavedContent'
      required:
      - content
      - role
      title: UserMessage
    BatchChatCompletionRequest:
      additionalProperties: {}
      example:
        response_format:
          json_schema:
            key: null
          type: json_schema
        tool_config:
          system_message_behavior: append
          tool_choice: auto
          tool_prompt_format: json
        model_id: model_id
        sampling_params:
          stop:
          - stop
          - stop
          max_tokens: 0
          strategy:
            type: greedy
          repetition_penalty: 6.027456183070403
        tools:
        - tool_name: brave_search
          description: description
          parameters:
            key:
              default: true
              description: description
              required: true
              param_type: param_type
        - tool_name: brave_search
          description: description
          parameters:
            key:
              default: true
              description: description
              required: true
              param_type: param_type
        messages_batch:
        - - role: user
            context: null
            content: InterleavedContent
          - role: user
            context: null
            content: InterleavedContent
        - - role: user
            context: null
            content: InterleavedContent
          - role: user
            context: null
            content: InterleavedContent
        logprobs:
          top_k: 1
      properties:
        model_id:
          type: string
        messages_batch:
          items:
            items:
              $ref: '#/components/schemas/Message'
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        tools:
          items:
            $ref: '#/components/schemas/ToolDefinition'
        tool_config:
          $ref: '#/components/schemas/ToolConfig'
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
        logprobs:
          $ref: '#/components/schemas/LogProbConfig'
      required:
      - messages_batch
      - model_id
      title: BatchChatCompletionRequest
    BatchChatCompletionResponse:
      additionalProperties: false
      example:
        batch:
        - completion_message:
            role: assistant
            stop_reason: end_of_turn
            tool_calls:
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            content: InterleavedContent
          metrics:
          - unit: unit
            metric: metric
            value: 0
          - unit: unit
            metric: metric
            value: 0
          logprobs:
          - logprobs_by_token:
              key: 6.027456183070403
          - logprobs_by_token:
              key: 6.027456183070403
        - completion_message:
            role: assistant
            stop_reason: end_of_turn
            tool_calls:
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            content: InterleavedContent
          metrics:
          - unit: unit
            metric: metric
            value: 0
          - unit: unit
            metric: metric
            value: 0
          logprobs:
          - logprobs_by_token:
              key: 6.027456183070403
          - logprobs_by_token:
              key: 6.027456183070403
      properties:
        batch:
          items:
            $ref: '#/components/schemas/ChatCompletionResponse'
          type: array
      required:
      - batch
      title: BatchChatCompletionResponse
    ChatCompletionResponse:
      additionalProperties: false
      description: Response from a chat completion request.
      example:
        completion_message:
          role: assistant
          stop_reason: end_of_turn
          tool_calls:
          - tool_name: brave_search
            arguments_json: arguments_json
            arguments: ToolCall_arguments
            call_id: call_id
          - tool_name: brave_search
            arguments_json: arguments_json
            arguments: ToolCall_arguments
            call_id: call_id
          content: InterleavedContent
        metrics:
        - unit: unit
          metric: metric
          value: 0
        - unit: unit
          metric: metric
          value: 0
        logprobs:
        - logprobs_by_token:
            key: 6.027456183070403
        - logprobs_by_token:
            key: 6.027456183070403
      properties:
        metrics:
          items:
            $ref: '#/components/schemas/MetricInResponse'
          type: array
        completion_message:
          $ref: '#/components/schemas/CompletionMessage'
        logprobs:
          description: Optional log probabilities for generated tokens
          items:
            $ref: '#/components/schemas/TokenLogProbs'
          type: array
      required:
      - completion_message
      title: ChatCompletionResponse
    MetricInResponse:
      additionalProperties: false
      example:
        unit: unit
        metric: metric
        value: 0
      properties:
        metric:
          type: string
        value:
          $ref: '#/components/schemas/MetricInResponse_value'
        unit:
          type: string
      required:
      - metric
      - value
      title: MetricInResponse
    TokenLogProbs:
      additionalProperties: false
      description: Log probabilities for generated tokens.
      example:
        logprobs_by_token:
          key: 6.027456183070403
      properties:
        logprobs_by_token:
          additionalProperties:
            type: number
          description: Dictionary mapping tokens to their log probabilities
      required:
      - logprobs_by_token
      title: TokenLogProbs
    BatchCompletionRequest:
      additionalProperties: {}
      example:
        response_format:
          json_schema:
            key: null
          type: json_schema
        content_batch:
        - InterleavedContent
        - InterleavedContent
        model_id: model_id
        sampling_params:
          stop:
          - stop
          - stop
          max_tokens: 0
          strategy:
            type: greedy
          repetition_penalty: 6.027456183070403
        logprobs:
          top_k: 1
      properties:
        model_id:
          type: string
        content_batch:
          items:
            $ref: '#/components/schemas/InterleavedContent'
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
        logprobs:
          $ref: '#/components/schemas/LogProbConfig'
      required:
      - content_batch
      - model_id
      title: BatchCompletionRequest
    BatchCompletionResponse:
      additionalProperties: false
      example:
        batch:
        - stop_reason: end_of_turn
          metrics:
          - unit: unit
            metric: metric
            value: 0
          - unit: unit
            metric: metric
            value: 0
          content: content
          logprobs:
          - logprobs_by_token:
              key: 6.027456183070403
          - logprobs_by_token:
              key: 6.027456183070403
        - stop_reason: end_of_turn
          metrics:
          - unit: unit
            metric: metric
            value: 0
          - unit: unit
            metric: metric
            value: 0
          content: content
          logprobs:
          - logprobs_by_token:
              key: 6.027456183070403
          - logprobs_by_token:
              key: 6.027456183070403
      properties:
        batch:
          items:
            $ref: '#/components/schemas/CompletionResponse'
          type: array
      required:
      - batch
      title: BatchCompletionResponse
    CompletionResponse:
      additionalProperties: false
      description: Response from a completion request.
      example:
        stop_reason: end_of_turn
        metrics:
        - unit: unit
          metric: metric
          value: 0
        - unit: unit
          metric: metric
          value: 0
        content: content
        logprobs:
        - logprobs_by_token:
            key: 6.027456183070403
        - logprobs_by_token:
            key: 6.027456183070403
      properties:
        metrics:
          items:
            $ref: '#/components/schemas/MetricInResponse'
          type: array
        content:
          description: The generated completion text
          type: string
        stop_reason:
          description: Reason why generation stopped
          enum:
          - end_of_turn
          - end_of_message
          - out_of_tokens
          type: string
        logprobs:
          description: Optional log probabilities for generated tokens
          items:
            $ref: '#/components/schemas/TokenLogProbs'
          type: array
      required:
      - content
      - stop_reason
      title: CompletionResponse
    CancelTrainingJobRequest:
      additionalProperties: false
      example:
        job_uuid: job_uuid
      properties:
        job_uuid:
          type: string
      required:
      - job_uuid
      title: CancelTrainingJobRequest
    ChatCompletionRequest:
      additionalProperties: {}
      example:
        response_format:
          json_schema:
            key: null
          type: json_schema
        stream: true
        messages:
        - role: user
          context: null
          content: InterleavedContent
        - role: user
          context: null
          content: InterleavedContent
        tool_choice: auto
        tool_config:
          system_message_behavior: append
          tool_choice: auto
          tool_prompt_format: json
        model_id: model_id
        sampling_params:
          stop:
          - stop
          - stop
          max_tokens: 0
          strategy:
            type: greedy
          repetition_penalty: 6.027456183070403
        tools:
        - tool_name: brave_search
          description: description
          parameters:
            key:
              default: true
              description: description
              required: true
              param_type: param_type
        - tool_name: brave_search
          description: description
          parameters:
            key:
              default: true
              description: description
              required: true
              param_type: param_type
        tool_prompt_format: json
        logprobs:
          top_k: 0
      properties:
        model_id:
          description: The identifier of the model to use. The model must be registered
            with Llama Stack and available via the /models endpoint.
        messages:
          description: List of messages in the conversation
          items:
            $ref: '#/components/schemas/Message'
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        tools:
          description: (Optional) List of tool definitions available to the model
          items:
            $ref: '#/components/schemas/ToolDefinition'
        tool_choice:
          description: "(Optional) Whether tool use is required or automatic. Defaults\
            \ to ToolChoice.auto. .. deprecated:: Use tool_config instead."
          enum:
          - auto
          - required
          - none
        tool_prompt_format:
          description: "(Optional) Instructs the model how to format tool calls. By\
            \ default, Llama Stack will attempt to use a format that is best adapted\
            \ to the model. - `ToolPromptFormat.json`: The tool calls are formatted\
            \ as a JSON object. - `ToolPromptFormat.function_tag`: The tool calls\
            \ are enclosed in a <function=function_name> tag. - `ToolPromptFormat.python_list`:\
            \ The tool calls are output as Python syntax -- a list of function calls.\
            \ .. deprecated:: Use tool_config instead."
          enum:
          - json
          - function_tag
          - python_list
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
        stream:
          description: "(Optional) If True, generate an SSE event stream of the response.\
            \ Defaults to False."
        logprobs:
          $ref: '#/components/schemas/ChatCompletionRequest_logprobs'
        tool_config:
          $ref: '#/components/schemas/ToolConfig'
      required:
      - messages
      - model_id
      title: ChatCompletionRequest
    ChatCompletionResponseEvent:
      additionalProperties: false
      description: An event during chat completion generation.
      properties:
        event_type:
          description: Type of the event
          enum:
          - start
          - complete
          - progress
          type: string
        delta:
          $ref: '#/components/schemas/ContentDelta'
        logprobs:
          description: Optional log probabilities for generated tokens
          items:
            $ref: '#/components/schemas/TokenLogProbs'
          type: array
        stop_reason:
          description: "Optional reason why generation stopped, if complete"
          enum:
          - end_of_turn
          - end_of_message
          - out_of_tokens
          type: string
      required:
      - delta
      - event_type
      title: ChatCompletionResponseEvent
    ChatCompletionResponseStreamChunk:
      additionalProperties: false
      description: A chunk of a streamed chat completion response.
      properties:
        metrics:
          items:
            $ref: '#/components/schemas/MetricInResponse'
          type: array
        event:
          $ref: '#/components/schemas/ChatCompletionResponseEvent'
      required:
      - event
      title: ChatCompletionResponseStreamChunk
    ContentDelta:
      discriminator:
        mapping:
          text: '#/components/schemas/TextDelta'
          image: '#/components/schemas/ImageDelta'
          tool_call: '#/components/schemas/ToolCallDelta'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/TextDelta'
      - $ref: '#/components/schemas/ImageDelta'
      - $ref: '#/components/schemas/ToolCallDelta'
    ImageDelta:
      additionalProperties: false
      properties:
        type:
          default: image
          enum:
          - image
          type: string
        image:
          type: string
      required:
      - image
      - type
      title: ImageDelta
    TextDelta:
      additionalProperties: false
      properties:
        type:
          default: text
          enum:
          - text
          type: string
        text:
          type: string
      required:
      - text
      - type
      title: TextDelta
    ToolCallDelta:
      additionalProperties: false
      properties:
        type:
          default: tool_call
          enum:
          - tool_call
          type: string
        tool_call:
          $ref: '#/components/schemas/ToolCallDelta_tool_call'
        parse_status:
          enum:
          - started
          - in_progress
          - failed
          - succeeded
          title: ToolCallParseStatus
          type: string
      required:
      - parse_status
      - tool_call
      - type
      title: ToolCallDelta
    CompletionRequest:
      additionalProperties: {}
      example:
        response_format:
          json_schema:
            key: null
          type: json_schema
        stream: true
        model_id: model_id
        sampling_params:
          stop:
          - stop
          - stop
          max_tokens: 0
          strategy:
            type: greedy
          repetition_penalty: 6.027456183070403
        content: InterleavedContent
        logprobs:
          top_k: 0
      properties:
        model_id:
          description: The identifier of the model to use. The model must be registered
            with Llama Stack and available via the /models endpoint.
        content:
          $ref: '#/components/schemas/InterleavedContent'
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
        stream:
          description: "(Optional) If True, generate an SSE event stream of the response.\
            \ Defaults to False."
        logprobs:
          $ref: '#/components/schemas/ChatCompletionRequest_logprobs'
      required:
      - content
      - model_id
      title: CompletionRequest
    CompletionResponseStreamChunk:
      additionalProperties: false
      description: A chunk of a streamed completion response.
      properties:
        metrics:
          items:
            $ref: '#/components/schemas/MetricInResponse'
          type: array
        delta:
          description: New content generated since last chunk. This can be one or
            more tokens.
          type: string
        stop_reason:
          description: "Optional reason why generation stopped, if complete"
          enum:
          - end_of_turn
          - end_of_message
          - out_of_tokens
          type: string
        logprobs:
          description: Optional log probabilities for generated tokens
          items:
            $ref: '#/components/schemas/TokenLogProbs'
          type: array
      required:
      - delta
      title: CompletionResponseStreamChunk
    AgentConfig:
      additionalProperties: false
      description: Configuration for an agent.
      example:
        enable_session_persistence: false
        instructions: instructions
        input_shields:
        - input_shields
        - input_shields
        max_infer_iters: 0
        sampling_params:
          stop:
          - stop
          - stop
          max_tokens: 0
          strategy:
            type: greedy
          repetition_penalty: 6.027456183070403
        tool_prompt_format: json
        client_tools:
        - metadata:
            key: null
          name: name
          description: description
          parameters:
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
        - metadata:
            key: null
          name: name
          description: description
          parameters:
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
        response_format:
          json_schema:
            key: null
          type: json_schema
        toolgroups:
        - AgentTool
        - AgentTool
        name: name
        tool_choice: auto
        tool_config:
          system_message_behavior: append
          tool_choice: auto
          tool_prompt_format: json
        model: model
        output_shields:
        - output_shields
        - output_shields
      properties:
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        input_shields:
          items:
            type: string
          type: array
        output_shields:
          items:
            type: string
          type: array
        toolgroups:
          items:
            $ref: '#/components/schemas/AgentTool'
          type: array
        client_tools:
          items:
            $ref: '#/components/schemas/ToolDef'
          type: array
        tool_choice:
          deprecated: true
          description: Whether tool use is required or automatic. This is a hint to
            the model which may not be followed. It depends on the Instruction Following
            capabilities of the model.
          enum:
          - auto
          - required
          - none
          title: ToolChoice
          type: string
        tool_prompt_format:
          deprecated: true
          description: Prompt format for calling custom / zero shot tools.
          enum:
          - json
          - function_tag
          - python_list
          title: ToolPromptFormat
          type: string
        tool_config:
          $ref: '#/components/schemas/ToolConfig'
        max_infer_iters:
          default: 10
          type: integer
        model:
          description: The model identifier to use for the agent
          type: string
        instructions:
          description: The system instructions for the agent
          type: string
        name:
          description: "Optional name for the agent, used in telemetry and identification"
          type: string
        enable_session_persistence:
          default: false
          description: Optional flag indicating whether session data has to be persisted
          type: boolean
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
      required:
      - instructions
      - model
      title: AgentConfig
    AgentTool:
      oneOf:
      - type: string
      - $ref: '#/components/schemas/AgentToolGroupWithArgs'
    ToolDef:
      additionalProperties: false
      example:
        metadata:
          key: null
        name: name
        description: description
        parameters:
        - default: true
          name: name
          description: description
          parameter_type: parameter_type
          required: true
        - default: true
          name: name
          description: description
          parameter_type: parameter_type
          required: true
      properties:
        name:
          type: string
        description:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/ToolParameter'
          type: array
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - name
      title: ToolDef
    ToolParameter:
      additionalProperties: false
      example:
        default: true
        name: name
        description: description
        parameter_type: parameter_type
        required: true
      properties:
        name:
          type: string
        parameter_type:
          type: string
        description:
          type: string
        required:
          default: true
          type: boolean
        default:
          $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - description
      - name
      - parameter_type
      - required
      title: ToolParameter
    CreateAgentRequest:
      additionalProperties: false
      example:
        agent_config:
          enable_session_persistence: false
          instructions: instructions
          input_shields:
          - input_shields
          - input_shields
          max_infer_iters: 0
          sampling_params:
            stop:
            - stop
            - stop
            max_tokens: 0
            strategy:
              type: greedy
            repetition_penalty: 6.027456183070403
          tool_prompt_format: json
          client_tools:
          - metadata:
              key: null
            name: name
            description: description
            parameters:
            - default: true
              name: name
              description: description
              parameter_type: parameter_type
              required: true
            - default: true
              name: name
              description: description
              parameter_type: parameter_type
              required: true
          - metadata:
              key: null
            name: name
            description: description
            parameters:
            - default: true
              name: name
              description: description
              parameter_type: parameter_type
              required: true
            - default: true
              name: name
              description: description
              parameter_type: parameter_type
              required: true
          response_format:
            json_schema:
              key: null
            type: json_schema
          toolgroups:
          - AgentTool
          - AgentTool
          name: name
          tool_choice: auto
          tool_config:
            system_message_behavior: append
            tool_choice: auto
            tool_prompt_format: json
          model: model
          output_shields:
          - output_shields
          - output_shields
      properties:
        agent_config:
          $ref: '#/components/schemas/AgentConfig'
      required:
      - agent_config
      title: CreateAgentRequest
    AgentCreateResponse:
      additionalProperties: false
      example:
        agent_id: agent_id
      properties:
        agent_id:
          type: string
      required:
      - agent_id
      title: AgentCreateResponse
    CreateAgentSessionRequest:
      additionalProperties: false
      example:
        session_name: session_name
      properties:
        session_name:
          description: The name of the session to create.
          type: string
      required:
      - session_name
      title: CreateAgentSessionRequest
    AgentSessionCreateResponse:
      additionalProperties: false
      example:
        session_id: session_id
      properties:
        session_id:
          type: string
      required:
      - session_id
      title: AgentSessionCreateResponse
    CreateAgentTurnRequest:
      additionalProperties: {}
      example:
        stream: true
        documents:
        - mime_type: mime_type
          content: Document_content
        - mime_type: mime_type
          content: Document_content
        toolgroups:
        - AgentTool
        - AgentTool
        messages:
        - role: user
          context: null
          content: InterleavedContent
        - role: user
          context: null
          content: InterleavedContent
        tool_config:
          system_message_behavior: append
          tool_choice: auto
          tool_prompt_format: json
      properties:
        messages:
          description: List of messages to start the turn with.
          items:
            $ref: '#/components/schemas/CreateAgentTurnRequest_messages_inner'
        stream:
          description: "(Optional) If True, generate an SSE event stream of the response.\
            \ Defaults to False."
        documents:
          description: (Optional) List of documents to create the turn with.
          items:
            $ref: '#/components/schemas/Document'
        toolgroups:
          description: "(Optional) List of toolgroups to create the turn with, will\
            \ be used in addition to the agent's config toolgroups for the request."
          items:
            $ref: '#/components/schemas/AgentTool'
        tool_config:
          $ref: '#/components/schemas/ToolConfig'
      required:
      - messages
      title: CreateAgentTurnRequest
    InferenceStep:
      additionalProperties: false
      description: An inference step in an agent turn.
      example:
        completed_at: 2000-01-23T04:56:07.000+00:00
        model_response:
          role: assistant
          stop_reason: end_of_turn
          tool_calls:
          - tool_name: brave_search
            arguments_json: arguments_json
            arguments: ToolCall_arguments
            call_id: call_id
          - tool_name: brave_search
            arguments_json: arguments_json
            arguments: ToolCall_arguments
            call_id: call_id
          content: InterleavedContent
        step_type: inference
        started_at: 2000-01-23T04:56:07.000+00:00
        step_id: step_id
        turn_id: turn_id
      properties:
        turn_id:
          description: The ID of the turn.
          type: string
        step_id:
          description: The ID of the step.
          type: string
        started_at:
          description: The time the step started.
          format: date-time
          type: string
        completed_at:
          description: The time the step completed.
          format: date-time
          type: string
        step_type:
          default: inference
          enum:
          - inference
          type: string
        model_response:
          $ref: '#/components/schemas/CompletionMessage'
      required:
      - model_response
      - step_id
      - step_type
      - turn_id
      title: InferenceStep
    MemoryRetrievalStep:
      additionalProperties: false
      description: A memory retrieval step in an agent turn.
      properties:
        turn_id:
          description: The ID of the turn.
          type: string
        step_id:
          description: The ID of the step.
          type: string
        started_at:
          description: The time the step started.
          format: date-time
          type: string
        completed_at:
          description: The time the step completed.
          format: date-time
          type: string
        step_type:
          default: memory_retrieval
          enum:
          - memory_retrieval
          type: string
        vector_db_ids:
          description: The IDs of the vector databases to retrieve context from.
          type: string
        inserted_context:
          $ref: '#/components/schemas/InterleavedContent'
      required:
      - inserted_context
      - step_id
      - step_type
      - turn_id
      - vector_db_ids
      title: MemoryRetrievalStep
    SafetyViolation:
      additionalProperties: false
      example:
        violation_level: info
        metadata:
          key: true
        user_message: user_message
      properties:
        violation_level:
          $ref: '#/components/schemas/ViolationLevel'
        user_message:
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - metadata
      - violation_level
      title: SafetyViolation
    ShieldCallStep:
      additionalProperties: false
      description: A shield call step in an agent turn.
      properties:
        turn_id:
          description: The ID of the turn.
          type: string
        step_id:
          description: The ID of the step.
          type: string
        started_at:
          description: The time the step started.
          format: date-time
          type: string
        completed_at:
          description: The time the step completed.
          format: date-time
          type: string
        step_type:
          default: shield_call
          enum:
          - shield_call
          type: string
        violation:
          $ref: '#/components/schemas/SafetyViolation'
      required:
      - step_id
      - step_type
      - turn_id
      title: ShieldCallStep
    ToolExecutionStep:
      additionalProperties: false
      description: A tool execution step in an agent turn.
      properties:
        turn_id:
          description: The ID of the turn.
          type: string
        step_id:
          description: The ID of the step.
          type: string
        started_at:
          description: The time the step started.
          format: date-time
          type: string
        completed_at:
          description: The time the step completed.
          format: date-time
          type: string
        step_type:
          default: tool_execution
          enum:
          - tool_execution
          type: string
        tool_calls:
          description: The tool calls to execute.
          items:
            $ref: '#/components/schemas/ToolCall'
          type: array
        tool_responses:
          description: The tool responses from the tool calls.
          items:
            $ref: '#/components/schemas/ToolResponse'
          type: array
      required:
      - step_id
      - step_type
      - tool_calls
      - tool_responses
      - turn_id
      title: ToolExecutionStep
    ToolResponse:
      additionalProperties: false
      example:
        tool_name: brave_search
        metadata:
          key: true
        content: InterleavedContent
        call_id: call_id
      properties:
        call_id:
          type: string
        tool_name:
          $ref: '#/components/schemas/ToolCall_tool_name'
        content:
          $ref: '#/components/schemas/InterleavedContent'
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - call_id
      - content
      - tool_name
      title: ToolResponse
    Turn:
      additionalProperties: {}
      description: A single turn in an interaction with an Agentic System.
      example:
        completed_at: 2000-01-23T04:56:07.000+00:00
        input_messages:
        - role: user
          context: null
          content: InterleavedContent
        - role: user
          context: null
          content: InterleavedContent
        output_attachments:
        - mime_type: mime_type
          content: Attachment_content
        - mime_type: mime_type
          content: Attachment_content
        session_id: session_id
        started_at: 2000-01-23T04:56:07.000+00:00
        steps:
        - completed_at: 2000-01-23T04:56:07.000+00:00
          model_response:
            role: assistant
            stop_reason: end_of_turn
            tool_calls:
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            content: InterleavedContent
          step_type: inference
          started_at: 2000-01-23T04:56:07.000+00:00
          step_id: step_id
          turn_id: turn_id
        - completed_at: 2000-01-23T04:56:07.000+00:00
          model_response:
            role: assistant
            stop_reason: end_of_turn
            tool_calls:
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            content: InterleavedContent
          step_type: inference
          started_at: 2000-01-23T04:56:07.000+00:00
          step_id: step_id
          turn_id: turn_id
        turn_id: turn_id
        output_message:
          role: assistant
          stop_reason: end_of_turn
          tool_calls:
          - tool_name: brave_search
            arguments_json: arguments_json
            arguments: ToolCall_arguments
            call_id: call_id
          - tool_name: brave_search
            arguments_json: arguments_json
            arguments: ToolCall_arguments
            call_id: call_id
          content: InterleavedContent
      properties:
        turn_id:
          type: string
        session_id:
          type: string
        input_messages:
          items:
            $ref: '#/components/schemas/CreateAgentTurnRequest_messages_inner'
        steps:
          items:
            $ref: '#/components/schemas/Turn_steps_inner'
        output_message:
          $ref: '#/components/schemas/CompletionMessage'
        output_attachments:
          items:
            $ref: '#/components/schemas/Attachment'
        started_at:
          format: date-time
        completed_at:
          format: date-time
      required:
      - input_messages
      - output_message
      - session_id
      - started_at
      - steps
      - turn_id
      title: Turn
    ViolationLevel:
      enum:
      - info
      - warn
      - error
      title: ViolationLevel
      type: string
    AgentTurnResponseEvent:
      additionalProperties: false
      properties:
        payload:
          $ref: '#/components/schemas/AgentTurnResponseEventPayload'
      required:
      - payload
      title: AgentTurnResponseEvent
    AgentTurnResponseEventPayload:
      discriminator:
        mapping:
          step_start: '#/components/schemas/AgentTurnResponseStepStartPayload'
          step_progress: '#/components/schemas/AgentTurnResponseStepProgressPayload'
          step_complete: '#/components/schemas/AgentTurnResponseStepCompletePayload'
          turn_start: '#/components/schemas/AgentTurnResponseTurnStartPayload'
          turn_complete: '#/components/schemas/AgentTurnResponseTurnCompletePayload'
          turn_awaiting_input: '#/components/schemas/AgentTurnResponseTurnAwaitingInputPayload'
        propertyName: event_type
      oneOf:
      - $ref: '#/components/schemas/AgentTurnResponseStepStartPayload'
      - $ref: '#/components/schemas/AgentTurnResponseStepProgressPayload'
      - $ref: '#/components/schemas/AgentTurnResponseStepCompletePayload'
      - $ref: '#/components/schemas/AgentTurnResponseTurnStartPayload'
      - $ref: '#/components/schemas/AgentTurnResponseTurnCompletePayload'
      - $ref: '#/components/schemas/AgentTurnResponseTurnAwaitingInputPayload'
    AgentTurnResponseStepCompletePayload:
      additionalProperties: false
      properties:
        event_type:
          default: step_complete
          enum:
          - step_complete
          type: string
        step_type:
          description: Type of the step in an agent turn.
          enum:
          - inference
          - tool_execution
          - shield_call
          - memory_retrieval
          title: StepType
          type: string
        step_id:
          type: string
        step_details:
          $ref: '#/components/schemas/Turn_steps_inner'
      required:
      - event_type
      - step_details
      - step_id
      - step_type
      title: AgentTurnResponseStepCompletePayload
    AgentTurnResponseStepProgressPayload:
      additionalProperties: false
      properties:
        event_type:
          default: step_progress
          enum:
          - step_progress
          type: string
        step_type:
          description: Type of the step in an agent turn.
          enum:
          - inference
          - tool_execution
          - shield_call
          - memory_retrieval
          title: StepType
          type: string
        step_id:
          type: string
        delta:
          $ref: '#/components/schemas/ContentDelta'
      required:
      - delta
      - event_type
      - step_id
      - step_type
      title: AgentTurnResponseStepProgressPayload
    AgentTurnResponseStepStartPayload:
      additionalProperties: false
      properties:
        event_type:
          default: step_start
          enum:
          - step_start
          type: string
        step_type:
          description: Type of the step in an agent turn.
          enum:
          - inference
          - tool_execution
          - shield_call
          - memory_retrieval
          title: StepType
          type: string
        step_id:
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - event_type
      - step_id
      - step_type
      title: AgentTurnResponseStepStartPayload
    AgentTurnResponseStreamChunk:
      additionalProperties: false
      description: streamed agent turn completion response.
      properties:
        event:
          $ref: '#/components/schemas/AgentTurnResponseEvent'
      required:
      - event
      title: AgentTurnResponseStreamChunk
    AgentTurnResponseTurnAwaitingInputPayload:
      additionalProperties: false
      properties:
        event_type:
          default: turn_awaiting_input
          enum:
          - turn_awaiting_input
          type: string
        turn:
          $ref: '#/components/schemas/Turn'
      required:
      - event_type
      - turn
      title: AgentTurnResponseTurnAwaitingInputPayload
    AgentTurnResponseTurnCompletePayload:
      additionalProperties: false
      properties:
        event_type:
          default: turn_complete
          enum:
          - turn_complete
          type: string
        turn:
          $ref: '#/components/schemas/Turn'
      required:
      - event_type
      - turn
      title: AgentTurnResponseTurnCompletePayload
    AgentTurnResponseTurnStartPayload:
      additionalProperties: false
      properties:
        event_type:
          default: turn_start
          enum:
          - turn_start
          type: string
        turn_id:
          type: string
      required:
      - event_type
      - turn_id
      title: AgentTurnResponseTurnStartPayload
    CreateUploadSessionRequest:
      additionalProperties: false
      example:
        bucket: bucket
        size: 0
        mime_type: mime_type
        key: key
      properties:
        bucket:
          description: "Bucket under which the file is stored (valid chars: a-zA-Z0-9_-)"
          type: string
        key:
          description: "Key under which the file is stored (valid chars: a-zA-Z0-9_-/.)"
          type: string
        mime_type:
          description: MIME type of the file
          type: string
        size:
          description: File size in bytes
          type: integer
      required:
      - bucket
      - key
      - mime_type
      - size
      title: CreateUploadSessionRequest
    FileUploadResponse:
      additionalProperties: false
      description: Response after initiating a file upload session.
      example:
        offset: 0
        size: 6
        id: id
        url: url
      properties:
        id:
          description: ID of the upload session
          type: string
        url:
          description: Upload URL for the file or file parts
          type: string
        offset:
          description: Upload content offset
          type: integer
        size:
          description: Upload content size
          type: integer
      required:
      - id
      - offset
      - size
      - url
      title: FileUploadResponse
    EmbeddingsRequest:
      additionalProperties: false
      example:
        text_truncation: none
        contents:
        - EmbeddingsRequest_contents
        - EmbeddingsRequest_contents
        model_id: model_id
        task_type: query
        output_dimension: 0
      properties:
        model_id:
          description: The identifier of the model to use. The model must be an embedding
            model registered with Llama Stack and available via the /models endpoint.
          type: string
        contents:
          $ref: '#/components/schemas/EmbeddingsRequest_contents'
        text_truncation:
          description: (Optional) Config for how to truncate text for embedding when
            text is longer than the model's max sequence length.
          enum:
          - none
          - start
          - end
          type: string
        output_dimension:
          description: (Optional) Output dimensionality for the embeddings. Only supported
            by Matryoshka models.
          type: integer
        task_type:
          description: (Optional) How is the embedding being used? This is only supported
            by asymmetric embedding models.
          enum:
          - query
          - document
          type: string
      required:
      - contents
      - model_id
      title: EmbeddingsRequest
    EmbeddingsResponse:
      additionalProperties: false
      description: Response containing generated embeddings.
      example:
        embeddings:
        - - 0.8008281904610115
          - 0.8008281904610115
        - - 0.8008281904610115
          - 0.8008281904610115
      properties:
        embeddings:
          description: "List of embedding vectors, one per input content. Each embedding\
            \ is a list of floats. The dimensionality of the embedding is model-specific;\
            \ you can check model metadata using /models/{model_id}"
          items:
            items:
              type: number
            type: array
          type: array
      required:
      - embeddings
      title: EmbeddingsResponse
    AgentCandidate:
      additionalProperties: false
      description: An agent candidate for evaluation.
      properties:
        type:
          default: agent
          enum:
          - agent
          type: string
        config:
          $ref: '#/components/schemas/AgentConfig'
      required:
      - config
      - type
      title: AgentCandidate
    AggregationFunctionType:
      enum:
      - average
      - weighted_average
      - median
      - categorical_count
      - accuracy
      title: AggregationFunctionType
      type: string
    BasicScoringFnParams:
      additionalProperties: false
      properties:
        type:
          default: basic
          enum:
          - basic
          type: string
        aggregation_functions:
          items:
            $ref: '#/components/schemas/AggregationFunctionType'
          type: array
      required:
      - type
      title: BasicScoringFnParams
    BenchmarkConfig:
      additionalProperties: false
      description: A benchmark configuration for evaluation.
      example:
        scoring_params:
          key:
            aggregation_functions:
            - average
            - average
            judge_score_regexes:
            - judge_score_regexes
            - judge_score_regexes
            type: llm_as_judge
            judge_model: judge_model
            prompt_template: prompt_template
        num_examples: 0
        eval_candidate:
          system_message:
            role: system
            content: InterleavedContent
          model: model
          type: model
          sampling_params:
            stop:
            - stop
            - stop
            max_tokens: 0
            strategy:
              type: greedy
            repetition_penalty: 6.027456183070403
      properties:
        eval_candidate:
          $ref: '#/components/schemas/EvalCandidate'
        scoring_params:
          additionalProperties:
            $ref: '#/components/schemas/ScoringFnParams'
          description: Map between scoring function id and parameters for each scoring
            function you want to run
        num_examples:
          description: "(Optional) The number of examples to evaluate. If not provided,\
            \ all examples in the dataset will be evaluated"
          type: integer
      required:
      - eval_candidate
      - scoring_params
      title: BenchmarkConfig
    EvalCandidate:
      discriminator:
        mapping:
          model: '#/components/schemas/ModelCandidate'
          agent: '#/components/schemas/AgentCandidate'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ModelCandidate'
      - $ref: '#/components/schemas/AgentCandidate'
    LLMAsJudgeScoringFnParams:
      additionalProperties: false
      example:
        aggregation_functions:
        - average
        - average
        judge_score_regexes:
        - judge_score_regexes
        - judge_score_regexes
        type: llm_as_judge
        judge_model: judge_model
        prompt_template: prompt_template
      properties:
        type:
          default: llm_as_judge
          enum:
          - llm_as_judge
          type: string
        judge_model:
          type: string
        prompt_template:
          type: string
        judge_score_regexes:
          items:
            type: string
          type: array
        aggregation_functions:
          items:
            $ref: '#/components/schemas/AggregationFunctionType'
          type: array
      required:
      - judge_model
      - type
      title: LLMAsJudgeScoringFnParams
    ModelCandidate:
      additionalProperties: false
      description: A model candidate for evaluation.
      example:
        system_message:
          role: system
          content: InterleavedContent
        model: model
        type: model
        sampling_params:
          stop:
          - stop
          - stop
          max_tokens: 0
          strategy:
            type: greedy
          repetition_penalty: 6.027456183070403
      properties:
        type:
          default: model
          enum:
          - model
          type: string
        model:
          description: The model ID to evaluate.
          type: string
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        system_message:
          $ref: '#/components/schemas/SystemMessage'
      required:
      - model
      - sampling_params
      - type
      title: ModelCandidate
    RegexParserScoringFnParams:
      additionalProperties: false
      properties:
        type:
          default: regex_parser
          enum:
          - regex_parser
          type: string
        parsing_regexes:
          items:
            type: string
          type: array
        aggregation_functions:
          items:
            $ref: '#/components/schemas/AggregationFunctionType'
          type: array
      required:
      - type
      title: RegexParserScoringFnParams
    ScoringFnParams:
      discriminator:
        mapping:
          llm_as_judge: '#/components/schemas/LLMAsJudgeScoringFnParams'
          regex_parser: '#/components/schemas/RegexParserScoringFnParams'
          basic: '#/components/schemas/BasicScoringFnParams'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LLMAsJudgeScoringFnParams'
      - $ref: '#/components/schemas/RegexParserScoringFnParams'
      - $ref: '#/components/schemas/BasicScoringFnParams'
    EvaluateRowsRequest:
      additionalProperties: false
      example:
        benchmark_config:
          scoring_params:
            key:
              aggregation_functions:
              - average
              - average
              judge_score_regexes:
              - judge_score_regexes
              - judge_score_regexes
              type: llm_as_judge
              judge_model: judge_model
              prompt_template: prompt_template
          num_examples: 0
          eval_candidate:
            system_message:
              role: system
              content: InterleavedContent
            model: model
            type: model
            sampling_params:
              stop:
              - stop
              - stop
              max_tokens: 0
              strategy:
                type: greedy
              repetition_penalty: 6.027456183070403
        input_rows:
        - key: true
        - key: true
        scoring_functions:
        - scoring_functions
        - scoring_functions
      properties:
        input_rows:
          description: The rows to evaluate.
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
        scoring_functions:
          description: The scoring functions to use for the evaluation.
          items:
            type: string
          type: array
        benchmark_config:
          $ref: '#/components/schemas/BenchmarkConfig'
      required:
      - benchmark_config
      - input_rows
      - scoring_functions
      title: EvaluateRowsRequest
    EvaluateResponse:
      additionalProperties: false
      description: The response from an evaluation.
      example:
        scores:
          key:
            score_rows:
            - key: null
            - key: null
            aggregated_results:
              key: null
        generations:
        - key: true
        - key: true
      properties:
        generations:
          description: The generations from the evaluation.
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
        scores:
          additionalProperties:
            $ref: '#/components/schemas/ScoringResult'
          description: The scores from the evaluation.
      required:
      - generations
      - scores
      title: EvaluateResponse
    ScoringResult:
      additionalProperties: false
      description: A scoring result for a single row.
      example:
        score_rows:
        - key: null
        - key: null
        aggregated_results:
          key: null
      properties:
        score_rows:
          description: The scoring result for each row. Each row is a map of column
            name to value.
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
        aggregated_results:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          description: Map of metric name to aggregated value
      required:
      - aggregated_results
      - score_rows
      title: ScoringResult
    Agent:
      additionalProperties: false
      example:
        agent_config:
          enable_session_persistence: false
          instructions: instructions
          input_shields:
          - input_shields
          - input_shields
          max_infer_iters: 0
          sampling_params:
            stop:
            - stop
            - stop
            max_tokens: 0
            strategy:
              type: greedy
            repetition_penalty: 6.027456183070403
          tool_prompt_format: json
          client_tools:
          - metadata:
              key: null
            name: name
            description: description
            parameters:
            - default: true
              name: name
              description: description
              parameter_type: parameter_type
              required: true
            - default: true
              name: name
              description: description
              parameter_type: parameter_type
              required: true
          - metadata:
              key: null
            name: name
            description: description
            parameters:
            - default: true
              name: name
              description: description
              parameter_type: parameter_type
              required: true
            - default: true
              name: name
              description: description
              parameter_type: parameter_type
              required: true
          response_format:
            json_schema:
              key: null
            type: json_schema
          toolgroups:
          - AgentTool
          - AgentTool
          name: name
          tool_choice: auto
          tool_config:
            system_message_behavior: append
            tool_choice: auto
            tool_prompt_format: json
          model: model
          output_shields:
          - output_shields
          - output_shields
        agent_id: agent_id
        created_at: 2000-01-23T04:56:07.000+00:00
      properties:
        agent_id:
          type: string
        agent_config:
          $ref: '#/components/schemas/AgentConfig'
        created_at:
          format: date-time
          type: string
      required:
      - agent_config
      - agent_id
      - created_at
      title: Agent
    Session:
      additionalProperties: false
      description: A single session of an interaction with an Agentic System.
      example:
        session_name: session_name
        session_id: session_id
        started_at: 2000-01-23T04:56:07.000+00:00
        turns:
        - completed_at: 2000-01-23T04:56:07.000+00:00
          input_messages:
          - role: user
            context: null
            content: InterleavedContent
          - role: user
            context: null
            content: InterleavedContent
          output_attachments:
          - mime_type: mime_type
            content: Attachment_content
          - mime_type: mime_type
            content: Attachment_content
          session_id: session_id
          started_at: 2000-01-23T04:56:07.000+00:00
          steps:
          - completed_at: 2000-01-23T04:56:07.000+00:00
            model_response:
              role: assistant
              stop_reason: end_of_turn
              tool_calls:
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              content: InterleavedContent
            step_type: inference
            started_at: 2000-01-23T04:56:07.000+00:00
            step_id: step_id
            turn_id: turn_id
          - completed_at: 2000-01-23T04:56:07.000+00:00
            model_response:
              role: assistant
              stop_reason: end_of_turn
              tool_calls:
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              content: InterleavedContent
            step_type: inference
            started_at: 2000-01-23T04:56:07.000+00:00
            step_id: step_id
            turn_id: turn_id
          turn_id: turn_id
          output_message:
            role: assistant
            stop_reason: end_of_turn
            tool_calls:
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            content: InterleavedContent
        - completed_at: 2000-01-23T04:56:07.000+00:00
          input_messages:
          - role: user
            context: null
            content: InterleavedContent
          - role: user
            context: null
            content: InterleavedContent
          output_attachments:
          - mime_type: mime_type
            content: Attachment_content
          - mime_type: mime_type
            content: Attachment_content
          session_id: session_id
          started_at: 2000-01-23T04:56:07.000+00:00
          steps:
          - completed_at: 2000-01-23T04:56:07.000+00:00
            model_response:
              role: assistant
              stop_reason: end_of_turn
              tool_calls:
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              content: InterleavedContent
            step_type: inference
            started_at: 2000-01-23T04:56:07.000+00:00
            step_id: step_id
            turn_id: turn_id
          - completed_at: 2000-01-23T04:56:07.000+00:00
            model_response:
              role: assistant
              stop_reason: end_of_turn
              tool_calls:
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              content: InterleavedContent
            step_type: inference
            started_at: 2000-01-23T04:56:07.000+00:00
            step_id: step_id
            turn_id: turn_id
          turn_id: turn_id
          output_message:
            role: assistant
            stop_reason: end_of_turn
            tool_calls:
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            content: InterleavedContent
      properties:
        session_id:
          type: string
        session_name:
          type: string
        turns:
          items:
            $ref: '#/components/schemas/Turn'
          type: array
        started_at:
          format: date-time
          type: string
      required:
      - session_id
      - session_name
      - started_at
      - turns
      title: Session
    AgentStepResponse:
      additionalProperties: false
      example:
        step:
          completed_at: 2000-01-23T04:56:07.000+00:00
          model_response:
            role: assistant
            stop_reason: end_of_turn
            tool_calls:
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            - tool_name: brave_search
              arguments_json: arguments_json
              arguments: ToolCall_arguments
              call_id: call_id
            content: InterleavedContent
          step_type: inference
          started_at: 2000-01-23T04:56:07.000+00:00
          step_id: step_id
          turn_id: turn_id
      properties:
        step:
          $ref: '#/components/schemas/Turn_steps_inner'
      required:
      - step
      title: AgentStepResponse
    Benchmark:
      additionalProperties: false
      example:
        identifier: identifier
        provider_resource_id: provider_resource_id
        metadata:
          key: true
        dataset_id: dataset_id
        provider_id: provider_id
        type: benchmark
        scoring_functions:
        - scoring_functions
        - scoring_functions
      properties:
        identifier:
          type: string
        provider_resource_id:
          type: string
        provider_id:
          type: string
        type:
          default: benchmark
          enum:
          - benchmark
          type: string
        dataset_id:
          type: string
        scoring_functions:
          items:
            type: string
          type: array
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - dataset_id
      - identifier
      - metadata
      - provider_id
      - provider_resource_id
      - scoring_functions
      - type
      title: Benchmark
    DataSource:
      discriminator:
        mapping:
          uri: '#/components/schemas/URIDataSource'
          rows: '#/components/schemas/RowsDataSource'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/URIDataSource'
      - $ref: '#/components/schemas/RowsDataSource'
    Dataset:
      additionalProperties: false
      example:
        identifier: identifier
        provider_resource_id: provider_resource_id
        metadata:
          key: true
        purpose: post-training/messages
        provider_id: provider_id
        source:
          type: uri
          uri: uri
        type: dataset
      properties:
        identifier:
          type: string
        provider_resource_id:
          type: string
        provider_id:
          type: string
        type:
          default: dataset
          enum:
          - dataset
          type: string
        purpose:
          description: Purpose of the dataset. Each purpose has a required input data
            schema.
          enum:
          - post-training/messages
          - eval/question-answer
          - eval/messages-answer
          title: DatasetPurpose
          type: string
        source:
          $ref: '#/components/schemas/DataSource'
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - identifier
      - metadata
      - provider_id
      - provider_resource_id
      - purpose
      - source
      - type
      title: Dataset
    RowsDataSource:
      additionalProperties: false
      description: A dataset stored in rows.
      properties:
        type:
          default: rows
          enum:
          - rows
          type: string
        rows:
          description: "The dataset is stored in rows. E.g. - [ {\"messages\": [{\"\
            role\": \"user\", \"content\": \"Hello, world!\"}, {\"role\": \"assistant\"\
            , \"content\": \"Hello, world!\"}]} ]"
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
      required:
      - rows
      - type
      title: RowsDataSource
    URIDataSource:
      additionalProperties: false
      description: A dataset that can be obtained from a URI.
      example:
        type: uri
        uri: uri
      properties:
        type:
          default: uri
          enum:
          - uri
          type: string
        uri:
          description: "The dataset can be obtained from a URI. E.g. - \"https://mywebsite.com/mydata.jsonl\"\
            \ - \"lsfs://mydata.jsonl\" - \"data:csv;base64,{base64_content}\""
          type: string
      required:
      - type
      - uri
      title: URIDataSource
    FileResponse:
      additionalProperties: false
      description: Response representing a file entry.
      example:
        bucket: bucket
        mime_type: mime_type
        bytes: 0
        created_at: 6
        key: key
        url: url
      properties:
        bucket:
          description: "Bucket under which the file is stored (valid chars: a-zA-Z0-9_-)"
          type: string
        key:
          description: "Key under which the file is stored (valid chars: a-zA-Z0-9_-/.)"
          type: string
        mime_type:
          description: MIME type of the file
          type: string
        url:
          description: Upload URL for the file contents
          type: string
        bytes:
          description: Size of the file in bytes
          type: integer
        created_at:
          description: Timestamp of when the file was created
          type: integer
      required:
      - bucket
      - bytes
      - created_at
      - key
      - mime_type
      - url
      title: FileResponse
    Model:
      additionalProperties: false
      example:
        identifier: identifier
        provider_resource_id: provider_resource_id
        metadata:
          key: true
        model_type: llm
        provider_id: provider_id
        type: model
      properties:
        identifier:
          type: string
        provider_resource_id:
          type: string
        provider_id:
          type: string
        type:
          default: model
          enum:
          - model
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        model_type:
          $ref: '#/components/schemas/ModelType'
      required:
      - identifier
      - metadata
      - model_type
      - provider_id
      - provider_resource_id
      - type
      title: Model
    ModelType:
      enum:
      - llm
      - embedding
      title: ModelType
      type: string
    AgentTurnInputType:
      additionalProperties: false
      properties:
        type:
          default: agent_turn_input
          enum:
          - agent_turn_input
          type: string
      required:
      - type
      title: AgentTurnInputType
    ArrayType:
      additionalProperties: false
      properties:
        type:
          default: array
          enum:
          - array
          type: string
      required:
      - type
      title: ArrayType
    BooleanType:
      additionalProperties: false
      properties:
        type:
          default: boolean
          enum:
          - boolean
          type: string
      required:
      - type
      title: BooleanType
    ChatCompletionInputType:
      additionalProperties: false
      properties:
        type:
          default: chat_completion_input
          enum:
          - chat_completion_input
          type: string
      required:
      - type
      title: ChatCompletionInputType
    CompletionInputType:
      additionalProperties: false
      properties:
        type:
          default: completion_input
          enum:
          - completion_input
          type: string
      required:
      - type
      title: CompletionInputType
    JsonType:
      additionalProperties: false
      properties:
        type:
          default: json
          enum:
          - json
          type: string
      required:
      - type
      title: JsonType
    NumberType:
      additionalProperties: false
      properties:
        type:
          default: number
          enum:
          - number
          type: string
      required:
      - type
      title: NumberType
    ObjectType:
      additionalProperties: false
      properties:
        type:
          default: object
          enum:
          - object
          type: string
      required:
      - type
      title: ObjectType
    ParamType:
      discriminator:
        mapping:
          string: '#/components/schemas/StringType'
          number: '#/components/schemas/NumberType'
          boolean: '#/components/schemas/BooleanType'
          array: '#/components/schemas/ArrayType'
          object: '#/components/schemas/ObjectType'
          json: '#/components/schemas/JsonType'
          union: '#/components/schemas/UnionType'
          chat_completion_input: '#/components/schemas/ChatCompletionInputType'
          completion_input: '#/components/schemas/CompletionInputType'
          agent_turn_input: '#/components/schemas/AgentTurnInputType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/StringType'
      - $ref: '#/components/schemas/NumberType'
      - $ref: '#/components/schemas/BooleanType'
      - $ref: '#/components/schemas/ArrayType'
      - $ref: '#/components/schemas/ObjectType'
      - $ref: '#/components/schemas/JsonType'
      - $ref: '#/components/schemas/UnionType'
      - $ref: '#/components/schemas/ChatCompletionInputType'
      - $ref: '#/components/schemas/CompletionInputType'
      - $ref: '#/components/schemas/AgentTurnInputType'
    ScoringFn:
      additionalProperties: false
      example:
        return_type:
          type: string
        identifier: identifier
        provider_resource_id: provider_resource_id
        metadata:
          key: true
        provider_id: provider_id
        description: description
        type: scoring_function
        params:
          aggregation_functions:
          - average
          - average
          judge_score_regexes:
          - judge_score_regexes
          - judge_score_regexes
          type: llm_as_judge
          judge_model: judge_model
          prompt_template: prompt_template
      properties:
        identifier:
          type: string
        provider_resource_id:
          type: string
        provider_id:
          type: string
        type:
          default: scoring_function
          enum:
          - scoring_function
          type: string
        description:
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        return_type:
          $ref: '#/components/schemas/ParamType'
        params:
          $ref: '#/components/schemas/ScoringFnParams'
      required:
      - identifier
      - metadata
      - provider_id
      - provider_resource_id
      - return_type
      - type
      title: ScoringFn
    StringType:
      additionalProperties: false
      example:
        type: string
      properties:
        type:
          default: string
          enum:
          - string
          type: string
      required:
      - type
      title: StringType
    UnionType:
      additionalProperties: false
      properties:
        type:
          default: union
          enum:
          - union
          type: string
      required:
      - type
      title: UnionType
    Shield:
      additionalProperties: false
      description: A safety shield resource that can be used to check content
      example:
        identifier: identifier
        provider_resource_id: provider_resource_id
        provider_id: provider_id
        type: shield
        params:
          key: true
      properties:
        identifier:
          type: string
        provider_resource_id:
          type: string
        provider_id:
          type: string
        type:
          default: shield
          enum:
          - shield
          type: string
        params:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - identifier
      - provider_id
      - provider_resource_id
      - type
      title: Shield
    Span:
      additionalProperties: false
      example:
        parent_span_id: parent_span_id
        start_time: 2000-01-23T04:56:07.000+00:00
        trace_id: trace_id
        span_id: span_id
        name: name
        end_time: 2000-01-23T04:56:07.000+00:00
        attributes:
          key: true
      properties:
        span_id:
          type: string
        trace_id:
          type: string
        parent_span_id:
          type: string
        name:
          type: string
        start_time:
          format: date-time
          type: string
        end_time:
          format: date-time
          type: string
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - name
      - span_id
      - start_time
      - trace_id
      title: Span
    GetSpanTreeRequest:
      additionalProperties: false
      example:
        max_depth: 0
        attributes_to_return:
        - attributes_to_return
        - attributes_to_return
      properties:
        attributes_to_return:
          items:
            type: string
          type: array
        max_depth:
          type: integer
      title: GetSpanTreeRequest
    SpanStatus:
      enum:
      - ok
      - error
      title: SpanStatus
      type: string
    SpanWithStatus:
      additionalProperties: false
      example:
        parent_span_id: parent_span_id
        start_time: 2000-01-23T04:56:07.000+00:00
        trace_id: trace_id
        span_id: span_id
        name: name
        end_time: 2000-01-23T04:56:07.000+00:00
        attributes:
          key: true
        status: ok
      properties:
        span_id:
          type: string
        trace_id:
          type: string
        parent_span_id:
          type: string
        name:
          type: string
        start_time:
          format: date-time
          type: string
        end_time:
          format: date-time
          type: string
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        status:
          $ref: '#/components/schemas/SpanStatus'
      required:
      - name
      - span_id
      - start_time
      - trace_id
      title: SpanWithStatus
    QuerySpanTreeResponse:
      additionalProperties: false
      example:
        data:
          key:
            parent_span_id: parent_span_id
            start_time: 2000-01-23T04:56:07.000+00:00
            trace_id: trace_id
            span_id: span_id
            name: name
            end_time: 2000-01-23T04:56:07.000+00:00
            attributes:
              key: true
            status: ok
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/SpanWithStatus'
      required:
      - data
      title: QuerySpanTreeResponse
    Tool:
      additionalProperties: false
      example:
        tool_host: distribution
        identifier: identifier
        provider_resource_id: provider_resource_id
        metadata:
          key: true
        provider_id: provider_id
        description: description
        type: tool
        parameters:
        - default: true
          name: name
          description: description
          parameter_type: parameter_type
          required: true
        - default: true
          name: name
          description: description
          parameter_type: parameter_type
          required: true
        toolgroup_id: toolgroup_id
      properties:
        identifier:
          type: string
        provider_resource_id:
          type: string
        provider_id:
          type: string
        type:
          default: tool
          enum:
          - tool
          type: string
        toolgroup_id:
          type: string
        tool_host:
          $ref: '#/components/schemas/ToolHost'
        description:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/ToolParameter'
          type: array
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - description
      - identifier
      - parameters
      - provider_id
      - provider_resource_id
      - tool_host
      - toolgroup_id
      - type
      title: Tool
    ToolHost:
      enum:
      - distribution
      - client
      - model_context_protocol
      title: ToolHost
      type: string
    ToolGroup:
      additionalProperties: false
      example:
        args:
          key: true
        identifier: identifier
        provider_resource_id: provider_resource_id
        mcp_endpoint:
          uri: uri
        provider_id: provider_id
        type: tool_group
      properties:
        identifier:
          type: string
        provider_resource_id:
          type: string
        provider_id:
          type: string
        type:
          default: tool_group
          enum:
          - tool_group
          type: string
        mcp_endpoint:
          $ref: '#/components/schemas/URL'
        args:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - identifier
      - provider_id
      - provider_resource_id
      - type
      title: ToolGroup
    Trace:
      additionalProperties: false
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        trace_id: trace_id
        root_span_id: root_span_id
        end_time: 2000-01-23T04:56:07.000+00:00
      properties:
        trace_id:
          type: string
        root_span_id:
          type: string
        start_time:
          format: date-time
          type: string
        end_time:
          format: date-time
          type: string
      required:
      - root_span_id
      - start_time
      - trace_id
      title: Trace
    Checkpoint: {}
    PostTrainingJobArtifactsResponse:
      additionalProperties: false
      description: Artifacts of a finetuning job.
      example:
        job_uuid: job_uuid
        checkpoints:
        - null
        - null
      properties:
        job_uuid:
          type: string
        checkpoints:
          items:
            $ref: '#/components/schemas/Checkpoint'
          type: array
      required:
      - checkpoints
      - job_uuid
      title: PostTrainingJobArtifactsResponse
    PostTrainingJobStatusResponse:
      additionalProperties: false
      description: Status of a finetuning job.
      example:
        job_uuid: job_uuid
        completed_at: 2000-01-23T04:56:07.000+00:00
        resources_allocated:
          key: true
        scheduled_at: 2000-01-23T04:56:07.000+00:00
        started_at: 2000-01-23T04:56:07.000+00:00
        checkpoints:
        - null
        - null
        status: completed
      properties:
        job_uuid:
          type: string
        status:
          enum:
          - completed
          - in_progress
          - failed
          - scheduled
          - cancelled
          title: JobStatus
          type: string
        scheduled_at:
          format: date-time
          type: string
        started_at:
          format: date-time
          type: string
        completed_at:
          format: date-time
          type: string
        resources_allocated:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        checkpoints:
          items:
            $ref: '#/components/schemas/Checkpoint'
          type: array
      required:
      - checkpoints
      - job_uuid
      - status
      title: PostTrainingJobStatusResponse
    ListPostTrainingJobsResponse:
      additionalProperties: {}
      example:
        data:
        - job_uuid: job_uuid
        - job_uuid: job_uuid
      properties:
        data:
          items:
            $ref: '#/components/schemas/PostTrainingJob_1'
      required:
      - data
      title: ListPostTrainingJobsResponse
    VectorDB:
      additionalProperties: false
      example:
        identifier: identifier
        provider_resource_id: provider_resource_id
        embedding_model: embedding_model
        provider_id: provider_id
        embedding_dimension: 0
        type: vector_db
      properties:
        identifier:
          type: string
        provider_resource_id:
          type: string
        provider_id:
          type: string
        type:
          default: vector_db
          enum:
          - vector_db
          type: string
        embedding_model:
          type: string
        embedding_dimension:
          type: integer
      required:
      - embedding_dimension
      - embedding_model
      - identifier
      - provider_id
      - provider_resource_id
      - type
      title: VectorDB
    HealthInfo:
      additionalProperties: false
      example:
        status: OK
      properties:
        status:
          enum:
          - OK
          - Error
          - Not Implemented
          title: HealthStatus
          type: string
      required:
      - status
      title: HealthInfo
    RAGDocument:
      additionalProperties: false
      description: A document to be used for document ingestion in the RAG Tool.
      example:
        metadata:
          key: true
        mime_type: mime_type
        document_id: document_id
        content: RAGDocument_content
      properties:
        document_id:
          description: The unique identifier for the document.
          type: string
        content:
          $ref: '#/components/schemas/RAGDocument_content'
        mime_type:
          description: The MIME type of the document.
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          description: Additional metadata for the document.
      required:
      - content
      - document_id
      - metadata
      title: RAGDocument
    InsertRequest:
      additionalProperties: false
      example:
        documents:
        - metadata:
            key: true
          mime_type: mime_type
          document_id: document_id
          content: RAGDocument_content
        - metadata:
            key: true
          mime_type: mime_type
          document_id: document_id
          content: RAGDocument_content
        vector_db_id: vector_db_id
        chunk_size_in_tokens: 0
      properties:
        documents:
          items:
            $ref: '#/components/schemas/RAGDocument'
          type: array
        vector_db_id:
          type: string
        chunk_size_in_tokens:
          type: integer
      required:
      - chunk_size_in_tokens
      - documents
      - vector_db_id
      title: InsertRequest
    InsertChunksRequest:
      additionalProperties: {}
      example:
        chunks:
        - metadata:
            key: true
          content: InterleavedContent
        - metadata:
            key: true
          content: InterleavedContent
        ttl_seconds: 0
        vector_db_id: vector_db_id
      properties:
        vector_db_id:
          type: string
        chunks:
          items:
            $ref: '#/components/schemas/Chunk'
        ttl_seconds:
          type: integer
      required:
      - chunks
      - vector_db_id
      title: InsertChunksRequest
    ProviderInfo:
      additionalProperties: false
      example:
        provider_type: provider_type
        provider_id: provider_id
        health:
          key: null
        api: api
        config:
          key: true
      properties:
        api:
          type: string
        provider_id:
          type: string
        provider_type:
          type: string
        config:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        health:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - api
      - config
      - health
      - provider_id
      - provider_type
      title: ProviderInfo
    InvokeToolRequest:
      additionalProperties: false
      example:
        tool_name: tool_name
        kwargs:
          key: true
      properties:
        tool_name:
          type: string
        kwargs:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - kwargs
      - tool_name
      title: InvokeToolRequest
    ToolInvocationResult:
      additionalProperties: false
      example:
        error_message: error_message
        metadata:
          key: true
        error_code: 0
        content: InterleavedContent
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        error_message:
          type: string
        error_code:
          type: integer
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      title: ToolInvocationResult
    PaginatedResponse:
      additionalProperties: false
      description: A generic paginated response that follows a simple format.
      example:
        data:
        - key: true
        - key: true
        has_more: true
      properties:
        data:
          description: The list of items for the current page
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
        has_more:
          description: Whether there are more items available after this set
          type: boolean
      required:
      - data
      - has_more
      title: PaginatedResponse
    Job:
      additionalProperties: false
      example:
        job_id: job_id
        status: completed
      properties:
        job_id:
          type: string
        status:
          enum:
          - completed
          - in_progress
          - failed
          - scheduled
          - cancelled
          title: JobStatus
          type: string
      required:
      - job_id
      - status
      title: Job
    ListAgentSessionsResponse:
      additionalProperties: false
      example:
        data:
        - session_name: session_name
          session_id: session_id
          started_at: 2000-01-23T04:56:07.000+00:00
          turns:
          - completed_at: 2000-01-23T04:56:07.000+00:00
            input_messages:
            - role: user
              context: null
              content: InterleavedContent
            - role: user
              context: null
              content: InterleavedContent
            output_attachments:
            - mime_type: mime_type
              content: Attachment_content
            - mime_type: mime_type
              content: Attachment_content
            session_id: session_id
            started_at: 2000-01-23T04:56:07.000+00:00
            steps:
            - completed_at: 2000-01-23T04:56:07.000+00:00
              model_response:
                role: assistant
                stop_reason: end_of_turn
                tool_calls:
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                content: InterleavedContent
              step_type: inference
              started_at: 2000-01-23T04:56:07.000+00:00
              step_id: step_id
              turn_id: turn_id
            - completed_at: 2000-01-23T04:56:07.000+00:00
              model_response:
                role: assistant
                stop_reason: end_of_turn
                tool_calls:
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                content: InterleavedContent
              step_type: inference
              started_at: 2000-01-23T04:56:07.000+00:00
              step_id: step_id
              turn_id: turn_id
            turn_id: turn_id
            output_message:
              role: assistant
              stop_reason: end_of_turn
              tool_calls:
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              content: InterleavedContent
          - completed_at: 2000-01-23T04:56:07.000+00:00
            input_messages:
            - role: user
              context: null
              content: InterleavedContent
            - role: user
              context: null
              content: InterleavedContent
            output_attachments:
            - mime_type: mime_type
              content: Attachment_content
            - mime_type: mime_type
              content: Attachment_content
            session_id: session_id
            started_at: 2000-01-23T04:56:07.000+00:00
            steps:
            - completed_at: 2000-01-23T04:56:07.000+00:00
              model_response:
                role: assistant
                stop_reason: end_of_turn
                tool_calls:
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                content: InterleavedContent
              step_type: inference
              started_at: 2000-01-23T04:56:07.000+00:00
              step_id: step_id
              turn_id: turn_id
            - completed_at: 2000-01-23T04:56:07.000+00:00
              model_response:
                role: assistant
                stop_reason: end_of_turn
                tool_calls:
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                content: InterleavedContent
              step_type: inference
              started_at: 2000-01-23T04:56:07.000+00:00
              step_id: step_id
              turn_id: turn_id
            turn_id: turn_id
            output_message:
              role: assistant
              stop_reason: end_of_turn
              tool_calls:
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              content: InterleavedContent
        - session_name: session_name
          session_id: session_id
          started_at: 2000-01-23T04:56:07.000+00:00
          turns:
          - completed_at: 2000-01-23T04:56:07.000+00:00
            input_messages:
            - role: user
              context: null
              content: InterleavedContent
            - role: user
              context: null
              content: InterleavedContent
            output_attachments:
            - mime_type: mime_type
              content: Attachment_content
            - mime_type: mime_type
              content: Attachment_content
            session_id: session_id
            started_at: 2000-01-23T04:56:07.000+00:00
            steps:
            - completed_at: 2000-01-23T04:56:07.000+00:00
              model_response:
                role: assistant
                stop_reason: end_of_turn
                tool_calls:
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                content: InterleavedContent
              step_type: inference
              started_at: 2000-01-23T04:56:07.000+00:00
              step_id: step_id
              turn_id: turn_id
            - completed_at: 2000-01-23T04:56:07.000+00:00
              model_response:
                role: assistant
                stop_reason: end_of_turn
                tool_calls:
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                content: InterleavedContent
              step_type: inference
              started_at: 2000-01-23T04:56:07.000+00:00
              step_id: step_id
              turn_id: turn_id
            turn_id: turn_id
            output_message:
              role: assistant
              stop_reason: end_of_turn
              tool_calls:
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              content: InterleavedContent
          - completed_at: 2000-01-23T04:56:07.000+00:00
            input_messages:
            - role: user
              context: null
              content: InterleavedContent
            - role: user
              context: null
              content: InterleavedContent
            output_attachments:
            - mime_type: mime_type
              content: Attachment_content
            - mime_type: mime_type
              content: Attachment_content
            session_id: session_id
            started_at: 2000-01-23T04:56:07.000+00:00
            steps:
            - completed_at: 2000-01-23T04:56:07.000+00:00
              model_response:
                role: assistant
                stop_reason: end_of_turn
                tool_calls:
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                content: InterleavedContent
              step_type: inference
              started_at: 2000-01-23T04:56:07.000+00:00
              step_id: step_id
              turn_id: turn_id
            - completed_at: 2000-01-23T04:56:07.000+00:00
              model_response:
                role: assistant
                stop_reason: end_of_turn
                tool_calls:
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                - tool_name: brave_search
                  arguments_json: arguments_json
                  arguments: ToolCall_arguments
                  call_id: call_id
                content: InterleavedContent
              step_type: inference
              started_at: 2000-01-23T04:56:07.000+00:00
              step_id: step_id
              turn_id: turn_id
            turn_id: turn_id
            output_message:
              role: assistant
              stop_reason: end_of_turn
              tool_calls:
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              - tool_name: brave_search
                arguments_json: arguments_json
                arguments: ToolCall_arguments
                call_id: call_id
              content: InterleavedContent
      properties:
        data:
          items:
            $ref: '#/components/schemas/Session'
          type: array
      required:
      - data
      title: ListAgentSessionsResponse
    ListAgentsResponse:
      additionalProperties: false
      example:
        data:
        - agent_config:
            enable_session_persistence: false
            instructions: instructions
            input_shields:
            - input_shields
            - input_shields
            max_infer_iters: 0
            sampling_params:
              stop:
              - stop
              - stop
              max_tokens: 0
              strategy:
                type: greedy
              repetition_penalty: 6.027456183070403
            tool_prompt_format: json
            client_tools:
            - metadata:
                key: null
              name: name
              description: description
              parameters:
              - default: true
                name: name
                description: description
                parameter_type: parameter_type
                required: true
              - default: true
                name: name
                description: description
                parameter_type: parameter_type
                required: true
            - metadata:
                key: null
              name: name
              description: description
              parameters:
              - default: true
                name: name
                description: description
                parameter_type: parameter_type
                required: true
              - default: true
                name: name
                description: description
                parameter_type: parameter_type
                required: true
            response_format:
              json_schema:
                key: null
              type: json_schema
            toolgroups:
            - AgentTool
            - AgentTool
            name: name
            tool_choice: auto
            tool_config:
              system_message_behavior: append
              tool_choice: auto
              tool_prompt_format: json
            model: model
            output_shields:
            - output_shields
            - output_shields
          agent_id: agent_id
          created_at: 2000-01-23T04:56:07.000+00:00
        - agent_config:
            enable_session_persistence: false
            instructions: instructions
            input_shields:
            - input_shields
            - input_shields
            max_infer_iters: 0
            sampling_params:
              stop:
              - stop
              - stop
              max_tokens: 0
              strategy:
                type: greedy
              repetition_penalty: 6.027456183070403
            tool_prompt_format: json
            client_tools:
            - metadata:
                key: null
              name: name
              description: description
              parameters:
              - default: true
                name: name
                description: description
                parameter_type: parameter_type
                required: true
              - default: true
                name: name
                description: description
                parameter_type: parameter_type
                required: true
            - metadata:
                key: null
              name: name
              description: description
              parameters:
              - default: true
                name: name
                description: description
                parameter_type: parameter_type
                required: true
              - default: true
                name: name
                description: description
                parameter_type: parameter_type
                required: true
            response_format:
              json_schema:
                key: null
              type: json_schema
            toolgroups:
            - AgentTool
            - AgentTool
            name: name
            tool_choice: auto
            tool_config:
              system_message_behavior: append
              tool_choice: auto
              tool_prompt_format: json
            model: model
            output_shields:
            - output_shields
            - output_shields
          agent_id: agent_id
          created_at: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
      required:
      - data
      title: ListAgentsResponse
    BucketResponse:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      title: BucketResponse
    ListBucketResponse:
      additionalProperties: false
      description: Response representing a list of file entries.
      example:
        data:
        - name: name
        - name: name
      properties:
        data:
          description: List of FileResponse entries
          items:
            $ref: '#/components/schemas/BucketResponse'
          type: array
      required:
      - data
      title: ListBucketResponse
    ListBenchmarksResponse:
      additionalProperties: false
      example:
        data:
        - identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          dataset_id: dataset_id
          provider_id: provider_id
          type: benchmark
          scoring_functions:
          - scoring_functions
          - scoring_functions
        - identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          dataset_id: dataset_id
          provider_id: provider_id
          type: benchmark
          scoring_functions:
          - scoring_functions
          - scoring_functions
      properties:
        data:
          items:
            $ref: '#/components/schemas/Benchmark'
          type: array
      required:
      - data
      title: ListBenchmarksResponse
    ListDatasetsResponse:
      additionalProperties: false
      example:
        data:
        - identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          purpose: post-training/messages
          provider_id: provider_id
          source:
            type: uri
            uri: uri
          type: dataset
        - identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          purpose: post-training/messages
          provider_id: provider_id
          source:
            type: uri
            uri: uri
          type: dataset
      properties:
        data:
          items:
            $ref: '#/components/schemas/Dataset'
          type: array
      required:
      - data
      title: ListDatasetsResponse
    ListFileResponse:
      additionalProperties: false
      description: Response representing a list of file entries.
      example:
        data:
        - bucket: bucket
          mime_type: mime_type
          bytes: 0
          created_at: 6
          key: key
          url: url
        - bucket: bucket
          mime_type: mime_type
          bytes: 0
          created_at: 6
          key: key
          url: url
      properties:
        data:
          description: List of FileResponse entries
          items:
            $ref: '#/components/schemas/FileResponse'
          type: array
      required:
      - data
      title: ListFileResponse
    ListModelsResponse:
      additionalProperties: false
      example:
        data:
        - identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          model_type: llm
          provider_id: provider_id
          type: model
        - identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          model_type: llm
          provider_id: provider_id
          type: model
      properties:
        data:
          items:
            $ref: '#/components/schemas/Model'
          type: array
      required:
      - data
      title: ListModelsResponse
    ListProvidersResponse:
      additionalProperties: false
      example:
        data:
        - provider_type: provider_type
          provider_id: provider_id
          health:
            key: null
          api: api
          config:
            key: true
        - provider_type: provider_type
          provider_id: provider_id
          health:
            key: null
          api: api
          config:
            key: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProviderInfo'
          type: array
      required:
      - data
      title: ListProvidersResponse
    RouteInfo:
      additionalProperties: false
      example:
        route: route
        method: method
        provider_types:
        - provider_types
        - provider_types
      properties:
        route:
          type: string
        method:
          type: string
        provider_types:
          items:
            type: string
          type: array
      required:
      - method
      - provider_types
      - route
      title: RouteInfo
    ListRoutesResponse:
      additionalProperties: false
      example:
        data:
        - route: route
          method: method
          provider_types:
          - provider_types
          - provider_types
        - route: route
          method: method
          provider_types:
          - provider_types
          - provider_types
      properties:
        data:
          items:
            $ref: '#/components/schemas/RouteInfo'
          type: array
      required:
      - data
      title: ListRoutesResponse
    ListToolDefsResponse:
      additionalProperties: false
      example:
        data:
        - metadata:
            key: null
          name: name
          description: description
          parameters:
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
        - metadata:
            key: null
          name: name
          description: description
          parameters:
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/ToolDef'
          type: array
      required:
      - data
      title: ListToolDefsResponse
    ListScoringFunctionsResponse:
      additionalProperties: false
      example:
        data:
        - return_type:
            type: string
          identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          provider_id: provider_id
          description: description
          type: scoring_function
          params:
            aggregation_functions:
            - average
            - average
            judge_score_regexes:
            - judge_score_regexes
            - judge_score_regexes
            type: llm_as_judge
            judge_model: judge_model
            prompt_template: prompt_template
        - return_type:
            type: string
          identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          provider_id: provider_id
          description: description
          type: scoring_function
          params:
            aggregation_functions:
            - average
            - average
            judge_score_regexes:
            - judge_score_regexes
            - judge_score_regexes
            type: llm_as_judge
            judge_model: judge_model
            prompt_template: prompt_template
      properties:
        data:
          items:
            $ref: '#/components/schemas/ScoringFn'
          type: array
      required:
      - data
      title: ListScoringFunctionsResponse
    ListShieldsResponse:
      additionalProperties: false
      example:
        data:
        - identifier: identifier
          provider_resource_id: provider_resource_id
          provider_id: provider_id
          type: shield
          params:
            key: true
        - identifier: identifier
          provider_resource_id: provider_resource_id
          provider_id: provider_id
          type: shield
          params:
            key: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/Shield'
          type: array
      required:
      - data
      title: ListShieldsResponse
    ListToolGroupsResponse:
      additionalProperties: false
      example:
        data:
        - args:
            key: true
          identifier: identifier
          provider_resource_id: provider_resource_id
          mcp_endpoint:
            uri: uri
          provider_id: provider_id
          type: tool_group
        - args:
            key: true
          identifier: identifier
          provider_resource_id: provider_resource_id
          mcp_endpoint:
            uri: uri
          provider_id: provider_id
          type: tool_group
      properties:
        data:
          items:
            $ref: '#/components/schemas/ToolGroup'
          type: array
      required:
      - data
      title: ListToolGroupsResponse
    ListToolsResponse:
      additionalProperties: false
      example:
        data:
        - tool_host: distribution
          identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          provider_id: provider_id
          description: description
          type: tool
          parameters:
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
          toolgroup_id: toolgroup_id
        - tool_host: distribution
          identifier: identifier
          provider_resource_id: provider_resource_id
          metadata:
            key: true
          provider_id: provider_id
          description: description
          type: tool
          parameters:
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
          - default: true
            name: name
            description: description
            parameter_type: parameter_type
            required: true
          toolgroup_id: toolgroup_id
      properties:
        data:
          items:
            $ref: '#/components/schemas/Tool'
          type: array
      required:
      - data
      title: ListToolsResponse
    ListVectorDBsResponse:
      additionalProperties: false
      example:
        data:
        - identifier: identifier
          provider_resource_id: provider_resource_id
          embedding_model: embedding_model
          provider_id: provider_id
          embedding_dimension: 0
          type: vector_db
        - identifier: identifier
          provider_resource_id: provider_resource_id
          embedding_model: embedding_model
          provider_id: provider_id
          embedding_dimension: 0
          type: vector_db
      properties:
        data:
          items:
            $ref: '#/components/schemas/VectorDB'
          type: array
      required:
      - data
      title: ListVectorDBsResponse
    Event:
      discriminator:
        mapping:
          unstructured_log: '#/components/schemas/UnstructuredLogEvent'
          metric: '#/components/schemas/MetricEvent'
          structured_log: '#/components/schemas/StructuredLogEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/UnstructuredLogEvent'
      - $ref: '#/components/schemas/MetricEvent'
      - $ref: '#/components/schemas/StructuredLogEvent'
    LogSeverity:
      enum:
      - verbose
      - debug
      - info
      - warn
      - error
      - critical
      title: LogSeverity
      type: string
    MetricEvent:
      additionalProperties: false
      properties:
        trace_id:
          type: string
        span_id:
          type: string
        timestamp:
          format: date-time
          type: string
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/ToolCall_arguments_oneOf_value_oneOf_inner'
        type:
          default: metric
          enum:
          - metric
          type: string
        metric:
          type: string
        value:
          $ref: '#/components/schemas/MetricInResponse_value'
        unit:
          type: string
      required:
      - metric
      - span_id
      - timestamp
      - trace_id
      - type
      - unit
      - value
      title: MetricEvent
    SpanEndPayload:
      additionalProperties: false
      properties:
        type:
          default: span_end
          enum:
          - span_end
          type: string
        status:
          $ref: '#/components/schemas/SpanStatus'
      required:
      - status
      - type
      title: SpanEndPayload
    SpanStartPayload:
      additionalProperties: false
      properties:
        type:
          default: span_start
          enum:
          - span_start
          type: string
        name:
          type: string
        parent_span_id:
          type: string
      required:
      - name
      - type
      title: SpanStartPayload
    StructuredLogEvent:
      additionalProperties: false
      properties:
        trace_id:
          type: string
        span_id:
          type: string
        timestamp:
          format: date-time
          type: string
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/ToolCall_arguments_oneOf_value_oneOf_inner'
        type:
          default: structured_log
          enum:
          - structured_log
          type: string
        payload:
          $ref: '#/components/schemas/StructuredLogPayload'
      required:
      - payload
      - span_id
      - timestamp
      - trace_id
      - type
      title: StructuredLogEvent
    StructuredLogPayload:
      discriminator:
        mapping:
          span_start: '#/components/schemas/SpanStartPayload'
          span_end: '#/components/schemas/SpanEndPayload'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/SpanStartPayload'
      - $ref: '#/components/schemas/SpanEndPayload'
    UnstructuredLogEvent:
      additionalProperties: false
      example:
        severity: verbose
        trace_id: trace_id
        span_id: span_id
        attributes:
          key: ToolCall_arguments_oneOf_value_oneOf_inner
        type: unstructured_log
        message: message
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        trace_id:
          type: string
        span_id:
          type: string
        timestamp:
          format: date-time
          type: string
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/ToolCall_arguments_oneOf_value_oneOf_inner'
        type:
          default: unstructured_log
          enum:
          - unstructured_log
          type: string
        message:
          type: string
        severity:
          $ref: '#/components/schemas/LogSeverity'
      required:
      - message
      - severity
      - span_id
      - timestamp
      - trace_id
      - type
      title: UnstructuredLogEvent
    LogEventRequest:
      additionalProperties: false
      example:
        ttl_seconds: 0
        event:
          severity: verbose
          trace_id: trace_id
          span_id: span_id
          attributes:
            key: ToolCall_arguments_oneOf_value_oneOf_inner
          type: unstructured_log
          message: message
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        event:
          $ref: '#/components/schemas/Event'
        ttl_seconds:
          type: integer
      required:
      - event
      - ttl_seconds
      title: LogEventRequest
    OpenAIAssistantMessageParam:
      additionalProperties: false
      description: A message containing the model's (assistant) response in an OpenAI-compatible
        chat completion request.
      properties:
        role:
          default: assistant
          description: Must be "assistant" to identify this as the model's response
          enum:
          - assistant
          type: string
        content:
          $ref: '#/components/schemas/OpenAIAssistantMessageParam_content'
        name:
          description: (Optional) The name of the assistant message participant.
          type: string
        tool_calls:
          description: List of tool calls. Each tool call is an OpenAIChatCompletionToolCall
            object.
          items:
            $ref: '#/components/schemas/OpenAIChatCompletionToolCall'
          type: array
      required:
      - role
      title: OpenAIAssistantMessageParam
    OpenAIChatCompletionContentPartImageParam:
      additionalProperties: false
      properties:
        type:
          default: image_url
          enum:
          - image_url
          type: string
        image_url:
          $ref: '#/components/schemas/OpenAIImageURL'
      required:
      - image_url
      - type
      title: OpenAIChatCompletionContentPartImageParam
    OpenAIChatCompletionContentPartParam:
      discriminator:
        mapping:
          text: '#/components/schemas/OpenAIChatCompletionContentPartTextParam'
          image_url: '#/components/schemas/OpenAIChatCompletionContentPartImageParam'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/OpenAIChatCompletionContentPartTextParam'
      - $ref: '#/components/schemas/OpenAIChatCompletionContentPartImageParam'
    OpenAIChatCompletionContentPartTextParam:
      additionalProperties: false
      properties:
        type:
          default: text
          enum:
          - text
          type: string
        text:
          type: string
      required:
      - text
      - type
      title: OpenAIChatCompletionContentPartTextParam
    OpenAIChatCompletionToolCall:
      additionalProperties: false
      properties:
        index:
          type: integer
        id:
          type: string
        type:
          default: function
          enum:
          - function
          type: string
        function:
          $ref: '#/components/schemas/OpenAIChatCompletionToolCallFunction'
      required:
      - type
      title: OpenAIChatCompletionToolCall
    OpenAIChatCompletionToolCallFunction:
      additionalProperties: false
      properties:
        name:
          type: string
        arguments:
          type: string
      title: OpenAIChatCompletionToolCallFunction
    OpenAIDeveloperMessageParam:
      additionalProperties: false
      description: A message from the developer in an OpenAI-compatible chat completion
        request.
      properties:
        role:
          default: developer
          description: Must be "developer" to identify this as a developer message
          enum:
          - developer
          type: string
        content:
          $ref: '#/components/schemas/OpenAIDeveloperMessageParam_content'
        name:
          description: (Optional) The name of the developer message participant.
          type: string
      required:
      - content
      - role
      title: OpenAIDeveloperMessageParam
    OpenAIImageURL:
      additionalProperties: false
      properties:
        url:
          type: string
        detail:
          type: string
      required:
      - url
      title: OpenAIImageURL
    OpenAIJSONSchema:
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
        strict:
          type: boolean
        schema:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - name
      title: OpenAIJSONSchema
    OpenAIMessageParam:
      discriminator:
        mapping:
          user: '#/components/schemas/OpenAIUserMessageParam'
          system: '#/components/schemas/OpenAISystemMessageParam'
          assistant: '#/components/schemas/OpenAIAssistantMessageParam'
          tool: '#/components/schemas/OpenAIToolMessageParam'
          developer: '#/components/schemas/OpenAIDeveloperMessageParam'
        propertyName: role
      oneOf:
      - $ref: '#/components/schemas/OpenAIUserMessageParam'
      - $ref: '#/components/schemas/OpenAISystemMessageParam'
      - $ref: '#/components/schemas/OpenAIAssistantMessageParam'
      - $ref: '#/components/schemas/OpenAIToolMessageParam'
      - $ref: '#/components/schemas/OpenAIDeveloperMessageParam'
    OpenAIResponseFormatJSONObject:
      additionalProperties: false
      properties:
        type:
          default: json_object
          enum:
          - json_object
          type: string
      required:
      - type
      title: OpenAIResponseFormatJSONObject
    OpenAIResponseFormatJSONSchema:
      additionalProperties: false
      properties:
        type:
          default: json_schema
          enum:
          - json_schema
          type: string
        json_schema:
          $ref: '#/components/schemas/OpenAIJSONSchema'
      required:
      - json_schema
      - type
      title: OpenAIResponseFormatJSONSchema
    OpenAIResponseFormatParam:
      discriminator:
        mapping:
          text: '#/components/schemas/OpenAIResponseFormatText'
          json_schema: '#/components/schemas/OpenAIResponseFormatJSONSchema'
          json_object: '#/components/schemas/OpenAIResponseFormatJSONObject'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/OpenAIResponseFormatText'
      - $ref: '#/components/schemas/OpenAIResponseFormatJSONSchema'
      - $ref: '#/components/schemas/OpenAIResponseFormatJSONObject'
    OpenAIResponseFormatText:
      additionalProperties: false
      example:
        type: text
      properties:
        type:
          default: text
          enum:
          - text
          type: string
      required:
      - type
      title: OpenAIResponseFormatText
    OpenAISystemMessageParam:
      additionalProperties: false
      description: A system message providing instructions or context to the model.
      properties:
        role:
          default: system
          description: Must be "system" to identify this as a system message
          enum:
          - system
          type: string
        content:
          $ref: '#/components/schemas/OpenAISystemMessageParam_content'
        name:
          description: (Optional) The name of the system message participant.
          type: string
      required:
      - content
      - role
      title: OpenAISystemMessageParam
    OpenAIToolMessageParam:
      additionalProperties: false
      description: A message representing the result of a tool invocation in an OpenAI-compatible
        chat completion request.
      properties:
        role:
          default: tool
          description: Must be "tool" to identify this as a tool response
          enum:
          - tool
          type: string
        tool_call_id:
          description: Unique identifier for the tool call this response is for
          type: string
        content:
          $ref: '#/components/schemas/OpenAIToolMessageParam_content'
      required:
      - content
      - role
      - tool_call_id
      title: OpenAIToolMessageParam
    OpenAIUserMessageParam:
      additionalProperties: false
      description: A message from the user in an OpenAI-compatible chat completion
        request.
      example:
        role: user
        name: name
        content: OpenAIUserMessageParam_content
      properties:
        role:
          default: user
          description: Must be "user" to identify this as a user message
          enum:
          - user
          type: string
        content:
          $ref: '#/components/schemas/OpenAIUserMessageParam_content'
        name:
          description: (Optional) The name of the user message participant.
          type: string
      required:
      - content
      - role
      title: OpenAIUserMessageParam
    OpenaiChatCompletionRequest:
      additionalProperties: false
      example:
        top_logprobs: 3
        logit_bias:
          key: 6.027456183070403
        functions:
        - key: true
        - key: true
        seed: 7
        function_call: OpenaiChatCompletionRequest_function_call
        max_tokens: 5
        presence_penalty: 2.3021358869347655
        tools:
        - key: null
        - key: null
        "n": 5
        logprobs: true
        top_p: 2.027123023002322
        max_completion_tokens: 1
        frequency_penalty: 0.8008281904610115
        response_format:
          type: text
        parallel_tool_calls: true
        stop: OpenaiChatCompletionRequest_stop
        stream: true
        temperature: 9.301444243932576
        messages:
        - role: user
          name: name
          content: OpenAIUserMessageParam_content
        - role: user
          name: name
          content: OpenAIUserMessageParam_content
        tool_choice: OpenaiChatCompletionRequest_tool_choice
        model: model
        stream_options:
          key: null
        user: user
      properties:
        model:
          description: The identifier of the model to use. The model must be registered
            with Llama Stack and available via the /models endpoint.
          type: string
        messages:
          description: List of messages in the conversation
          items:
            $ref: '#/components/schemas/OpenAIMessageParam'
          type: array
        frequency_penalty:
          description: (Optional) The penalty for repeated tokens
          type: number
        function_call:
          $ref: '#/components/schemas/OpenaiChatCompletionRequest_function_call'
        functions:
          description: (Optional) List of functions to use
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
        logit_bias:
          additionalProperties:
            type: number
          description: (Optional) The logit bias to use
        logprobs:
          description: (Optional) The log probabilities to use
          type: boolean
        max_completion_tokens:
          description: (Optional) The maximum number of tokens to generate
          type: integer
        max_tokens:
          description: (Optional) The maximum number of tokens to generate
          type: integer
        "n":
          description: (Optional) The number of completions to generate
          type: integer
        parallel_tool_calls:
          description: (Optional) Whether to parallelize tool calls
          type: boolean
        presence_penalty:
          description: (Optional) The penalty for repeated tokens
          type: number
        response_format:
          $ref: '#/components/schemas/OpenAIResponseFormatParam'
        seed:
          description: (Optional) The seed to use
          type: integer
        stop:
          $ref: '#/components/schemas/OpenaiChatCompletionRequest_stop'
        stream:
          description: (Optional) Whether to stream the response
          type: boolean
        stream_options:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          description: (Optional) The stream options to use
        temperature:
          description: (Optional) The temperature to use
          type: number
        tool_choice:
          $ref: '#/components/schemas/OpenaiChatCompletionRequest_tool_choice'
        tools:
          description: (Optional) The tools to use
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
        top_logprobs:
          description: (Optional) The top log probabilities to use
          type: integer
        top_p:
          description: (Optional) The top p to use
          type: number
        user:
          description: (Optional) The user to use
          type: string
      required:
      - messages
      - model
      title: OpenaiChatCompletionRequest
    OpenAIChatCompletion:
      additionalProperties: false
      description: Response from an OpenAI-compatible chat completion request.
      example:
        created: 2
        model: model
        id: id
        choices:
        - finish_reason: finish_reason
          index: 0
          message:
            role: user
            name: name
            content: OpenAIUserMessageParam_content
          logprobs:
            refusal:
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            content:
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
        - finish_reason: finish_reason
          index: 0
          message:
            role: user
            name: name
            content: OpenAIUserMessageParam_content
          logprobs:
            refusal:
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            content:
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
        object: chat.completion
      properties:
        id:
          description: The ID of the chat completion
          type: string
        choices:
          description: List of choices
          items:
            $ref: '#/components/schemas/OpenAIChoice'
          type: array
        object:
          default: chat.completion
          description: "The object type, which will be \"chat.completion\""
          enum:
          - chat.completion
          type: string
        created:
          description: The Unix timestamp in seconds when the chat completion was
            created
          type: integer
        model:
          description: The model that was used to generate the chat completion
          type: string
      required:
      - choices
      - created
      - id
      - model
      - object
      title: OpenAIChatCompletion
    OpenAIChatCompletionChunk:
      additionalProperties: false
      description: Chunk from a streaming response to an OpenAI-compatible chat completion
        request.
      properties:
        id:
          description: The ID of the chat completion
          type: string
        choices:
          description: List of choices
          items:
            $ref: '#/components/schemas/OpenAIChunkChoice'
          type: array
        object:
          default: chat.completion.chunk
          description: "The object type, which will be \"chat.completion.chunk\""
          enum:
          - chat.completion.chunk
          type: string
        created:
          description: The Unix timestamp in seconds when the chat completion was
            created
          type: integer
        model:
          description: The model that was used to generate the chat completion
          type: string
      required:
      - choices
      - created
      - id
      - model
      - object
      title: OpenAIChatCompletionChunk
    OpenAIChoice:
      additionalProperties: false
      description: A choice from an OpenAI-compatible chat completion response.
      example:
        finish_reason: finish_reason
        index: 0
        message:
          role: user
          name: name
          content: OpenAIUserMessageParam_content
        logprobs:
          refusal:
          - top_logprobs:
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            logprob: 1.4658129805029452
            bytes:
            - 6
            - 6
            token: token
          - top_logprobs:
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            logprob: 1.4658129805029452
            bytes:
            - 6
            - 6
            token: token
          content:
          - top_logprobs:
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            logprob: 1.4658129805029452
            bytes:
            - 6
            - 6
            token: token
          - top_logprobs:
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            logprob: 1.4658129805029452
            bytes:
            - 6
            - 6
            token: token
      properties:
        message:
          $ref: '#/components/schemas/OpenAIMessageParam'
        finish_reason:
          description: The reason the model stopped generating
          type: string
        index:
          description: The index of the choice
          type: integer
        logprobs:
          $ref: '#/components/schemas/OpenAIChoiceLogprobs'
      required:
      - finish_reason
      - index
      - message
      title: OpenAIChoice
    OpenAIChoiceDelta:
      additionalProperties: false
      description: A delta from an OpenAI-compatible chat completion streaming response.
      properties:
        content:
          description: (Optional) The content of the delta
          type: string
        refusal:
          description: (Optional) The refusal of the delta
          type: string
        role:
          description: (Optional) The role of the delta
          type: string
        tool_calls:
          description: (Optional) The tool calls of the delta
          items:
            $ref: '#/components/schemas/OpenAIChatCompletionToolCall'
          type: array
      title: OpenAIChoiceDelta
    OpenAIChoiceLogprobs:
      additionalProperties: false
      description: The log probabilities for the tokens in the message from an OpenAI-compatible
        chat completion response.
      example:
        refusal:
        - top_logprobs:
          - logprob: 5.637376656633329
            bytes:
            - 5
            - 5
            token: token
          - logprob: 5.637376656633329
            bytes:
            - 5
            - 5
            token: token
          logprob: 1.4658129805029452
          bytes:
          - 6
          - 6
          token: token
        - top_logprobs:
          - logprob: 5.637376656633329
            bytes:
            - 5
            - 5
            token: token
          - logprob: 5.637376656633329
            bytes:
            - 5
            - 5
            token: token
          logprob: 1.4658129805029452
          bytes:
          - 6
          - 6
          token: token
        content:
        - top_logprobs:
          - logprob: 5.637376656633329
            bytes:
            - 5
            - 5
            token: token
          - logprob: 5.637376656633329
            bytes:
            - 5
            - 5
            token: token
          logprob: 1.4658129805029452
          bytes:
          - 6
          - 6
          token: token
        - top_logprobs:
          - logprob: 5.637376656633329
            bytes:
            - 5
            - 5
            token: token
          - logprob: 5.637376656633329
            bytes:
            - 5
            - 5
            token: token
          logprob: 1.4658129805029452
          bytes:
          - 6
          - 6
          token: token
      properties:
        content:
          description: (Optional) The log probabilities for the tokens in the message
          items:
            $ref: '#/components/schemas/OpenAITokenLogProb'
          type: array
        refusal:
          description: (Optional) The log probabilities for the tokens in the message
          items:
            $ref: '#/components/schemas/OpenAITokenLogProb'
          type: array
      title: OpenAIChoiceLogprobs
    OpenAIChunkChoice:
      additionalProperties: false
      description: A chunk choice from an OpenAI-compatible chat completion streaming
        response.
      properties:
        delta:
          $ref: '#/components/schemas/OpenAIChoiceDelta'
        finish_reason:
          description: The reason the model stopped generating
          type: string
        index:
          description: The index of the choice
          type: integer
        logprobs:
          $ref: '#/components/schemas/OpenAIChoiceLogprobs'
      required:
      - delta
      - finish_reason
      - index
      title: OpenAIChunkChoice
    OpenAITokenLogProb:
      additionalProperties: false
      description: The log probability for a token from an OpenAI-compatible chat
        completion response.
      example:
        top_logprobs:
        - logprob: 5.637376656633329
          bytes:
          - 5
          - 5
          token: token
        - logprob: 5.637376656633329
          bytes:
          - 5
          - 5
          token: token
        logprob: 1.4658129805029452
        bytes:
        - 6
        - 6
        token: token
      properties:
        token:
          type: string
        bytes:
          items:
            type: integer
          type: array
        logprob:
          type: number
        top_logprobs:
          items:
            $ref: '#/components/schemas/OpenAITopLogProb'
          type: array
      required:
      - logprob
      - token
      - top_logprobs
      title: OpenAITokenLogProb
    OpenAITopLogProb:
      additionalProperties: false
      description: The top log probability for a token from an OpenAI-compatible chat
        completion response.
      example:
        logprob: 5.637376656633329
        bytes:
        - 5
        - 5
        token: token
      properties:
        token:
          type: string
        bytes:
          items:
            type: integer
          type: array
        logprob:
          type: number
      required:
      - logprob
      - token
      title: OpenAITopLogProb
    OpenaiCompletionRequest:
      additionalProperties: false
      example:
        logit_bias:
          key: 1.4658129805029452
        seed: 7
        max_tokens: 5
        presence_penalty: 2.3021358869347655
        echo: true
        "n": 5
        logprobs: true
        top_p: 3.616076749251911
        guided_choice:
        - guided_choice
        - guided_choice
        prompt_logprobs: 2
        frequency_penalty: 6.027456183070403
        best_of: 0
        stop: OpenaiChatCompletionRequest_stop
        stream: true
        temperature: 9.301444243932576
        model: model
        stream_options:
          key: true
        prompt: OpenaiCompletionRequest_prompt
        user: user
      properties:
        model:
          description: The identifier of the model to use. The model must be registered
            with Llama Stack and available via the /models endpoint.
          type: string
        prompt:
          $ref: '#/components/schemas/OpenaiCompletionRequest_prompt'
        best_of:
          description: (Optional) The number of completions to generate
          type: integer
        echo:
          description: (Optional) Whether to echo the prompt
          type: boolean
        frequency_penalty:
          description: (Optional) The penalty for repeated tokens
          type: number
        logit_bias:
          additionalProperties:
            type: number
          description: (Optional) The logit bias to use
        logprobs:
          description: (Optional) The log probabilities to use
          type: boolean
        max_tokens:
          description: (Optional) The maximum number of tokens to generate
          type: integer
        "n":
          description: (Optional) The number of completions to generate
          type: integer
        presence_penalty:
          description: (Optional) The penalty for repeated tokens
          type: number
        seed:
          description: (Optional) The seed to use
          type: integer
        stop:
          $ref: '#/components/schemas/OpenaiChatCompletionRequest_stop'
        stream:
          description: (Optional) Whether to stream the response
          type: boolean
        stream_options:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          description: (Optional) The stream options to use
        temperature:
          description: (Optional) The temperature to use
          type: number
        top_p:
          description: (Optional) The top p to use
          type: number
        user:
          description: (Optional) The user to use
          type: string
        guided_choice:
          items:
            type: string
          type: array
        prompt_logprobs:
          type: integer
      required:
      - model
      - prompt
      title: OpenaiCompletionRequest
    OpenAICompletion:
      additionalProperties: false
      description: Response from an OpenAI-compatible completion request.
      example:
        created: 6
        model: model
        id: id
        choices:
        - finish_reason: finish_reason
          index: 0
          text: text
          logprobs:
            refusal:
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            content:
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
        - finish_reason: finish_reason
          index: 0
          text: text
          logprobs:
            refusal:
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            content:
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
            - top_logprobs:
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              - logprob: 5.637376656633329
                bytes:
                - 5
                - 5
                token: token
              logprob: 1.4658129805029452
              bytes:
              - 6
              - 6
              token: token
        object: text_completion
      properties:
        id:
          type: string
        choices:
          items:
            $ref: '#/components/schemas/OpenAICompletionChoice'
          type: array
        created:
          type: integer
        model:
          type: string
        object:
          default: text_completion
          enum:
          - text_completion
          type: string
      required:
      - choices
      - created
      - id
      - model
      - object
      title: OpenAICompletion
    OpenAICompletionChoice:
      additionalProperties: false
      description: A choice from an OpenAI-compatible completion response.
      example:
        finish_reason: finish_reason
        index: 0
        text: text
        logprobs:
          refusal:
          - top_logprobs:
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            logprob: 1.4658129805029452
            bytes:
            - 6
            - 6
            token: token
          - top_logprobs:
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            logprob: 1.4658129805029452
            bytes:
            - 6
            - 6
            token: token
          content:
          - top_logprobs:
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            logprob: 1.4658129805029452
            bytes:
            - 6
            - 6
            token: token
          - top_logprobs:
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            - logprob: 5.637376656633329
              bytes:
              - 5
              - 5
              token: token
            logprob: 1.4658129805029452
            bytes:
            - 6
            - 6
            token: token
      properties:
        finish_reason:
          type: string
        text:
          type: string
        index:
          type: integer
        logprobs:
          $ref: '#/components/schemas/OpenAIChoiceLogprobs'
      required:
      - finish_reason
      - index
      - text
      title: OpenAICompletionChoice
    OpenAIModel:
      additionalProperties: false
      description: A model from OpenAI.
      example:
        created: 0
        owned_by: owned_by
        id: id
        object: model
      properties:
        id:
          type: string
        object:
          default: model
          enum:
          - model
          type: string
        created:
          type: integer
        owned_by:
          type: string
      required:
      - created
      - id
      - object
      - owned_by
      title: OpenAIModel
    OpenAIListModelsResponse:
      additionalProperties: false
      example:
        data:
        - created: 0
          owned_by: owned_by
          id: id
          object: model
        - created: 0
          owned_by: owned_by
          id: id
          object: model
      properties:
        data:
          items:
            $ref: '#/components/schemas/OpenAIModel'
          type: array
      required:
      - data
      title: OpenAIListModelsResponse
    DPOAlignmentConfig:
      additionalProperties: false
      example:
        epsilon: 1.4658129805029452
        reward_scale: 0.8008281904610115
        reward_clip: 6.027456183070403
        gamma: 5.962133916683182
      properties:
        reward_scale:
          type: number
        reward_clip:
          type: number
        epsilon:
          type: number
        gamma:
          type: number
      required:
      - epsilon
      - gamma
      - reward_clip
      - reward_scale
      title: DPOAlignmentConfig
    DataConfig:
      additionalProperties: false
      example:
        data_format: instruct
        train_on_input: false
        batch_size: 3
        dataset_id: dataset_id
        shuffle: true
        packed: false
        validation_dataset_id: validation_dataset_id
      properties:
        dataset_id:
          type: string
        batch_size:
          type: integer
        shuffle:
          type: boolean
        data_format:
          $ref: '#/components/schemas/DatasetFormat'
        validation_dataset_id:
          type: string
        packed:
          default: false
          type: boolean
        train_on_input:
          default: false
          type: boolean
      required:
      - batch_size
      - data_format
      - dataset_id
      - shuffle
      title: DataConfig
    DatasetFormat:
      enum:
      - instruct
      - dialog
      title: DatasetFormat
      type: string
    EfficiencyConfig:
      additionalProperties: false
      example:
        enable_activation_checkpointing: false
        fsdp_cpu_offload: false
        enable_activation_offloading: false
        memory_efficient_fsdp_wrap: false
      properties:
        enable_activation_checkpointing:
          default: false
          type: boolean
        enable_activation_offloading:
          default: false
          type: boolean
        memory_efficient_fsdp_wrap:
          default: false
          type: boolean
        fsdp_cpu_offload:
          default: false
          type: boolean
      title: EfficiencyConfig
    OptimizerConfig:
      additionalProperties: false
      example:
        num_warmup_steps: 7
        weight_decay: 4.145608029883936
        lr: 2.027123023002322
        optimizer_type: adam
      properties:
        optimizer_type:
          $ref: '#/components/schemas/OptimizerType'
        lr:
          type: number
        weight_decay:
          type: number
        num_warmup_steps:
          type: integer
      required:
      - lr
      - num_warmup_steps
      - optimizer_type
      - weight_decay
      title: OptimizerConfig
    OptimizerType:
      enum:
      - adam
      - adamw
      - sgd
      title: OptimizerType
      type: string
    TrainingConfig:
      additionalProperties: false
      example:
        max_validation_steps: 9
        n_epochs: 5
        efficiency_config:
          enable_activation_checkpointing: false
          fsdp_cpu_offload: false
          enable_activation_offloading: false
          memory_efficient_fsdp_wrap: false
        dtype: bf16
        data_config:
          data_format: instruct
          train_on_input: false
          batch_size: 3
          dataset_id: dataset_id
          shuffle: true
          packed: false
          validation_dataset_id: validation_dataset_id
        max_steps_per_epoch: 2
        optimizer_config:
          num_warmup_steps: 7
          weight_decay: 4.145608029883936
          lr: 2.027123023002322
          optimizer_type: adam
        gradient_accumulation_steps: 7
      properties:
        n_epochs:
          type: integer
        max_steps_per_epoch:
          default: 1
          type: integer
        gradient_accumulation_steps:
          default: 1
          type: integer
        max_validation_steps:
          default: 1
          type: integer
        data_config:
          $ref: '#/components/schemas/DataConfig'
        optimizer_config:
          $ref: '#/components/schemas/OptimizerConfig'
        efficiency_config:
          $ref: '#/components/schemas/EfficiencyConfig'
        dtype:
          default: bf16
          type: string
      required:
      - gradient_accumulation_steps
      - max_steps_per_epoch
      - n_epochs
      title: TrainingConfig
    PreferenceOptimizeRequest:
      additionalProperties: false
      example:
        job_uuid: job_uuid
        training_config:
          max_validation_steps: 9
          n_epochs: 5
          efficiency_config:
            enable_activation_checkpointing: false
            fsdp_cpu_offload: false
            enable_activation_offloading: false
            memory_efficient_fsdp_wrap: false
          dtype: bf16
          data_config:
            data_format: instruct
            train_on_input: false
            batch_size: 3
            dataset_id: dataset_id
            shuffle: true
            packed: false
            validation_dataset_id: validation_dataset_id
          max_steps_per_epoch: 2
          optimizer_config:
            num_warmup_steps: 7
            weight_decay: 4.145608029883936
            lr: 2.027123023002322
            optimizer_type: adam
          gradient_accumulation_steps: 7
        logger_config:
          key: null
        hyperparam_search_config:
          key: true
        finetuned_model: finetuned_model
        algorithm_config:
          epsilon: 1.4658129805029452
          reward_scale: 0.8008281904610115
          reward_clip: 6.027456183070403
          gamma: 5.962133916683182
      properties:
        job_uuid:
          type: string
        finetuned_model:
          type: string
        algorithm_config:
          $ref: '#/components/schemas/DPOAlignmentConfig'
        training_config:
          $ref: '#/components/schemas/TrainingConfig'
        hyperparam_search_config:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        logger_config:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - algorithm_config
      - finetuned_model
      - hyperparam_search_config
      - job_uuid
      - logger_config
      - training_config
      title: PreferenceOptimizeRequest
    PostTrainingJob:
      additionalProperties: false
      example:
        job_uuid: job_uuid
      properties:
        job_uuid:
          type: string
      required:
      - job_uuid
      title: PostTrainingJob
    DefaultRAGQueryGeneratorConfig:
      additionalProperties: false
      example:
        type: default
        separator: ' '
      properties:
        type:
          default: default
          enum:
          - default
          type: string
        separator:
          default: ' '
          type: string
      required:
      - separator
      - type
      title: DefaultRAGQueryGeneratorConfig
    LLMRAGQueryGeneratorConfig:
      additionalProperties: false
      properties:
        type:
          default: llm
          enum:
          - llm
          type: string
        model:
          type: string
        template:
          type: string
      required:
      - model
      - template
      - type
      title: LLMRAGQueryGeneratorConfig
    RAGQueryConfig:
      additionalProperties: false
      example:
        max_chunks: 6
        query_generator_config:
          type: default
          separator: ' '
        max_tokens_in_context: 0
      properties:
        query_generator_config:
          $ref: '#/components/schemas/RAGQueryGeneratorConfig'
        max_tokens_in_context:
          default: 4096
          type: integer
        max_chunks:
          default: 5
          type: integer
      required:
      - max_chunks
      - max_tokens_in_context
      - query_generator_config
      title: RAGQueryConfig
    RAGQueryGeneratorConfig:
      discriminator:
        mapping:
          default: '#/components/schemas/DefaultRAGQueryGeneratorConfig'
          llm: '#/components/schemas/LLMRAGQueryGeneratorConfig'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DefaultRAGQueryGeneratorConfig'
      - $ref: '#/components/schemas/LLMRAGQueryGeneratorConfig'
    QueryRequest:
      additionalProperties: false
      example:
        query_config:
          max_chunks: 6
          query_generator_config:
            type: default
            separator: ' '
          max_tokens_in_context: 0
        content: InterleavedContent
        vector_db_ids:
        - vector_db_ids
        - vector_db_ids
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        vector_db_ids:
          items:
            type: string
          type: array
        query_config:
          $ref: '#/components/schemas/RAGQueryConfig'
      required:
      - content
      - vector_db_ids
      title: QueryRequest
    RAGQueryResult:
      additionalProperties: false
      example:
        metadata:
          key: true
        content: InterleavedContent
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - metadata
      title: RAGQueryResult
    QueryChunksRequest:
      additionalProperties: false
      example:
        query: InterleavedContent
        vector_db_id: vector_db_id
        params:
          key: true
      properties:
        vector_db_id:
          type: string
        query:
          $ref: '#/components/schemas/InterleavedContent'
        params:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - query
      - vector_db_id
      title: QueryChunksRequest
    QueryChunksResponse:
      additionalProperties: {}
      example:
        scores:
        - 0.8008281904610115
        - 0.8008281904610115
        chunks:
        - metadata:
            key: ""
          content: InterleavedContent
        - metadata:
            key: ""
          content: InterleavedContent
      properties:
        chunks:
          items:
            $ref: '#/components/schemas/Chunk_1'
        scores:
          items: {}
      required:
      - chunks
      - scores
      title: QueryChunksResponse
    QueryCondition:
      additionalProperties: false
      example:
        op: eq
        value: true
        key: key
      properties:
        key:
          type: string
        op:
          $ref: '#/components/schemas/QueryConditionOp'
        value:
          $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - key
      - op
      - value
      title: QueryCondition
    QueryConditionOp:
      enum:
      - eq
      - ne
      - gt
      - lt
      title: QueryConditionOp
      type: string
    QuerySpansRequest:
      additionalProperties: false
      example:
        max_depth: 0
        attributes_to_return:
        - attributes_to_return
        - attributes_to_return
        attribute_filters:
        - op: eq
          value: true
          key: key
        - op: eq
          value: true
          key: key
      properties:
        attribute_filters:
          items:
            $ref: '#/components/schemas/QueryCondition'
          type: array
        attributes_to_return:
          items:
            type: string
          type: array
        max_depth:
          type: integer
      required:
      - attribute_filters
      - attributes_to_return
      title: QuerySpansRequest
    QuerySpansResponse:
      additionalProperties: false
      example:
        data:
        - parent_span_id: parent_span_id
          start_time: 2000-01-23T04:56:07.000+00:00
          trace_id: trace_id
          span_id: span_id
          name: name
          end_time: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: true
        - parent_span_id: parent_span_id
          start_time: 2000-01-23T04:56:07.000+00:00
          trace_id: trace_id
          span_id: span_id
          name: name
          end_time: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/Span'
          type: array
      required:
      - data
      title: QuerySpansResponse
    QueryTracesRequest:
      additionalProperties: false
      example:
        offset: 6
        limit: 0
        attribute_filters:
        - op: eq
          value: true
          key: key
        - op: eq
          value: true
          key: key
        order_by:
        - order_by
        - order_by
      properties:
        attribute_filters:
          items:
            $ref: '#/components/schemas/QueryCondition'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        order_by:
          items:
            type: string
          type: array
      title: QueryTracesRequest
    QueryTracesResponse:
      additionalProperties: false
      example:
        data:
        - start_time: 2000-01-23T04:56:07.000+00:00
          trace_id: trace_id
          root_span_id: root_span_id
          end_time: 2000-01-23T04:56:07.000+00:00
        - start_time: 2000-01-23T04:56:07.000+00:00
          trace_id: trace_id
          root_span_id: root_span_id
          end_time: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/Trace'
          type: array
      required:
      - data
      title: QueryTracesResponse
    RegisterBenchmarkRequest:
      additionalProperties: false
      example:
        metadata:
          key: true
        dataset_id: dataset_id
        provider_id: provider_id
        benchmark_id: benchmark_id
        provider_benchmark_id: provider_benchmark_id
        scoring_functions:
        - scoring_functions
        - scoring_functions
      properties:
        benchmark_id:
          type: string
        dataset_id:
          type: string
        scoring_functions:
          items:
            type: string
          type: array
        provider_benchmark_id:
          type: string
        provider_id:
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - benchmark_id
      - dataset_id
      - scoring_functions
      title: RegisterBenchmarkRequest
    RegisterDatasetRequest:
      additionalProperties: false
      example:
        metadata:
          key: true
        purpose: post-training/messages
        dataset_id: dataset_id
        source:
          type: uri
          uri: uri
      properties:
        purpose:
          description: "The purpose of the dataset. One of - \"post-training/messages\"\
            : The dataset contains a messages column with list of messages for post-training.\
            \ { \"messages\": [ {\"role\": \"user\", \"content\": \"Hello, world!\"\
            }, {\"role\": \"assistant\", \"content\": \"Hello, world!\"}, ] } - \"\
            eval/question-answer\": The dataset contains a question column and an\
            \ answer column for evaluation. { \"question\": \"What is the capital\
            \ of France?\", \"answer\": \"Paris\" } - \"eval/messages-answer\": The\
            \ dataset contains a messages column with list of messages and an answer\
            \ column for evaluation. { \"messages\": [ {\"role\": \"user\", \"content\"\
            : \"Hello, my name is John Doe.\"}, {\"role\": \"assistant\", \"content\"\
            : \"Hello, John Doe. How can I help you today?\"}, {\"role\": \"user\"\
            , \"content\": \"What's my name?\"}, ], \"answer\": \"John Doe\" }"
          enum:
          - post-training/messages
          - eval/question-answer
          - eval/messages-answer
          type: string
        source:
          $ref: '#/components/schemas/DataSource'
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          description: "The metadata for the dataset. - E.g. {\"description\": \"\
            My dataset\"}"
        dataset_id:
          description: "The ID of the dataset. If not provided, an ID will be generated."
          type: string
      required:
      - purpose
      - source
      title: RegisterDatasetRequest
    RegisterModelRequest:
      additionalProperties: false
      example:
        metadata:
          key: true
        model_type: llm
        provider_id: provider_id
        model_id: model_id
        provider_model_id: provider_model_id
      properties:
        model_id:
          type: string
        provider_model_id:
          type: string
        provider_id:
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        model_type:
          $ref: '#/components/schemas/ModelType'
      required:
      - model_id
      title: RegisterModelRequest
    RegisterScoringFunctionRequest:
      additionalProperties: false
      example:
        return_type:
          type: string
        provider_scoring_fn_id: provider_scoring_fn_id
        description: description
        provider_id: provider_id
        scoring_fn_id: scoring_fn_id
        params:
          aggregation_functions:
          - average
          - average
          judge_score_regexes:
          - judge_score_regexes
          - judge_score_regexes
          type: llm_as_judge
          judge_model: judge_model
          prompt_template: prompt_template
      properties:
        scoring_fn_id:
          type: string
        description:
          type: string
        return_type:
          $ref: '#/components/schemas/ParamType'
        provider_scoring_fn_id:
          type: string
        provider_id:
          type: string
        params:
          $ref: '#/components/schemas/ScoringFnParams'
      required:
      - description
      - return_type
      - scoring_fn_id
      title: RegisterScoringFunctionRequest
    RegisterShieldRequest:
      additionalProperties: false
      example:
        shield_id: shield_id
        provider_id: provider_id
        provider_shield_id: provider_shield_id
        params:
          key: true
      properties:
        shield_id:
          type: string
        provider_shield_id:
          type: string
        provider_id:
          type: string
        params:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - shield_id
      title: RegisterShieldRequest
    RegisterToolGroupRequest:
      additionalProperties: false
      example:
        args:
          key: true
        mcp_endpoint:
          uri: uri
        provider_id: provider_id
        toolgroup_id: toolgroup_id
      properties:
        toolgroup_id:
          type: string
        provider_id:
          type: string
        mcp_endpoint:
          $ref: '#/components/schemas/URL'
        args:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - provider_id
      - toolgroup_id
      title: RegisterToolGroupRequest
    RegisterVectorDbRequest:
      additionalProperties: false
      example:
        embedding_model: embedding_model
        provider_id: provider_id
        vector_db_id: vector_db_id
        embedding_dimension: 0
        provider_vector_db_id: provider_vector_db_id
      properties:
        vector_db_id:
          type: string
        embedding_model:
          type: string
        embedding_dimension:
          type: integer
        provider_id:
          type: string
        provider_vector_db_id:
          type: string
      required:
      - embedding_model
      - vector_db_id
      title: RegisterVectorDbRequest
    ResumeAgentTurnRequest:
      additionalProperties: false
      example:
        stream: true
        tool_responses:
        - tool_name: brave_search
          metadata:
            key: true
          content: InterleavedContent
          call_id: call_id
        - tool_name: brave_search
          metadata:
            key: true
          content: InterleavedContent
          call_id: call_id
      properties:
        tool_responses:
          description: The tool call responses to resume the turn with.
          items:
            $ref: '#/components/schemas/ToolResponse'
          type: array
        stream:
          description: Whether to stream the response.
          type: boolean
      required:
      - tool_responses
      title: ResumeAgentTurnRequest
    RunEvalRequest:
      additionalProperties: false
      example:
        benchmark_config:
          scoring_params:
            key:
              aggregation_functions:
              - average
              - average
              judge_score_regexes:
              - judge_score_regexes
              - judge_score_regexes
              type: llm_as_judge
              judge_model: judge_model
              prompt_template: prompt_template
          num_examples: 0
          eval_candidate:
            system_message:
              role: system
              content: InterleavedContent
            model: model
            type: model
            sampling_params:
              stop:
              - stop
              - stop
              max_tokens: 0
              strategy:
                type: greedy
              repetition_penalty: 6.027456183070403
      properties:
        benchmark_config:
          $ref: '#/components/schemas/BenchmarkConfig'
      required:
      - benchmark_config
      title: RunEvalRequest
    RunShieldRequest:
      additionalProperties: false
      example:
        shield_id: shield_id
        messages:
        - role: user
          context: null
          content: InterleavedContent
        - role: user
          context: null
          content: InterleavedContent
        params:
          key: true
      properties:
        shield_id:
          type: string
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
        params:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - messages
      - params
      - shield_id
      title: RunShieldRequest
    RunShieldResponse:
      additionalProperties: false
      example:
        violation:
          violation_level: info
          metadata:
            key: true
          user_message: user_message
      properties:
        violation:
          $ref: '#/components/schemas/SafetyViolation'
      title: RunShieldResponse
    SaveSpansToDatasetRequest:
      additionalProperties: false
      example:
        max_depth: 0
        dataset_id: dataset_id
        attribute_filters:
        - op: eq
          value: true
          key: key
        - op: eq
          value: true
          key: key
        attributes_to_save:
        - attributes_to_save
        - attributes_to_save
      properties:
        attribute_filters:
          items:
            $ref: '#/components/schemas/QueryCondition'
          type: array
        attributes_to_save:
          items:
            type: string
          type: array
        dataset_id:
          type: string
        max_depth:
          type: integer
      required:
      - attribute_filters
      - attributes_to_save
      - dataset_id
      title: SaveSpansToDatasetRequest
    ScoreRequest:
      additionalProperties: false
      example:
        input_rows:
        - key: true
        - key: true
        scoring_functions:
          key:
            aggregation_functions:
            - average
            - average
            judge_score_regexes:
            - judge_score_regexes
            - judge_score_regexes
            type: llm_as_judge
            judge_model: judge_model
            prompt_template: prompt_template
      properties:
        input_rows:
          description: The rows to score.
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
        scoring_functions:
          additionalProperties:
            $ref: '#/components/schemas/ScoreRequest_scoring_functions_value'
          description: The scoring functions to use for the scoring.
      required:
      - input_rows
      - scoring_functions
      title: ScoreRequest
    ScoreResponse:
      additionalProperties: false
      description: The response from scoring.
      example:
        results:
          key:
            score_rows:
            - key: null
            - key: null
            aggregated_results:
              key: null
      properties:
        results:
          additionalProperties:
            $ref: '#/components/schemas/ScoringResult'
          description: A map of scoring function name to ScoringResult.
      required:
      - results
      title: ScoreResponse
    ScoreBatchRequest:
      additionalProperties: false
      example:
        save_results_dataset: true
        dataset_id: dataset_id
        scoring_functions:
          key:
            aggregation_functions:
            - average
            - average
            judge_score_regexes:
            - judge_score_regexes
            - judge_score_regexes
            type: llm_as_judge
            judge_model: judge_model
            prompt_template: prompt_template
      properties:
        dataset_id:
          type: string
        scoring_functions:
          additionalProperties:
            $ref: '#/components/schemas/ScoreRequest_scoring_functions_value'
        save_results_dataset:
          type: boolean
      required:
      - dataset_id
      - save_results_dataset
      - scoring_functions
      title: ScoreBatchRequest
    ScoreBatchResponse:
      additionalProperties: false
      example:
        dataset_id: dataset_id
        results:
          key:
            score_rows:
            - key: null
            - key: null
            aggregated_results:
              key: null
      properties:
        dataset_id:
          type: string
        results:
          additionalProperties:
            $ref: '#/components/schemas/ScoringResult'
      required:
      - results
      title: ScoreBatchResponse
    AlgorithmConfig:
      discriminator:
        mapping:
          LoRA: '#/components/schemas/LoraFinetuningConfig'
          QAT: '#/components/schemas/QATFinetuningConfig'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LoraFinetuningConfig'
      - $ref: '#/components/schemas/QATFinetuningConfig'
    LoraFinetuningConfig:
      additionalProperties: false
      example:
        alpha: 6
        rank: 0
        apply_lora_to_mlp: true
        apply_lora_to_output: true
        use_dora: false
        quantize_base: false
        type: LoRA
        lora_attn_modules:
        - lora_attn_modules
        - lora_attn_modules
      properties:
        type:
          default: LoRA
          enum:
          - LoRA
          type: string
        lora_attn_modules:
          items:
            type: string
          type: array
        apply_lora_to_mlp:
          type: boolean
        apply_lora_to_output:
          type: boolean
        rank:
          type: integer
        alpha:
          type: integer
        use_dora:
          default: false
          type: boolean
        quantize_base:
          default: false
          type: boolean
      required:
      - alpha
      - apply_lora_to_mlp
      - apply_lora_to_output
      - lora_attn_modules
      - rank
      - type
      title: LoraFinetuningConfig
    QATFinetuningConfig:
      additionalProperties: false
      properties:
        type:
          default: QAT
          enum:
          - QAT
          type: string
        quantizer_name:
          type: string
        group_size:
          type: integer
      required:
      - group_size
      - quantizer_name
      - type
      title: QATFinetuningConfig
    SupervisedFineTuneRequest:
      additionalProperties: false
      example:
        job_uuid: job_uuid
        training_config:
          max_validation_steps: 9
          n_epochs: 5
          efficiency_config:
            enable_activation_checkpointing: false
            fsdp_cpu_offload: false
            enable_activation_offloading: false
            memory_efficient_fsdp_wrap: false
          dtype: bf16
          data_config:
            data_format: instruct
            train_on_input: false
            batch_size: 3
            dataset_id: dataset_id
            shuffle: true
            packed: false
            validation_dataset_id: validation_dataset_id
          max_steps_per_epoch: 2
          optimizer_config:
            num_warmup_steps: 7
            weight_decay: 4.145608029883936
            lr: 2.027123023002322
            optimizer_type: adam
          gradient_accumulation_steps: 7
        logger_config:
          key: null
        hyperparam_search_config:
          key: true
        checkpoint_dir: checkpoint_dir
        model: model
        algorithm_config:
          alpha: 6
          rank: 0
          apply_lora_to_mlp: true
          apply_lora_to_output: true
          use_dora: false
          quantize_base: false
          type: LoRA
          lora_attn_modules:
          - lora_attn_modules
          - lora_attn_modules
      properties:
        job_uuid:
          type: string
        training_config:
          $ref: '#/components/schemas/TrainingConfig'
        hyperparam_search_config:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        logger_config:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
        model:
          type: string
        checkpoint_dir:
          type: string
        algorithm_config:
          $ref: '#/components/schemas/AlgorithmConfig'
      required:
      - hyperparam_search_config
      - job_uuid
      - logger_config
      - training_config
      title: SupervisedFineTuneRequest
    SyntheticDataGenerateRequest:
      additionalProperties: false
      example:
        filtering_function: none
        model: model
        dialogs:
        - role: user
          context: null
          content: InterleavedContent
        - role: user
          context: null
          content: InterleavedContent
      properties:
        dialogs:
          items:
            $ref: '#/components/schemas/Message'
          type: array
        filtering_function:
          description: The type of filtering function.
          enum:
          - none
          - random
          - top_k
          - top_p
          - top_k_top_p
          - sigmoid
          title: FilteringFunction
          type: string
        model:
          type: string
      required:
      - dialogs
      - filtering_function
      title: SyntheticDataGenerateRequest
    SyntheticDataGenerationResponse:
      additionalProperties: false
      description: "Response from the synthetic data generation. Batch of (prompt,\
        \ response, score) tuples that pass the threshold."
      example:
        synthetic_data:
        - key: true
        - key: true
        statistics:
          key: null
      properties:
        synthetic_data:
          items:
            additionalProperties:
              $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
          type: array
        statistics:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - synthetic_data
      title: SyntheticDataGenerationResponse
    VersionInfo:
      additionalProperties: false
      example:
        version: version
      properties:
        version:
          type: string
      required:
      - version
      title: VersionInfo
    _v1_openai_v1_chat_completions_post_200_response:
      oneOf:
      - $ref: '#/components/schemas/OpenAIChatCompletion'
      - $ref: '#/components/schemas/OpenAIChatCompletionChunk'
    AppendRowsRequest_rows_inner_value:
      nullable: true
      oneOf:
      - type: boolean
      - type: number
      - type: string
      - items: {}
        type: array
      - type: object
    ImageContentItem_image:
      additionalProperties: false
      description: Image as a base64 encoded string or an URL
      properties:
        url:
          $ref: '#/components/schemas/URL'
        data:
          description: base64 encoded image data as string
    ToolCall_tool_name:
      oneOf:
      - enum:
        - brave_search
        - wolfram_alpha
        - photogen
        - code_interpreter
        title: BuiltinTool
        type: string
      - type: string
    ToolCall_arguments_oneOf_value_oneOf_inner:
      nullable: true
      oneOf:
      - type: string
      - type: integer
      - type: number
      - type: boolean
    ToolCall_arguments_oneOf_value:
      nullable: true
      oneOf:
      - type: string
      - type: integer
      - type: number
      - type: boolean
      - items:
          $ref: '#/components/schemas/ToolCall_arguments_oneOf_value_oneOf_inner'
        type: array
      - additionalProperties:
          $ref: '#/components/schemas/ToolCall_arguments_oneOf_value_oneOf_inner'
    ToolCall_arguments:
      oneOf:
      - type: string
      - additionalProperties:
          $ref: '#/components/schemas/ToolCall_arguments_oneOf_value'
    ToolConfig_tool_choice:
      default: auto
      description: "(Optional) Whether tool use is automatic, required, or none. Can\
        \ also specify a tool name to use a specific tool. Defaults to ToolChoice.auto."
      oneOf:
      - description: Whether tool use is required or automatic. This is a hint to
          the model which may not be followed. It depends on the Instruction Following
          capabilities of the model.
        enum:
        - auto
        - required
        - none
        title: ToolChoice
        type: string
      - type: string
    LogProbConfig:
      additionalProperties: false
      example:
        top_k: 1
      properties:
        top_k:
          default: 0
          description: How many tokens (for each position) to return log probabilities
            for.
      title: LogProbConfig
    MetricInResponse_value:
      oneOf:
      - type: integer
      - type: number
    ChatCompletionRequest_logprobs:
      additionalProperties: false
      description: "(Optional) If specified, log probabilities for each token position\
        \ will be returned."
      example:
        top_k: 0
      properties:
        top_k:
          default: 0
          description: How many tokens (for each position) to return log probabilities
            for.
    ToolCallDelta_tool_call:
      oneOf:
      - type: string
      - $ref: '#/components/schemas/ToolCall'
    AgentToolGroupWithArgs:
      additionalProperties: false
      properties:
        name:
          type: string
        args:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - args
      - name
      title: AgentToolGroupWithArgs
    CreateAgentTurnRequest_messages_inner:
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/ToolResponseMessage'
    Document_content:
      description: The content of the document.
      oneOf:
      - {}
      - $ref: '#/components/schemas/InterleavedContentItem'
      - items:
          $ref: '#/components/schemas/InterleavedContentItem'
      - $ref: '#/components/schemas/URL'
    Document:
      additionalProperties: false
      description: A document to be used by an agent.
      example:
        mime_type: mime_type
        content: Document_content
      properties:
        content:
          $ref: '#/components/schemas/Document_content'
        mime_type:
          description: The MIME type of the document.
      required:
      - content
      - mime_type
      title: Document
    Turn_steps_inner:
      discriminator:
        mapping:
          inference: '#/components/schemas/InferenceStep'
          tool_execution: '#/components/schemas/ToolExecutionStep'
          shield_call: '#/components/schemas/ShieldCallStep'
          memory_retrieval: '#/components/schemas/MemoryRetrievalStep'
        propertyName: step_type
      oneOf:
      - $ref: '#/components/schemas/InferenceStep'
      - $ref: '#/components/schemas/ToolExecutionStep'
      - $ref: '#/components/schemas/ShieldCallStep'
      - $ref: '#/components/schemas/MemoryRetrievalStep'
    Attachment_content:
      description: The content of the attachment.
      oneOf:
      - {}
      - $ref: '#/components/schemas/InterleavedContentItem'
      - items:
          $ref: '#/components/schemas/InterleavedContentItem'
      - $ref: '#/components/schemas/URL'
    Attachment:
      additionalProperties: false
      description: An attachment to an agent turn.
      example:
        mime_type: mime_type
        content: Attachment_content
      properties:
        content:
          $ref: '#/components/schemas/Attachment_content'
        mime_type:
          description: The MIME type of the attachment.
      required:
      - content
      - mime_type
      title: Attachment
    EmbeddingsRequest_contents:
      description: List of contents to generate embeddings for. Each content can be
        a string or an InterleavedContentItem (and hence can be multimodal). The behavior
        depends on the model and provider. Some models may only support text.
      oneOf:
      - items:
          type: string
        type: array
      - items:
          $ref: '#/components/schemas/InterleavedContentItem'
        type: array
    PostTrainingJob_1:
      additionalProperties: false
      example:
        job_uuid: job_uuid
      properties:
        job_uuid:
          type: string
      required:
      - job_uuid
      title: PostTrainingJob
    RAGDocument_content:
      description: The content of the document.
      oneOf:
      - type: string
      - $ref: '#/components/schemas/InterleavedContentItem'
      - items:
          $ref: '#/components/schemas/InterleavedContentItem'
        type: array
      - $ref: '#/components/schemas/URL'
    Chunk:
      additionalProperties: false
      example:
        metadata:
          key: true
        content: InterleavedContent
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
      required:
      - content
      - metadata
      title: Chunk
    OpenAIAssistantMessageParam_content:
      description: The content of the model's response
      oneOf:
      - type: string
      - items:
          $ref: '#/components/schemas/OpenAIChatCompletionContentPartParam'
        type: array
    OpenAIDeveloperMessageParam_content:
      description: The content of the developer message
      oneOf:
      - type: string
      - items:
          $ref: '#/components/schemas/OpenAIChatCompletionContentPartParam'
        type: array
    OpenAISystemMessageParam_content:
      description: "The content of the \"system prompt\". If multiple system messages\
        \ are provided, they are concatenated. The underlying Llama Stack code may\
        \ also add other system messages (for example, for formatting tool definitions)."
      oneOf:
      - type: string
      - items:
          $ref: '#/components/schemas/OpenAIChatCompletionContentPartParam'
        type: array
    OpenAIToolMessageParam_content:
      description: The response content from the tool
      oneOf:
      - type: string
      - items:
          $ref: '#/components/schemas/OpenAIChatCompletionContentPartParam'
        type: array
    OpenAIUserMessageParam_content:
      description: "The content of the message, which can include text and other media"
      oneOf:
      - type: string
      - items:
          $ref: '#/components/schemas/OpenAIChatCompletionContentPartParam'
        type: array
    OpenaiChatCompletionRequest_function_call:
      description: (Optional) The function call to use
      oneOf:
      - type: string
      - additionalProperties:
          $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
    OpenaiChatCompletionRequest_stop:
      description: (Optional) The stop tokens to use
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    OpenaiChatCompletionRequest_tool_choice:
      description: (Optional) The tool choice to use
      oneOf:
      - type: string
      - additionalProperties:
          $ref: '#/components/schemas/AppendRowsRequest_rows_inner_value'
    OpenaiCompletionRequest_prompt:
      description: The prompt to generate a completion for
      oneOf:
      - type: string
      - items:
          type: string
        type: array
      - items:
          type: integer
        type: array
      - items:
          items:
            type: integer
          type: array
        type: array
    Chunk_1_metadata_value:
      oneOf:
      - {}
      - {}
      - {}
      - {}
      - items: {}
      - {}
    Chunk_1:
      additionalProperties: false
      example:
        metadata:
          key: ""
        content: InterleavedContent
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/Chunk_1_metadata_value'
      required:
      - content
      - metadata
      title: Chunk
    ScoreRequest_scoring_functions_value:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/ScoringFnParams'
x-tagGroups:
- name: Operations
  tags:
  - Agents
  - BatchInference (Coming Soon)
  - Benchmarks
  - DatasetIO
  - Datasets
  - Eval
  - Files
  - Inference
  - Inspect
  - Models
  - PostTraining (Coming Soon)
  - Providers
  - Safety
  - Scoring
  - ScoringFunctions
  - Shields
  - SyntheticDataGeneration (Coming Soon)
  - Telemetry
  - ToolGroups
  - ToolRuntime
  - VectorDBs
  - VectorIO
