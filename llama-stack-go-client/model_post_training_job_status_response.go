/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PostTrainingJobStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTrainingJobStatusResponse{}

// PostTrainingJobStatusResponse Status of a finetuning job.
type PostTrainingJobStatusResponse struct {
	JobUuid string `json:"job_uuid"`
	Status string `json:"status"`
	ScheduledAt *time.Time `json:"scheduled_at,omitempty"`
	StartedAt *time.Time `json:"started_at,omitempty"`
	CompletedAt *time.Time `json:"completed_at,omitempty"`
	ResourcesAllocated map[string]AppendRowsRequestRowsInnerValue `json:"resources_allocated,omitempty"`
	Checkpoints []interface{} `json:"checkpoints"`
}

type _PostTrainingJobStatusResponse PostTrainingJobStatusResponse

// NewPostTrainingJobStatusResponse instantiates a new PostTrainingJobStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTrainingJobStatusResponse(jobUuid string, status string, checkpoints []interface{}) *PostTrainingJobStatusResponse {
	this := PostTrainingJobStatusResponse{}
	this.JobUuid = jobUuid
	this.Status = status
	this.Checkpoints = checkpoints
	return &this
}

// NewPostTrainingJobStatusResponseWithDefaults instantiates a new PostTrainingJobStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTrainingJobStatusResponseWithDefaults() *PostTrainingJobStatusResponse {
	this := PostTrainingJobStatusResponse{}
	return &this
}

// GetJobUuid returns the JobUuid field value
func (o *PostTrainingJobStatusResponse) GetJobUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobUuid
}

// GetJobUuidOk returns a tuple with the JobUuid field value
// and a boolean to check if the value has been set.
func (o *PostTrainingJobStatusResponse) GetJobUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobUuid, true
}

// SetJobUuid sets field value
func (o *PostTrainingJobStatusResponse) SetJobUuid(v string) {
	o.JobUuid = v
}

// GetStatus returns the Status field value
func (o *PostTrainingJobStatusResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PostTrainingJobStatusResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PostTrainingJobStatusResponse) SetStatus(v string) {
	o.Status = v
}

// GetScheduledAt returns the ScheduledAt field value if set, zero value otherwise.
func (o *PostTrainingJobStatusResponse) GetScheduledAt() time.Time {
	if o == nil || IsNil(o.ScheduledAt) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledAt
}

// GetScheduledAtOk returns a tuple with the ScheduledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTrainingJobStatusResponse) GetScheduledAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ScheduledAt) {
		return nil, false
	}
	return o.ScheduledAt, true
}

// HasScheduledAt returns a boolean if a field has been set.
func (o *PostTrainingJobStatusResponse) HasScheduledAt() bool {
	if o != nil && !IsNil(o.ScheduledAt) {
		return true
	}

	return false
}

// SetScheduledAt gets a reference to the given time.Time and assigns it to the ScheduledAt field.
func (o *PostTrainingJobStatusResponse) SetScheduledAt(v time.Time) {
	o.ScheduledAt = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *PostTrainingJobStatusResponse) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTrainingJobStatusResponse) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *PostTrainingJobStatusResponse) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *PostTrainingJobStatusResponse) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise.
func (o *PostTrainingJobStatusResponse) GetCompletedAt() time.Time {
	if o == nil || IsNil(o.CompletedAt) {
		var ret time.Time
		return ret
	}
	return *o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTrainingJobStatusResponse) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompletedAt) {
		return nil, false
	}
	return o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *PostTrainingJobStatusResponse) HasCompletedAt() bool {
	if o != nil && !IsNil(o.CompletedAt) {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given time.Time and assigns it to the CompletedAt field.
func (o *PostTrainingJobStatusResponse) SetCompletedAt(v time.Time) {
	o.CompletedAt = &v
}

// GetResourcesAllocated returns the ResourcesAllocated field value if set, zero value otherwise.
func (o *PostTrainingJobStatusResponse) GetResourcesAllocated() map[string]AppendRowsRequestRowsInnerValue {
	if o == nil || IsNil(o.ResourcesAllocated) {
		var ret map[string]AppendRowsRequestRowsInnerValue
		return ret
	}
	return o.ResourcesAllocated
}

// GetResourcesAllocatedOk returns a tuple with the ResourcesAllocated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTrainingJobStatusResponse) GetResourcesAllocatedOk() (map[string]AppendRowsRequestRowsInnerValue, bool) {
	if o == nil || IsNil(o.ResourcesAllocated) {
		return map[string]AppendRowsRequestRowsInnerValue{}, false
	}
	return o.ResourcesAllocated, true
}

// HasResourcesAllocated returns a boolean if a field has been set.
func (o *PostTrainingJobStatusResponse) HasResourcesAllocated() bool {
	if o != nil && !IsNil(o.ResourcesAllocated) {
		return true
	}

	return false
}

// SetResourcesAllocated gets a reference to the given map[string]AppendRowsRequestRowsInnerValue and assigns it to the ResourcesAllocated field.
func (o *PostTrainingJobStatusResponse) SetResourcesAllocated(v map[string]AppendRowsRequestRowsInnerValue) {
	o.ResourcesAllocated = v
}

// GetCheckpoints returns the Checkpoints field value
func (o *PostTrainingJobStatusResponse) GetCheckpoints() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.Checkpoints
}

// GetCheckpointsOk returns a tuple with the Checkpoints field value
// and a boolean to check if the value has been set.
func (o *PostTrainingJobStatusResponse) GetCheckpointsOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Checkpoints, true
}

// SetCheckpoints sets field value
func (o *PostTrainingJobStatusResponse) SetCheckpoints(v []interface{}) {
	o.Checkpoints = v
}

func (o PostTrainingJobStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTrainingJobStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["job_uuid"] = o.JobUuid
	toSerialize["status"] = o.Status
	if !IsNil(o.ScheduledAt) {
		toSerialize["scheduled_at"] = o.ScheduledAt
	}
	if !IsNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !IsNil(o.CompletedAt) {
		toSerialize["completed_at"] = o.CompletedAt
	}
	if !IsNil(o.ResourcesAllocated) {
		toSerialize["resources_allocated"] = o.ResourcesAllocated
	}
	toSerialize["checkpoints"] = o.Checkpoints
	return toSerialize, nil
}

func (o *PostTrainingJobStatusResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"job_uuid",
		"status",
		"checkpoints",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostTrainingJobStatusResponse := _PostTrainingJobStatusResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostTrainingJobStatusResponse)

	if err != nil {
		return err
	}

	*o = PostTrainingJobStatusResponse(varPostTrainingJobStatusResponse)

	return err
}

type NullablePostTrainingJobStatusResponse struct {
	value *PostTrainingJobStatusResponse
	isSet bool
}

func (v NullablePostTrainingJobStatusResponse) Get() *PostTrainingJobStatusResponse {
	return v.value
}

func (v *NullablePostTrainingJobStatusResponse) Set(val *PostTrainingJobStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTrainingJobStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTrainingJobStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTrainingJobStatusResponse(val *PostTrainingJobStatusResponse) *NullablePostTrainingJobStatusResponse {
	return &NullablePostTrainingJobStatusResponse{value: val, isSet: true}
}

func (v NullablePostTrainingJobStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTrainingJobStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


