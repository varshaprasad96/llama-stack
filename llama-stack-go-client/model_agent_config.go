/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AgentConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentConfig{}

// AgentConfig Configuration for an agent.
type AgentConfig struct {
	SamplingParams *SamplingParams `json:"sampling_params,omitempty"`
	InputShields []string `json:"input_shields,omitempty"`
	OutputShields []string `json:"output_shields,omitempty"`
	Toolgroups []AgentTool `json:"toolgroups,omitempty"`
	ClientTools []ToolDef `json:"client_tools,omitempty"`
	// Whether tool use is required or automatic. This is a hint to the model which may not be followed. It depends on the Instruction Following capabilities of the model.
	// Deprecated
	ToolChoice *string `json:"tool_choice,omitempty"`
	// Prompt format for calling custom / zero shot tools.
	// Deprecated
	ToolPromptFormat *string `json:"tool_prompt_format,omitempty"`
	ToolConfig *ToolConfig `json:"tool_config,omitempty"`
	MaxInferIters *int32 `json:"max_infer_iters,omitempty"`
	// The model identifier to use for the agent
	Model string `json:"model"`
	// The system instructions for the agent
	Instructions string `json:"instructions"`
	// Optional name for the agent, used in telemetry and identification
	Name *string `json:"name,omitempty"`
	// Optional flag indicating whether session data has to be persisted
	EnableSessionPersistence *bool `json:"enable_session_persistence,omitempty"`
	// Optional response format configuration
	ResponseFormat *ResponseFormat `json:"response_format,omitempty"`
}

type _AgentConfig AgentConfig

// NewAgentConfig instantiates a new AgentConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentConfig(model string, instructions string) *AgentConfig {
	this := AgentConfig{}
	var maxInferIters int32 = 10
	this.MaxInferIters = &maxInferIters
	this.Model = model
	this.Instructions = instructions
	var enableSessionPersistence bool = false
	this.EnableSessionPersistence = &enableSessionPersistence
	return &this
}

// NewAgentConfigWithDefaults instantiates a new AgentConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentConfigWithDefaults() *AgentConfig {
	this := AgentConfig{}
	var maxInferIters int32 = 10
	this.MaxInferIters = &maxInferIters
	var enableSessionPersistence bool = false
	this.EnableSessionPersistence = &enableSessionPersistence
	return &this
}

// GetSamplingParams returns the SamplingParams field value if set, zero value otherwise.
func (o *AgentConfig) GetSamplingParams() SamplingParams {
	if o == nil || IsNil(o.SamplingParams) {
		var ret SamplingParams
		return ret
	}
	return *o.SamplingParams
}

// GetSamplingParamsOk returns a tuple with the SamplingParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetSamplingParamsOk() (*SamplingParams, bool) {
	if o == nil || IsNil(o.SamplingParams) {
		return nil, false
	}
	return o.SamplingParams, true
}

// HasSamplingParams returns a boolean if a field has been set.
func (o *AgentConfig) HasSamplingParams() bool {
	if o != nil && !IsNil(o.SamplingParams) {
		return true
	}

	return false
}

// SetSamplingParams gets a reference to the given SamplingParams and assigns it to the SamplingParams field.
func (o *AgentConfig) SetSamplingParams(v SamplingParams) {
	o.SamplingParams = &v
}

// GetInputShields returns the InputShields field value if set, zero value otherwise.
func (o *AgentConfig) GetInputShields() []string {
	if o == nil || IsNil(o.InputShields) {
		var ret []string
		return ret
	}
	return o.InputShields
}

// GetInputShieldsOk returns a tuple with the InputShields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetInputShieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.InputShields) {
		return nil, false
	}
	return o.InputShields, true
}

// HasInputShields returns a boolean if a field has been set.
func (o *AgentConfig) HasInputShields() bool {
	if o != nil && !IsNil(o.InputShields) {
		return true
	}

	return false
}

// SetInputShields gets a reference to the given []string and assigns it to the InputShields field.
func (o *AgentConfig) SetInputShields(v []string) {
	o.InputShields = v
}

// GetOutputShields returns the OutputShields field value if set, zero value otherwise.
func (o *AgentConfig) GetOutputShields() []string {
	if o == nil || IsNil(o.OutputShields) {
		var ret []string
		return ret
	}
	return o.OutputShields
}

// GetOutputShieldsOk returns a tuple with the OutputShields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetOutputShieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.OutputShields) {
		return nil, false
	}
	return o.OutputShields, true
}

// HasOutputShields returns a boolean if a field has been set.
func (o *AgentConfig) HasOutputShields() bool {
	if o != nil && !IsNil(o.OutputShields) {
		return true
	}

	return false
}

// SetOutputShields gets a reference to the given []string and assigns it to the OutputShields field.
func (o *AgentConfig) SetOutputShields(v []string) {
	o.OutputShields = v
}

// GetToolgroups returns the Toolgroups field value if set, zero value otherwise.
func (o *AgentConfig) GetToolgroups() []AgentTool {
	if o == nil || IsNil(o.Toolgroups) {
		var ret []AgentTool
		return ret
	}
	return o.Toolgroups
}

// GetToolgroupsOk returns a tuple with the Toolgroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetToolgroupsOk() ([]AgentTool, bool) {
	if o == nil || IsNil(o.Toolgroups) {
		return nil, false
	}
	return o.Toolgroups, true
}

// HasToolgroups returns a boolean if a field has been set.
func (o *AgentConfig) HasToolgroups() bool {
	if o != nil && !IsNil(o.Toolgroups) {
		return true
	}

	return false
}

// SetToolgroups gets a reference to the given []AgentTool and assigns it to the Toolgroups field.
func (o *AgentConfig) SetToolgroups(v []AgentTool) {
	o.Toolgroups = v
}

// GetClientTools returns the ClientTools field value if set, zero value otherwise.
func (o *AgentConfig) GetClientTools() []ToolDef {
	if o == nil || IsNil(o.ClientTools) {
		var ret []ToolDef
		return ret
	}
	return o.ClientTools
}

// GetClientToolsOk returns a tuple with the ClientTools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetClientToolsOk() ([]ToolDef, bool) {
	if o == nil || IsNil(o.ClientTools) {
		return nil, false
	}
	return o.ClientTools, true
}

// HasClientTools returns a boolean if a field has been set.
func (o *AgentConfig) HasClientTools() bool {
	if o != nil && !IsNil(o.ClientTools) {
		return true
	}

	return false
}

// SetClientTools gets a reference to the given []ToolDef and assigns it to the ClientTools field.
func (o *AgentConfig) SetClientTools(v []ToolDef) {
	o.ClientTools = v
}

// GetToolChoice returns the ToolChoice field value if set, zero value otherwise.
// Deprecated
func (o *AgentConfig) GetToolChoice() string {
	if o == nil || IsNil(o.ToolChoice) {
		var ret string
		return ret
	}
	return *o.ToolChoice
}

// GetToolChoiceOk returns a tuple with the ToolChoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AgentConfig) GetToolChoiceOk() (*string, bool) {
	if o == nil || IsNil(o.ToolChoice) {
		return nil, false
	}
	return o.ToolChoice, true
}

// HasToolChoice returns a boolean if a field has been set.
func (o *AgentConfig) HasToolChoice() bool {
	if o != nil && !IsNil(o.ToolChoice) {
		return true
	}

	return false
}

// SetToolChoice gets a reference to the given string and assigns it to the ToolChoice field.
// Deprecated
func (o *AgentConfig) SetToolChoice(v string) {
	o.ToolChoice = &v
}

// GetToolPromptFormat returns the ToolPromptFormat field value if set, zero value otherwise.
// Deprecated
func (o *AgentConfig) GetToolPromptFormat() string {
	if o == nil || IsNil(o.ToolPromptFormat) {
		var ret string
		return ret
	}
	return *o.ToolPromptFormat
}

// GetToolPromptFormatOk returns a tuple with the ToolPromptFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AgentConfig) GetToolPromptFormatOk() (*string, bool) {
	if o == nil || IsNil(o.ToolPromptFormat) {
		return nil, false
	}
	return o.ToolPromptFormat, true
}

// HasToolPromptFormat returns a boolean if a field has been set.
func (o *AgentConfig) HasToolPromptFormat() bool {
	if o != nil && !IsNil(o.ToolPromptFormat) {
		return true
	}

	return false
}

// SetToolPromptFormat gets a reference to the given string and assigns it to the ToolPromptFormat field.
// Deprecated
func (o *AgentConfig) SetToolPromptFormat(v string) {
	o.ToolPromptFormat = &v
}

// GetToolConfig returns the ToolConfig field value if set, zero value otherwise.
func (o *AgentConfig) GetToolConfig() ToolConfig {
	if o == nil || IsNil(o.ToolConfig) {
		var ret ToolConfig
		return ret
	}
	return *o.ToolConfig
}

// GetToolConfigOk returns a tuple with the ToolConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetToolConfigOk() (*ToolConfig, bool) {
	if o == nil || IsNil(o.ToolConfig) {
		return nil, false
	}
	return o.ToolConfig, true
}

// HasToolConfig returns a boolean if a field has been set.
func (o *AgentConfig) HasToolConfig() bool {
	if o != nil && !IsNil(o.ToolConfig) {
		return true
	}

	return false
}

// SetToolConfig gets a reference to the given ToolConfig and assigns it to the ToolConfig field.
func (o *AgentConfig) SetToolConfig(v ToolConfig) {
	o.ToolConfig = &v
}

// GetMaxInferIters returns the MaxInferIters field value if set, zero value otherwise.
func (o *AgentConfig) GetMaxInferIters() int32 {
	if o == nil || IsNil(o.MaxInferIters) {
		var ret int32
		return ret
	}
	return *o.MaxInferIters
}

// GetMaxInferItersOk returns a tuple with the MaxInferIters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetMaxInferItersOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxInferIters) {
		return nil, false
	}
	return o.MaxInferIters, true
}

// HasMaxInferIters returns a boolean if a field has been set.
func (o *AgentConfig) HasMaxInferIters() bool {
	if o != nil && !IsNil(o.MaxInferIters) {
		return true
	}

	return false
}

// SetMaxInferIters gets a reference to the given int32 and assigns it to the MaxInferIters field.
func (o *AgentConfig) SetMaxInferIters(v int32) {
	o.MaxInferIters = &v
}

// GetModel returns the Model field value
func (o *AgentConfig) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *AgentConfig) SetModel(v string) {
	o.Model = v
}

// GetInstructions returns the Instructions field value
func (o *AgentConfig) GetInstructions() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetInstructionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instructions, true
}

// SetInstructions sets field value
func (o *AgentConfig) SetInstructions(v string) {
	o.Instructions = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AgentConfig) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AgentConfig) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AgentConfig) SetName(v string) {
	o.Name = &v
}

// GetEnableSessionPersistence returns the EnableSessionPersistence field value if set, zero value otherwise.
func (o *AgentConfig) GetEnableSessionPersistence() bool {
	if o == nil || IsNil(o.EnableSessionPersistence) {
		var ret bool
		return ret
	}
	return *o.EnableSessionPersistence
}

// GetEnableSessionPersistenceOk returns a tuple with the EnableSessionPersistence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetEnableSessionPersistenceOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSessionPersistence) {
		return nil, false
	}
	return o.EnableSessionPersistence, true
}

// HasEnableSessionPersistence returns a boolean if a field has been set.
func (o *AgentConfig) HasEnableSessionPersistence() bool {
	if o != nil && !IsNil(o.EnableSessionPersistence) {
		return true
	}

	return false
}

// SetEnableSessionPersistence gets a reference to the given bool and assigns it to the EnableSessionPersistence field.
func (o *AgentConfig) SetEnableSessionPersistence(v bool) {
	o.EnableSessionPersistence = &v
}

// GetResponseFormat returns the ResponseFormat field value if set, zero value otherwise.
func (o *AgentConfig) GetResponseFormat() ResponseFormat {
	if o == nil || IsNil(o.ResponseFormat) {
		var ret ResponseFormat
		return ret
	}
	return *o.ResponseFormat
}

// GetResponseFormatOk returns a tuple with the ResponseFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfig) GetResponseFormatOk() (*ResponseFormat, bool) {
	if o == nil || IsNil(o.ResponseFormat) {
		return nil, false
	}
	return o.ResponseFormat, true
}

// HasResponseFormat returns a boolean if a field has been set.
func (o *AgentConfig) HasResponseFormat() bool {
	if o != nil && !IsNil(o.ResponseFormat) {
		return true
	}

	return false
}

// SetResponseFormat gets a reference to the given ResponseFormat and assigns it to the ResponseFormat field.
func (o *AgentConfig) SetResponseFormat(v ResponseFormat) {
	o.ResponseFormat = &v
}

func (o AgentConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SamplingParams) {
		toSerialize["sampling_params"] = o.SamplingParams
	}
	if !IsNil(o.InputShields) {
		toSerialize["input_shields"] = o.InputShields
	}
	if !IsNil(o.OutputShields) {
		toSerialize["output_shields"] = o.OutputShields
	}
	if !IsNil(o.Toolgroups) {
		toSerialize["toolgroups"] = o.Toolgroups
	}
	if !IsNil(o.ClientTools) {
		toSerialize["client_tools"] = o.ClientTools
	}
	if !IsNil(o.ToolChoice) {
		toSerialize["tool_choice"] = o.ToolChoice
	}
	if !IsNil(o.ToolPromptFormat) {
		toSerialize["tool_prompt_format"] = o.ToolPromptFormat
	}
	if !IsNil(o.ToolConfig) {
		toSerialize["tool_config"] = o.ToolConfig
	}
	if !IsNil(o.MaxInferIters) {
		toSerialize["max_infer_iters"] = o.MaxInferIters
	}
	toSerialize["model"] = o.Model
	toSerialize["instructions"] = o.Instructions
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.EnableSessionPersistence) {
		toSerialize["enable_session_persistence"] = o.EnableSessionPersistence
	}
	if !IsNil(o.ResponseFormat) {
		toSerialize["response_format"] = o.ResponseFormat
	}
	return toSerialize, nil
}

func (o *AgentConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
		"instructions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentConfig := _AgentConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAgentConfig)

	if err != nil {
		return err
	}

	*o = AgentConfig(varAgentConfig)

	return err
}

type NullableAgentConfig struct {
	value *AgentConfig
	isSet bool
}

func (v NullableAgentConfig) Get() *AgentConfig {
	return v.value
}

func (v *NullableAgentConfig) Set(val *AgentConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentConfig(val *AgentConfig) *NullableAgentConfig {
	return &NullableAgentConfig{value: val, isSet: true}
}

func (v NullableAgentConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


