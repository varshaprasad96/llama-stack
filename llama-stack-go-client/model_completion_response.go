/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CompletionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompletionResponse{}

// CompletionResponse Response from a completion request.
type CompletionResponse struct {
	Metrics []MetricInResponse `json:"metrics,omitempty"`
	// The generated completion text
	Content string `json:"content"`
	// Reason why generation stopped
	StopReason string `json:"stop_reason"`
	// Optional log probabilities for generated tokens
	Logprobs []TokenLogProbs `json:"logprobs,omitempty"`
}

type _CompletionResponse CompletionResponse

// NewCompletionResponse instantiates a new CompletionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompletionResponse(content string, stopReason string) *CompletionResponse {
	this := CompletionResponse{}
	this.Content = content
	this.StopReason = stopReason
	return &this
}

// NewCompletionResponseWithDefaults instantiates a new CompletionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompletionResponseWithDefaults() *CompletionResponse {
	this := CompletionResponse{}
	return &this
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *CompletionResponse) GetMetrics() []MetricInResponse {
	if o == nil || IsNil(o.Metrics) {
		var ret []MetricInResponse
		return ret
	}
	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletionResponse) GetMetricsOk() ([]MetricInResponse, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *CompletionResponse) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []MetricInResponse and assigns it to the Metrics field.
func (o *CompletionResponse) SetMetrics(v []MetricInResponse) {
	o.Metrics = v
}

// GetContent returns the Content field value
func (o *CompletionResponse) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *CompletionResponse) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *CompletionResponse) SetContent(v string) {
	o.Content = v
}

// GetStopReason returns the StopReason field value
func (o *CompletionResponse) GetStopReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StopReason
}

// GetStopReasonOk returns a tuple with the StopReason field value
// and a boolean to check if the value has been set.
func (o *CompletionResponse) GetStopReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StopReason, true
}

// SetStopReason sets field value
func (o *CompletionResponse) SetStopReason(v string) {
	o.StopReason = v
}

// GetLogprobs returns the Logprobs field value if set, zero value otherwise.
func (o *CompletionResponse) GetLogprobs() []TokenLogProbs {
	if o == nil || IsNil(o.Logprobs) {
		var ret []TokenLogProbs
		return ret
	}
	return o.Logprobs
}

// GetLogprobsOk returns a tuple with the Logprobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletionResponse) GetLogprobsOk() ([]TokenLogProbs, bool) {
	if o == nil || IsNil(o.Logprobs) {
		return nil, false
	}
	return o.Logprobs, true
}

// HasLogprobs returns a boolean if a field has been set.
func (o *CompletionResponse) HasLogprobs() bool {
	if o != nil && !IsNil(o.Logprobs) {
		return true
	}

	return false
}

// SetLogprobs gets a reference to the given []TokenLogProbs and assigns it to the Logprobs field.
func (o *CompletionResponse) SetLogprobs(v []TokenLogProbs) {
	o.Logprobs = v
}

func (o CompletionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompletionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	toSerialize["content"] = o.Content
	toSerialize["stop_reason"] = o.StopReason
	if !IsNil(o.Logprobs) {
		toSerialize["logprobs"] = o.Logprobs
	}
	return toSerialize, nil
}

func (o *CompletionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content",
		"stop_reason",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompletionResponse := _CompletionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompletionResponse)

	if err != nil {
		return err
	}

	*o = CompletionResponse(varCompletionResponse)

	return err
}

type NullableCompletionResponse struct {
	value *CompletionResponse
	isSet bool
}

func (v NullableCompletionResponse) Get() *CompletionResponse {
	return v.value
}

func (v *NullableCompletionResponse) Set(val *CompletionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCompletionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCompletionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompletionResponse(val *CompletionResponse) *NullableCompletionResponse {
	return &NullableCompletionResponse{value: val, isSet: true}
}

func (v NullableCompletionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompletionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


