/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// OpenAISystemMessageParamContent - The content of the \"system prompt\". If multiple system messages are provided, they are concatenated. The underlying Llama Stack code may also add other system messages (for example, for formatting tool definitions).
type OpenAISystemMessageParamContent struct {
	ArrayOfOpenAIChatCompletionContentPartParam *[]OpenAIChatCompletionContentPartParam
	String *string
}

// []OpenAIChatCompletionContentPartParamAsOpenAISystemMessageParamContent is a convenience function that returns []OpenAIChatCompletionContentPartParam wrapped in OpenAISystemMessageParamContent
func ArrayOfOpenAIChatCompletionContentPartParamAsOpenAISystemMessageParamContent(v *[]OpenAIChatCompletionContentPartParam) OpenAISystemMessageParamContent {
	return OpenAISystemMessageParamContent{
		ArrayOfOpenAIChatCompletionContentPartParam: v,
	}
}

// stringAsOpenAISystemMessageParamContent is a convenience function that returns string wrapped in OpenAISystemMessageParamContent
func StringAsOpenAISystemMessageParamContent(v *string) OpenAISystemMessageParamContent {
	return OpenAISystemMessageParamContent{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *OpenAISystemMessageParamContent) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ArrayOfOpenAIChatCompletionContentPartParam
	err = newStrictDecoder(data).Decode(&dst.ArrayOfOpenAIChatCompletionContentPartParam)
	if err == nil {
		jsonArrayOfOpenAIChatCompletionContentPartParam, _ := json.Marshal(dst.ArrayOfOpenAIChatCompletionContentPartParam)
		if string(jsonArrayOfOpenAIChatCompletionContentPartParam) == "{}" { // empty struct
			dst.ArrayOfOpenAIChatCompletionContentPartParam = nil
		} else {
			if err = validator.Validate(dst.ArrayOfOpenAIChatCompletionContentPartParam); err != nil {
				dst.ArrayOfOpenAIChatCompletionContentPartParam = nil
			} else {
				match++
			}
		}
	} else {
		dst.ArrayOfOpenAIChatCompletionContentPartParam = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			if err = validator.Validate(dst.String); err != nil {
				dst.String = nil
			} else {
				match++
			}
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ArrayOfOpenAIChatCompletionContentPartParam = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(OpenAISystemMessageParamContent)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(OpenAISystemMessageParamContent)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src OpenAISystemMessageParamContent) MarshalJSON() ([]byte, error) {
	if src.ArrayOfOpenAIChatCompletionContentPartParam != nil {
		return json.Marshal(&src.ArrayOfOpenAIChatCompletionContentPartParam)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *OpenAISystemMessageParamContent) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ArrayOfOpenAIChatCompletionContentPartParam != nil {
		return obj.ArrayOfOpenAIChatCompletionContentPartParam
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj OpenAISystemMessageParamContent) GetActualInstanceValue() (interface{}) {
	if obj.ArrayOfOpenAIChatCompletionContentPartParam != nil {
		return *obj.ArrayOfOpenAIChatCompletionContentPartParam
	}

	if obj.String != nil {
		return *obj.String
	}

	// all schemas are nil
	return nil
}

type NullableOpenAISystemMessageParamContent struct {
	value *OpenAISystemMessageParamContent
	isSet bool
}

func (v NullableOpenAISystemMessageParamContent) Get() *OpenAISystemMessageParamContent {
	return v.value
}

func (v *NullableOpenAISystemMessageParamContent) Set(val *OpenAISystemMessageParamContent) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenAISystemMessageParamContent) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenAISystemMessageParamContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenAISystemMessageParamContent(val *OpenAISystemMessageParamContent) *NullableOpenAISystemMessageParamContent {
	return &NullableOpenAISystemMessageParamContent{value: val, isSet: true}
}

func (v NullableOpenAISystemMessageParamContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenAISystemMessageParamContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


