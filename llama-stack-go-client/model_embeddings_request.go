/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EmbeddingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbeddingsRequest{}

// EmbeddingsRequest struct for EmbeddingsRequest
type EmbeddingsRequest struct {
	// The identifier of the model to use. The model must be an embedding model registered with Llama Stack and available via the /models endpoint.
	ModelId string `json:"model_id"`
	Contents EmbeddingsRequestContents `json:"contents"`
	// (Optional) Config for how to truncate text for embedding when text is longer than the model's max sequence length.
	TextTruncation *string `json:"text_truncation,omitempty"`
	// (Optional) Output dimensionality for the embeddings. Only supported by Matryoshka models.
	OutputDimension *int32 `json:"output_dimension,omitempty"`
	// (Optional) How is the embedding being used? This is only supported by asymmetric embedding models.
	TaskType *string `json:"task_type,omitempty"`
}

type _EmbeddingsRequest EmbeddingsRequest

// NewEmbeddingsRequest instantiates a new EmbeddingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddingsRequest(modelId string, contents EmbeddingsRequestContents) *EmbeddingsRequest {
	this := EmbeddingsRequest{}
	this.ModelId = modelId
	this.Contents = contents
	return &this
}

// NewEmbeddingsRequestWithDefaults instantiates a new EmbeddingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddingsRequestWithDefaults() *EmbeddingsRequest {
	this := EmbeddingsRequest{}
	return &this
}

// GetModelId returns the ModelId field value
func (o *EmbeddingsRequest) GetModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value
// and a boolean to check if the value has been set.
func (o *EmbeddingsRequest) GetModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelId, true
}

// SetModelId sets field value
func (o *EmbeddingsRequest) SetModelId(v string) {
	o.ModelId = v
}

// GetContents returns the Contents field value
func (o *EmbeddingsRequest) GetContents() EmbeddingsRequestContents {
	if o == nil {
		var ret EmbeddingsRequestContents
		return ret
	}

	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value
// and a boolean to check if the value has been set.
func (o *EmbeddingsRequest) GetContentsOk() (*EmbeddingsRequestContents, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contents, true
}

// SetContents sets field value
func (o *EmbeddingsRequest) SetContents(v EmbeddingsRequestContents) {
	o.Contents = v
}

// GetTextTruncation returns the TextTruncation field value if set, zero value otherwise.
func (o *EmbeddingsRequest) GetTextTruncation() string {
	if o == nil || IsNil(o.TextTruncation) {
		var ret string
		return ret
	}
	return *o.TextTruncation
}

// GetTextTruncationOk returns a tuple with the TextTruncation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingsRequest) GetTextTruncationOk() (*string, bool) {
	if o == nil || IsNil(o.TextTruncation) {
		return nil, false
	}
	return o.TextTruncation, true
}

// HasTextTruncation returns a boolean if a field has been set.
func (o *EmbeddingsRequest) HasTextTruncation() bool {
	if o != nil && !IsNil(o.TextTruncation) {
		return true
	}

	return false
}

// SetTextTruncation gets a reference to the given string and assigns it to the TextTruncation field.
func (o *EmbeddingsRequest) SetTextTruncation(v string) {
	o.TextTruncation = &v
}

// GetOutputDimension returns the OutputDimension field value if set, zero value otherwise.
func (o *EmbeddingsRequest) GetOutputDimension() int32 {
	if o == nil || IsNil(o.OutputDimension) {
		var ret int32
		return ret
	}
	return *o.OutputDimension
}

// GetOutputDimensionOk returns a tuple with the OutputDimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingsRequest) GetOutputDimensionOk() (*int32, bool) {
	if o == nil || IsNil(o.OutputDimension) {
		return nil, false
	}
	return o.OutputDimension, true
}

// HasOutputDimension returns a boolean if a field has been set.
func (o *EmbeddingsRequest) HasOutputDimension() bool {
	if o != nil && !IsNil(o.OutputDimension) {
		return true
	}

	return false
}

// SetOutputDimension gets a reference to the given int32 and assigns it to the OutputDimension field.
func (o *EmbeddingsRequest) SetOutputDimension(v int32) {
	o.OutputDimension = &v
}

// GetTaskType returns the TaskType field value if set, zero value otherwise.
func (o *EmbeddingsRequest) GetTaskType() string {
	if o == nil || IsNil(o.TaskType) {
		var ret string
		return ret
	}
	return *o.TaskType
}

// GetTaskTypeOk returns a tuple with the TaskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingsRequest) GetTaskTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TaskType) {
		return nil, false
	}
	return o.TaskType, true
}

// HasTaskType returns a boolean if a field has been set.
func (o *EmbeddingsRequest) HasTaskType() bool {
	if o != nil && !IsNil(o.TaskType) {
		return true
	}

	return false
}

// SetTaskType gets a reference to the given string and assigns it to the TaskType field.
func (o *EmbeddingsRequest) SetTaskType(v string) {
	o.TaskType = &v
}

func (o EmbeddingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbeddingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model_id"] = o.ModelId
	toSerialize["contents"] = o.Contents
	if !IsNil(o.TextTruncation) {
		toSerialize["text_truncation"] = o.TextTruncation
	}
	if !IsNil(o.OutputDimension) {
		toSerialize["output_dimension"] = o.OutputDimension
	}
	if !IsNil(o.TaskType) {
		toSerialize["task_type"] = o.TaskType
	}
	return toSerialize, nil
}

func (o *EmbeddingsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model_id",
		"contents",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmbeddingsRequest := _EmbeddingsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEmbeddingsRequest)

	if err != nil {
		return err
	}

	*o = EmbeddingsRequest(varEmbeddingsRequest)

	return err
}

type NullableEmbeddingsRequest struct {
	value *EmbeddingsRequest
	isSet bool
}

func (v NullableEmbeddingsRequest) Get() *EmbeddingsRequest {
	return v.value
}

func (v *NullableEmbeddingsRequest) Set(val *EmbeddingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddingsRequest(val *EmbeddingsRequest) *NullableEmbeddingsRequest {
	return &NullableEmbeddingsRequest{value: val, isSet: true}
}

func (v NullableEmbeddingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


