/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AgentTurnResponseTurnStartPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentTurnResponseTurnStartPayload{}

// AgentTurnResponseTurnStartPayload struct for AgentTurnResponseTurnStartPayload
type AgentTurnResponseTurnStartPayload struct {
	EventType string `json:"event_type"`
	TurnId string `json:"turn_id"`
}

type _AgentTurnResponseTurnStartPayload AgentTurnResponseTurnStartPayload

// NewAgentTurnResponseTurnStartPayload instantiates a new AgentTurnResponseTurnStartPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentTurnResponseTurnStartPayload(eventType string, turnId string) *AgentTurnResponseTurnStartPayload {
	this := AgentTurnResponseTurnStartPayload{}
	this.EventType = eventType
	this.TurnId = turnId
	return &this
}

// NewAgentTurnResponseTurnStartPayloadWithDefaults instantiates a new AgentTurnResponseTurnStartPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentTurnResponseTurnStartPayloadWithDefaults() *AgentTurnResponseTurnStartPayload {
	this := AgentTurnResponseTurnStartPayload{}
	var eventType string = "turn_start"
	this.EventType = eventType
	return &this
}

// GetEventType returns the EventType field value
func (o *AgentTurnResponseTurnStartPayload) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *AgentTurnResponseTurnStartPayload) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *AgentTurnResponseTurnStartPayload) SetEventType(v string) {
	o.EventType = v
}

// GetTurnId returns the TurnId field value
func (o *AgentTurnResponseTurnStartPayload) GetTurnId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TurnId
}

// GetTurnIdOk returns a tuple with the TurnId field value
// and a boolean to check if the value has been set.
func (o *AgentTurnResponseTurnStartPayload) GetTurnIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TurnId, true
}

// SetTurnId sets field value
func (o *AgentTurnResponseTurnStartPayload) SetTurnId(v string) {
	o.TurnId = v
}

func (o AgentTurnResponseTurnStartPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentTurnResponseTurnStartPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["event_type"] = o.EventType
	toSerialize["turn_id"] = o.TurnId
	return toSerialize, nil
}

func (o *AgentTurnResponseTurnStartPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"event_type",
		"turn_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentTurnResponseTurnStartPayload := _AgentTurnResponseTurnStartPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAgentTurnResponseTurnStartPayload)

	if err != nil {
		return err
	}

	*o = AgentTurnResponseTurnStartPayload(varAgentTurnResponseTurnStartPayload)

	return err
}

type NullableAgentTurnResponseTurnStartPayload struct {
	value *AgentTurnResponseTurnStartPayload
	isSet bool
}

func (v NullableAgentTurnResponseTurnStartPayload) Get() *AgentTurnResponseTurnStartPayload {
	return v.value
}

func (v *NullableAgentTurnResponseTurnStartPayload) Set(val *AgentTurnResponseTurnStartPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentTurnResponseTurnStartPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentTurnResponseTurnStartPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentTurnResponseTurnStartPayload(val *AgentTurnResponseTurnStartPayload) *NullableAgentTurnResponseTurnStartPayload {
	return &NullableAgentTurnResponseTurnStartPayload{value: val, isSet: true}
}

func (v NullableAgentTurnResponseTurnStartPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentTurnResponseTurnStartPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


