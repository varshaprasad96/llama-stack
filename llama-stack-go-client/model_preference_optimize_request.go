/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PreferenceOptimizeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreferenceOptimizeRequest{}

// PreferenceOptimizeRequest struct for PreferenceOptimizeRequest
type PreferenceOptimizeRequest struct {
	JobUuid string `json:"job_uuid"`
	FinetunedModel string `json:"finetuned_model"`
	AlgorithmConfig DPOAlignmentConfig `json:"algorithm_config"`
	TrainingConfig TrainingConfig `json:"training_config"`
	HyperparamSearchConfig map[string]AppendRowsRequestRowsInnerValue `json:"hyperparam_search_config"`
	LoggerConfig map[string]AppendRowsRequestRowsInnerValue `json:"logger_config"`
}

type _PreferenceOptimizeRequest PreferenceOptimizeRequest

// NewPreferenceOptimizeRequest instantiates a new PreferenceOptimizeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreferenceOptimizeRequest(jobUuid string, finetunedModel string, algorithmConfig DPOAlignmentConfig, trainingConfig TrainingConfig, hyperparamSearchConfig map[string]AppendRowsRequestRowsInnerValue, loggerConfig map[string]AppendRowsRequestRowsInnerValue) *PreferenceOptimizeRequest {
	this := PreferenceOptimizeRequest{}
	this.JobUuid = jobUuid
	this.FinetunedModel = finetunedModel
	this.AlgorithmConfig = algorithmConfig
	this.TrainingConfig = trainingConfig
	this.HyperparamSearchConfig = hyperparamSearchConfig
	this.LoggerConfig = loggerConfig
	return &this
}

// NewPreferenceOptimizeRequestWithDefaults instantiates a new PreferenceOptimizeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreferenceOptimizeRequestWithDefaults() *PreferenceOptimizeRequest {
	this := PreferenceOptimizeRequest{}
	return &this
}

// GetJobUuid returns the JobUuid field value
func (o *PreferenceOptimizeRequest) GetJobUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobUuid
}

// GetJobUuidOk returns a tuple with the JobUuid field value
// and a boolean to check if the value has been set.
func (o *PreferenceOptimizeRequest) GetJobUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobUuid, true
}

// SetJobUuid sets field value
func (o *PreferenceOptimizeRequest) SetJobUuid(v string) {
	o.JobUuid = v
}

// GetFinetunedModel returns the FinetunedModel field value
func (o *PreferenceOptimizeRequest) GetFinetunedModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FinetunedModel
}

// GetFinetunedModelOk returns a tuple with the FinetunedModel field value
// and a boolean to check if the value has been set.
func (o *PreferenceOptimizeRequest) GetFinetunedModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinetunedModel, true
}

// SetFinetunedModel sets field value
func (o *PreferenceOptimizeRequest) SetFinetunedModel(v string) {
	o.FinetunedModel = v
}

// GetAlgorithmConfig returns the AlgorithmConfig field value
func (o *PreferenceOptimizeRequest) GetAlgorithmConfig() DPOAlignmentConfig {
	if o == nil {
		var ret DPOAlignmentConfig
		return ret
	}

	return o.AlgorithmConfig
}

// GetAlgorithmConfigOk returns a tuple with the AlgorithmConfig field value
// and a boolean to check if the value has been set.
func (o *PreferenceOptimizeRequest) GetAlgorithmConfigOk() (*DPOAlignmentConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlgorithmConfig, true
}

// SetAlgorithmConfig sets field value
func (o *PreferenceOptimizeRequest) SetAlgorithmConfig(v DPOAlignmentConfig) {
	o.AlgorithmConfig = v
}

// GetTrainingConfig returns the TrainingConfig field value
func (o *PreferenceOptimizeRequest) GetTrainingConfig() TrainingConfig {
	if o == nil {
		var ret TrainingConfig
		return ret
	}

	return o.TrainingConfig
}

// GetTrainingConfigOk returns a tuple with the TrainingConfig field value
// and a boolean to check if the value has been set.
func (o *PreferenceOptimizeRequest) GetTrainingConfigOk() (*TrainingConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrainingConfig, true
}

// SetTrainingConfig sets field value
func (o *PreferenceOptimizeRequest) SetTrainingConfig(v TrainingConfig) {
	o.TrainingConfig = v
}

// GetHyperparamSearchConfig returns the HyperparamSearchConfig field value
func (o *PreferenceOptimizeRequest) GetHyperparamSearchConfig() map[string]AppendRowsRequestRowsInnerValue {
	if o == nil {
		var ret map[string]AppendRowsRequestRowsInnerValue
		return ret
	}

	return o.HyperparamSearchConfig
}

// GetHyperparamSearchConfigOk returns a tuple with the HyperparamSearchConfig field value
// and a boolean to check if the value has been set.
func (o *PreferenceOptimizeRequest) GetHyperparamSearchConfigOk() (map[string]AppendRowsRequestRowsInnerValue, bool) {
	if o == nil {
		return map[string]AppendRowsRequestRowsInnerValue{}, false
	}
	return o.HyperparamSearchConfig, true
}

// SetHyperparamSearchConfig sets field value
func (o *PreferenceOptimizeRequest) SetHyperparamSearchConfig(v map[string]AppendRowsRequestRowsInnerValue) {
	o.HyperparamSearchConfig = v
}

// GetLoggerConfig returns the LoggerConfig field value
func (o *PreferenceOptimizeRequest) GetLoggerConfig() map[string]AppendRowsRequestRowsInnerValue {
	if o == nil {
		var ret map[string]AppendRowsRequestRowsInnerValue
		return ret
	}

	return o.LoggerConfig
}

// GetLoggerConfigOk returns a tuple with the LoggerConfig field value
// and a boolean to check if the value has been set.
func (o *PreferenceOptimizeRequest) GetLoggerConfigOk() (map[string]AppendRowsRequestRowsInnerValue, bool) {
	if o == nil {
		return map[string]AppendRowsRequestRowsInnerValue{}, false
	}
	return o.LoggerConfig, true
}

// SetLoggerConfig sets field value
func (o *PreferenceOptimizeRequest) SetLoggerConfig(v map[string]AppendRowsRequestRowsInnerValue) {
	o.LoggerConfig = v
}

func (o PreferenceOptimizeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreferenceOptimizeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["job_uuid"] = o.JobUuid
	toSerialize["finetuned_model"] = o.FinetunedModel
	toSerialize["algorithm_config"] = o.AlgorithmConfig
	toSerialize["training_config"] = o.TrainingConfig
	toSerialize["hyperparam_search_config"] = o.HyperparamSearchConfig
	toSerialize["logger_config"] = o.LoggerConfig
	return toSerialize, nil
}

func (o *PreferenceOptimizeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"job_uuid",
		"finetuned_model",
		"algorithm_config",
		"training_config",
		"hyperparam_search_config",
		"logger_config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPreferenceOptimizeRequest := _PreferenceOptimizeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPreferenceOptimizeRequest)

	if err != nil {
		return err
	}

	*o = PreferenceOptimizeRequest(varPreferenceOptimizeRequest)

	return err
}

type NullablePreferenceOptimizeRequest struct {
	value *PreferenceOptimizeRequest
	isSet bool
}

func (v NullablePreferenceOptimizeRequest) Get() *PreferenceOptimizeRequest {
	return v.value
}

func (v *NullablePreferenceOptimizeRequest) Set(val *PreferenceOptimizeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePreferenceOptimizeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePreferenceOptimizeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreferenceOptimizeRequest(val *PreferenceOptimizeRequest) *NullablePreferenceOptimizeRequest {
	return &NullablePreferenceOptimizeRequest{value: val, isSet: true}
}

func (v NullablePreferenceOptimizeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreferenceOptimizeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


