/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CompletionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompletionRequest{}

// CompletionRequest struct for CompletionRequest
type CompletionRequest struct {
	// The identifier of the model to use. The model must be registered with Llama Stack and available via the /models endpoint.
	ModelId string `json:"model_id"`
	// The content to generate a completion for
	Content InterleavedContent `json:"content"`
	// (Optional) Parameters to control the sampling strategy
	SamplingParams *SamplingParams `json:"sampling_params,omitempty"`
	// (Optional) Grammar specification for guided (structured) decoding
	ResponseFormat *ResponseFormat `json:"response_format,omitempty"`
	// (Optional) If True, generate an SSE event stream of the response. Defaults to False.
	Stream *bool `json:"stream,omitempty"`
	Logprobs *ChatCompletionRequestLogprobs `json:"logprobs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CompletionRequest CompletionRequest

// NewCompletionRequest instantiates a new CompletionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompletionRequest(modelId string, content InterleavedContent) *CompletionRequest {
	this := CompletionRequest{}
	this.ModelId = modelId
	this.Content = content
	return &this
}

// NewCompletionRequestWithDefaults instantiates a new CompletionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompletionRequestWithDefaults() *CompletionRequest {
	this := CompletionRequest{}
	return &this
}

// GetModelId returns the ModelId field value
func (o *CompletionRequest) GetModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value
// and a boolean to check if the value has been set.
func (o *CompletionRequest) GetModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelId, true
}

// SetModelId sets field value
func (o *CompletionRequest) SetModelId(v string) {
	o.ModelId = v
}

// GetContent returns the Content field value
func (o *CompletionRequest) GetContent() InterleavedContent {
	if o == nil {
		var ret InterleavedContent
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *CompletionRequest) GetContentOk() (*InterleavedContent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *CompletionRequest) SetContent(v InterleavedContent) {
	o.Content = v
}

// GetSamplingParams returns the SamplingParams field value if set, zero value otherwise.
func (o *CompletionRequest) GetSamplingParams() SamplingParams {
	if o == nil || IsNil(o.SamplingParams) {
		var ret SamplingParams
		return ret
	}
	return *o.SamplingParams
}

// GetSamplingParamsOk returns a tuple with the SamplingParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletionRequest) GetSamplingParamsOk() (*SamplingParams, bool) {
	if o == nil || IsNil(o.SamplingParams) {
		return nil, false
	}
	return o.SamplingParams, true
}

// HasSamplingParams returns a boolean if a field has been set.
func (o *CompletionRequest) HasSamplingParams() bool {
	if o != nil && !IsNil(o.SamplingParams) {
		return true
	}

	return false
}

// SetSamplingParams gets a reference to the given SamplingParams and assigns it to the SamplingParams field.
func (o *CompletionRequest) SetSamplingParams(v SamplingParams) {
	o.SamplingParams = &v
}

// GetResponseFormat returns the ResponseFormat field value if set, zero value otherwise.
func (o *CompletionRequest) GetResponseFormat() ResponseFormat {
	if o == nil || IsNil(o.ResponseFormat) {
		var ret ResponseFormat
		return ret
	}
	return *o.ResponseFormat
}

// GetResponseFormatOk returns a tuple with the ResponseFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletionRequest) GetResponseFormatOk() (*ResponseFormat, bool) {
	if o == nil || IsNil(o.ResponseFormat) {
		return nil, false
	}
	return o.ResponseFormat, true
}

// HasResponseFormat returns a boolean if a field has been set.
func (o *CompletionRequest) HasResponseFormat() bool {
	if o != nil && !IsNil(o.ResponseFormat) {
		return true
	}

	return false
}

// SetResponseFormat gets a reference to the given ResponseFormat and assigns it to the ResponseFormat field.
func (o *CompletionRequest) SetResponseFormat(v ResponseFormat) {
	o.ResponseFormat = &v
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *CompletionRequest) GetStream() bool {
	if o == nil || IsNil(o.Stream) {
		var ret bool
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletionRequest) GetStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *CompletionRequest) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given bool and assigns it to the Stream field.
func (o *CompletionRequest) SetStream(v bool) {
	o.Stream = &v
}

// GetLogprobs returns the Logprobs field value if set, zero value otherwise.
func (o *CompletionRequest) GetLogprobs() ChatCompletionRequestLogprobs {
	if o == nil || IsNil(o.Logprobs) {
		var ret ChatCompletionRequestLogprobs
		return ret
	}
	return *o.Logprobs
}

// GetLogprobsOk returns a tuple with the Logprobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletionRequest) GetLogprobsOk() (*ChatCompletionRequestLogprobs, bool) {
	if o == nil || IsNil(o.Logprobs) {
		return nil, false
	}
	return o.Logprobs, true
}

// HasLogprobs returns a boolean if a field has been set.
func (o *CompletionRequest) HasLogprobs() bool {
	if o != nil && !IsNil(o.Logprobs) {
		return true
	}

	return false
}

// SetLogprobs gets a reference to the given ChatCompletionRequestLogprobs and assigns it to the Logprobs field.
func (o *CompletionRequest) SetLogprobs(v ChatCompletionRequestLogprobs) {
	o.Logprobs = &v
}

func (o CompletionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompletionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model_id"] = o.ModelId
	toSerialize["content"] = o.Content
	if !IsNil(o.SamplingParams) {
		toSerialize["sampling_params"] = o.SamplingParams
	}
	if !IsNil(o.ResponseFormat) {
		toSerialize["response_format"] = o.ResponseFormat
	}
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	if !IsNil(o.Logprobs) {
		toSerialize["logprobs"] = o.Logprobs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CompletionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model_id",
		"content",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompletionRequest := _CompletionRequest{}

	err = json.Unmarshal(data, &varCompletionRequest)

	if err != nil {
		return err
	}

	*o = CompletionRequest(varCompletionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "model_id")
		delete(additionalProperties, "content")
		delete(additionalProperties, "sampling_params")
		delete(additionalProperties, "response_format")
		delete(additionalProperties, "stream")
		delete(additionalProperties, "logprobs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCompletionRequest struct {
	value *CompletionRequest
	isSet bool
}

func (v NullableCompletionRequest) Get() *CompletionRequest {
	return v.value
}

func (v *NullableCompletionRequest) Set(val *CompletionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCompletionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCompletionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompletionRequest(val *CompletionRequest) *NullableCompletionRequest {
	return &NullableCompletionRequest{value: val, isSet: true}
}

func (v NullableCompletionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompletionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


