/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateUploadSessionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUploadSessionRequest{}

// CreateUploadSessionRequest struct for CreateUploadSessionRequest
type CreateUploadSessionRequest struct {
	// Bucket under which the file is stored (valid chars: a-zA-Z0-9_-)
	Bucket string `json:"bucket"`
	// Key under which the file is stored (valid chars: a-zA-Z0-9_-/.)
	Key string `json:"key"`
	// MIME type of the file
	MimeType string `json:"mime_type"`
	// File size in bytes
	Size int32 `json:"size"`
}

type _CreateUploadSessionRequest CreateUploadSessionRequest

// NewCreateUploadSessionRequest instantiates a new CreateUploadSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUploadSessionRequest(bucket string, key string, mimeType string, size int32) *CreateUploadSessionRequest {
	this := CreateUploadSessionRequest{}
	this.Bucket = bucket
	this.Key = key
	this.MimeType = mimeType
	this.Size = size
	return &this
}

// NewCreateUploadSessionRequestWithDefaults instantiates a new CreateUploadSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUploadSessionRequestWithDefaults() *CreateUploadSessionRequest {
	this := CreateUploadSessionRequest{}
	return &this
}

// GetBucket returns the Bucket field value
func (o *CreateUploadSessionRequest) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *CreateUploadSessionRequest) GetBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *CreateUploadSessionRequest) SetBucket(v string) {
	o.Bucket = v
}

// GetKey returns the Key field value
func (o *CreateUploadSessionRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CreateUploadSessionRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CreateUploadSessionRequest) SetKey(v string) {
	o.Key = v
}

// GetMimeType returns the MimeType field value
func (o *CreateUploadSessionRequest) GetMimeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value
// and a boolean to check if the value has been set.
func (o *CreateUploadSessionRequest) GetMimeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MimeType, true
}

// SetMimeType sets field value
func (o *CreateUploadSessionRequest) SetMimeType(v string) {
	o.MimeType = v
}

// GetSize returns the Size field value
func (o *CreateUploadSessionRequest) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *CreateUploadSessionRequest) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *CreateUploadSessionRequest) SetSize(v int32) {
	o.Size = v
}

func (o CreateUploadSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUploadSessionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucket"] = o.Bucket
	toSerialize["key"] = o.Key
	toSerialize["mime_type"] = o.MimeType
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

func (o *CreateUploadSessionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucket",
		"key",
		"mime_type",
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUploadSessionRequest := _CreateUploadSessionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUploadSessionRequest)

	if err != nil {
		return err
	}

	*o = CreateUploadSessionRequest(varCreateUploadSessionRequest)

	return err
}

type NullableCreateUploadSessionRequest struct {
	value *CreateUploadSessionRequest
	isSet bool
}

func (v NullableCreateUploadSessionRequest) Get() *CreateUploadSessionRequest {
	return v.value
}

func (v *NullableCreateUploadSessionRequest) Set(val *CreateUploadSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUploadSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUploadSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUploadSessionRequest(val *CreateUploadSessionRequest) *NullableCreateUploadSessionRequest {
	return &NullableCreateUploadSessionRequest{value: val, isSet: true}
}

func (v NullableCreateUploadSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUploadSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


