/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// OpenAIChatCompletionContentPartParam - struct for OpenAIChatCompletionContentPartParam
type OpenAIChatCompletionContentPartParam struct {
	OpenAIChatCompletionContentPartImageParam *OpenAIChatCompletionContentPartImageParam
	OpenAIChatCompletionContentPartTextParam *OpenAIChatCompletionContentPartTextParam
}

// OpenAIChatCompletionContentPartImageParamAsOpenAIChatCompletionContentPartParam is a convenience function that returns OpenAIChatCompletionContentPartImageParam wrapped in OpenAIChatCompletionContentPartParam
func OpenAIChatCompletionContentPartImageParamAsOpenAIChatCompletionContentPartParam(v *OpenAIChatCompletionContentPartImageParam) OpenAIChatCompletionContentPartParam {
	return OpenAIChatCompletionContentPartParam{
		OpenAIChatCompletionContentPartImageParam: v,
	}
}

// OpenAIChatCompletionContentPartTextParamAsOpenAIChatCompletionContentPartParam is a convenience function that returns OpenAIChatCompletionContentPartTextParam wrapped in OpenAIChatCompletionContentPartParam
func OpenAIChatCompletionContentPartTextParamAsOpenAIChatCompletionContentPartParam(v *OpenAIChatCompletionContentPartTextParam) OpenAIChatCompletionContentPartParam {
	return OpenAIChatCompletionContentPartParam{
		OpenAIChatCompletionContentPartTextParam: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *OpenAIChatCompletionContentPartParam) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into OpenAIChatCompletionContentPartImageParam
	err = newStrictDecoder(data).Decode(&dst.OpenAIChatCompletionContentPartImageParam)
	if err == nil {
		jsonOpenAIChatCompletionContentPartImageParam, _ := json.Marshal(dst.OpenAIChatCompletionContentPartImageParam)
		if string(jsonOpenAIChatCompletionContentPartImageParam) == "{}" { // empty struct
			dst.OpenAIChatCompletionContentPartImageParam = nil
		} else {
			if err = validator.Validate(dst.OpenAIChatCompletionContentPartImageParam); err != nil {
				dst.OpenAIChatCompletionContentPartImageParam = nil
			} else {
				match++
			}
		}
	} else {
		dst.OpenAIChatCompletionContentPartImageParam = nil
	}

	// try to unmarshal data into OpenAIChatCompletionContentPartTextParam
	err = newStrictDecoder(data).Decode(&dst.OpenAIChatCompletionContentPartTextParam)
	if err == nil {
		jsonOpenAIChatCompletionContentPartTextParam, _ := json.Marshal(dst.OpenAIChatCompletionContentPartTextParam)
		if string(jsonOpenAIChatCompletionContentPartTextParam) == "{}" { // empty struct
			dst.OpenAIChatCompletionContentPartTextParam = nil
		} else {
			if err = validator.Validate(dst.OpenAIChatCompletionContentPartTextParam); err != nil {
				dst.OpenAIChatCompletionContentPartTextParam = nil
			} else {
				match++
			}
		}
	} else {
		dst.OpenAIChatCompletionContentPartTextParam = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.OpenAIChatCompletionContentPartImageParam = nil
		dst.OpenAIChatCompletionContentPartTextParam = nil

		return fmt.Errorf("data matches more than one schema in oneOf(OpenAIChatCompletionContentPartParam)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(OpenAIChatCompletionContentPartParam)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src OpenAIChatCompletionContentPartParam) MarshalJSON() ([]byte, error) {
	if src.OpenAIChatCompletionContentPartImageParam != nil {
		return json.Marshal(&src.OpenAIChatCompletionContentPartImageParam)
	}

	if src.OpenAIChatCompletionContentPartTextParam != nil {
		return json.Marshal(&src.OpenAIChatCompletionContentPartTextParam)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *OpenAIChatCompletionContentPartParam) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.OpenAIChatCompletionContentPartImageParam != nil {
		return obj.OpenAIChatCompletionContentPartImageParam
	}

	if obj.OpenAIChatCompletionContentPartTextParam != nil {
		return obj.OpenAIChatCompletionContentPartTextParam
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj OpenAIChatCompletionContentPartParam) GetActualInstanceValue() (interface{}) {
	if obj.OpenAIChatCompletionContentPartImageParam != nil {
		return *obj.OpenAIChatCompletionContentPartImageParam
	}

	if obj.OpenAIChatCompletionContentPartTextParam != nil {
		return *obj.OpenAIChatCompletionContentPartTextParam
	}

	// all schemas are nil
	return nil
}

type NullableOpenAIChatCompletionContentPartParam struct {
	value *OpenAIChatCompletionContentPartParam
	isSet bool
}

func (v NullableOpenAIChatCompletionContentPartParam) Get() *OpenAIChatCompletionContentPartParam {
	return v.value
}

func (v *NullableOpenAIChatCompletionContentPartParam) Set(val *OpenAIChatCompletionContentPartParam) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenAIChatCompletionContentPartParam) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenAIChatCompletionContentPartParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenAIChatCompletionContentPartParam(val *OpenAIChatCompletionContentPartParam) *NullableOpenAIChatCompletionContentPartParam {
	return &NullableOpenAIChatCompletionContentPartParam{value: val, isSet: true}
}

func (v NullableOpenAIChatCompletionContentPartParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenAIChatCompletionContentPartParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


