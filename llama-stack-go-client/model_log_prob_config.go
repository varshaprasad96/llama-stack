/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LogProbConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogProbConfig{}

// LogProbConfig struct for LogProbConfig
type LogProbConfig struct {
	// How many tokens (for each position) to return log probabilities for.
	TopK *int32 `json:"top_k,omitempty"`
}

// NewLogProbConfig instantiates a new LogProbConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogProbConfig() *LogProbConfig {
	this := LogProbConfig{}
	var topK int32 = 0
	this.TopK = &topK
	return &this
}

// NewLogProbConfigWithDefaults instantiates a new LogProbConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogProbConfigWithDefaults() *LogProbConfig {
	this := LogProbConfig{}
	var topK int32 = 0
	this.TopK = &topK
	return &this
}

// GetTopK returns the TopK field value if set, zero value otherwise.
func (o *LogProbConfig) GetTopK() int32 {
	if o == nil || IsNil(o.TopK) {
		var ret int32
		return ret
	}
	return *o.TopK
}

// GetTopKOk returns a tuple with the TopK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogProbConfig) GetTopKOk() (*int32, bool) {
	if o == nil || IsNil(o.TopK) {
		return nil, false
	}
	return o.TopK, true
}

// HasTopK returns a boolean if a field has been set.
func (o *LogProbConfig) HasTopK() bool {
	if o != nil && !IsNil(o.TopK) {
		return true
	}

	return false
}

// SetTopK gets a reference to the given int32 and assigns it to the TopK field.
func (o *LogProbConfig) SetTopK(v int32) {
	o.TopK = &v
}

func (o LogProbConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogProbConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TopK) {
		toSerialize["top_k"] = o.TopK
	}
	return toSerialize, nil
}

type NullableLogProbConfig struct {
	value *LogProbConfig
	isSet bool
}

func (v NullableLogProbConfig) Get() *LogProbConfig {
	return v.value
}

func (v *NullableLogProbConfig) Set(val *LogProbConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLogProbConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLogProbConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogProbConfig(val *LogProbConfig) *NullableLogProbConfig {
	return &NullableLogProbConfig{value: val, isSet: true}
}

func (v NullableLogProbConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogProbConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


