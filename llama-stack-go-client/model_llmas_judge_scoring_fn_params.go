/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LLMAsJudgeScoringFnParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LLMAsJudgeScoringFnParams{}

// LLMAsJudgeScoringFnParams struct for LLMAsJudgeScoringFnParams
type LLMAsJudgeScoringFnParams struct {
	Type string `json:"type"`
	JudgeModel string `json:"judge_model"`
	PromptTemplate *string `json:"prompt_template,omitempty"`
	JudgeScoreRegexes []string `json:"judge_score_regexes,omitempty"`
	AggregationFunctions []AggregationFunctionType `json:"aggregation_functions,omitempty"`
}

type _LLMAsJudgeScoringFnParams LLMAsJudgeScoringFnParams

// NewLLMAsJudgeScoringFnParams instantiates a new LLMAsJudgeScoringFnParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLLMAsJudgeScoringFnParams(type_ string, judgeModel string) *LLMAsJudgeScoringFnParams {
	this := LLMAsJudgeScoringFnParams{}
	this.Type = type_
	this.JudgeModel = judgeModel
	return &this
}

// NewLLMAsJudgeScoringFnParamsWithDefaults instantiates a new LLMAsJudgeScoringFnParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLLMAsJudgeScoringFnParamsWithDefaults() *LLMAsJudgeScoringFnParams {
	this := LLMAsJudgeScoringFnParams{}
	var type_ string = "llm_as_judge"
	this.Type = type_
	return &this
}

// GetType returns the Type field value
func (o *LLMAsJudgeScoringFnParams) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LLMAsJudgeScoringFnParams) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LLMAsJudgeScoringFnParams) SetType(v string) {
	o.Type = v
}

// GetJudgeModel returns the JudgeModel field value
func (o *LLMAsJudgeScoringFnParams) GetJudgeModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JudgeModel
}

// GetJudgeModelOk returns a tuple with the JudgeModel field value
// and a boolean to check if the value has been set.
func (o *LLMAsJudgeScoringFnParams) GetJudgeModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JudgeModel, true
}

// SetJudgeModel sets field value
func (o *LLMAsJudgeScoringFnParams) SetJudgeModel(v string) {
	o.JudgeModel = v
}

// GetPromptTemplate returns the PromptTemplate field value if set, zero value otherwise.
func (o *LLMAsJudgeScoringFnParams) GetPromptTemplate() string {
	if o == nil || IsNil(o.PromptTemplate) {
		var ret string
		return ret
	}
	return *o.PromptTemplate
}

// GetPromptTemplateOk returns a tuple with the PromptTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LLMAsJudgeScoringFnParams) GetPromptTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.PromptTemplate) {
		return nil, false
	}
	return o.PromptTemplate, true
}

// HasPromptTemplate returns a boolean if a field has been set.
func (o *LLMAsJudgeScoringFnParams) HasPromptTemplate() bool {
	if o != nil && !IsNil(o.PromptTemplate) {
		return true
	}

	return false
}

// SetPromptTemplate gets a reference to the given string and assigns it to the PromptTemplate field.
func (o *LLMAsJudgeScoringFnParams) SetPromptTemplate(v string) {
	o.PromptTemplate = &v
}

// GetJudgeScoreRegexes returns the JudgeScoreRegexes field value if set, zero value otherwise.
func (o *LLMAsJudgeScoringFnParams) GetJudgeScoreRegexes() []string {
	if o == nil || IsNil(o.JudgeScoreRegexes) {
		var ret []string
		return ret
	}
	return o.JudgeScoreRegexes
}

// GetJudgeScoreRegexesOk returns a tuple with the JudgeScoreRegexes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LLMAsJudgeScoringFnParams) GetJudgeScoreRegexesOk() ([]string, bool) {
	if o == nil || IsNil(o.JudgeScoreRegexes) {
		return nil, false
	}
	return o.JudgeScoreRegexes, true
}

// HasJudgeScoreRegexes returns a boolean if a field has been set.
func (o *LLMAsJudgeScoringFnParams) HasJudgeScoreRegexes() bool {
	if o != nil && !IsNil(o.JudgeScoreRegexes) {
		return true
	}

	return false
}

// SetJudgeScoreRegexes gets a reference to the given []string and assigns it to the JudgeScoreRegexes field.
func (o *LLMAsJudgeScoringFnParams) SetJudgeScoreRegexes(v []string) {
	o.JudgeScoreRegexes = v
}

// GetAggregationFunctions returns the AggregationFunctions field value if set, zero value otherwise.
func (o *LLMAsJudgeScoringFnParams) GetAggregationFunctions() []AggregationFunctionType {
	if o == nil || IsNil(o.AggregationFunctions) {
		var ret []AggregationFunctionType
		return ret
	}
	return o.AggregationFunctions
}

// GetAggregationFunctionsOk returns a tuple with the AggregationFunctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LLMAsJudgeScoringFnParams) GetAggregationFunctionsOk() ([]AggregationFunctionType, bool) {
	if o == nil || IsNil(o.AggregationFunctions) {
		return nil, false
	}
	return o.AggregationFunctions, true
}

// HasAggregationFunctions returns a boolean if a field has been set.
func (o *LLMAsJudgeScoringFnParams) HasAggregationFunctions() bool {
	if o != nil && !IsNil(o.AggregationFunctions) {
		return true
	}

	return false
}

// SetAggregationFunctions gets a reference to the given []AggregationFunctionType and assigns it to the AggregationFunctions field.
func (o *LLMAsJudgeScoringFnParams) SetAggregationFunctions(v []AggregationFunctionType) {
	o.AggregationFunctions = v
}

func (o LLMAsJudgeScoringFnParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LLMAsJudgeScoringFnParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["judge_model"] = o.JudgeModel
	if !IsNil(o.PromptTemplate) {
		toSerialize["prompt_template"] = o.PromptTemplate
	}
	if !IsNil(o.JudgeScoreRegexes) {
		toSerialize["judge_score_regexes"] = o.JudgeScoreRegexes
	}
	if !IsNil(o.AggregationFunctions) {
		toSerialize["aggregation_functions"] = o.AggregationFunctions
	}
	return toSerialize, nil
}

func (o *LLMAsJudgeScoringFnParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"judge_model",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLLMAsJudgeScoringFnParams := _LLMAsJudgeScoringFnParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLLMAsJudgeScoringFnParams)

	if err != nil {
		return err
	}

	*o = LLMAsJudgeScoringFnParams(varLLMAsJudgeScoringFnParams)

	return err
}

type NullableLLMAsJudgeScoringFnParams struct {
	value *LLMAsJudgeScoringFnParams
	isSet bool
}

func (v NullableLLMAsJudgeScoringFnParams) Get() *LLMAsJudgeScoringFnParams {
	return v.value
}

func (v *NullableLLMAsJudgeScoringFnParams) Set(val *LLMAsJudgeScoringFnParams) {
	v.value = val
	v.isSet = true
}

func (v NullableLLMAsJudgeScoringFnParams) IsSet() bool {
	return v.isSet
}

func (v *NullableLLMAsJudgeScoringFnParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLLMAsJudgeScoringFnParams(val *LLMAsJudgeScoringFnParams) *NullableLLMAsJudgeScoringFnParams {
	return &NullableLLMAsJudgeScoringFnParams{value: val, isSet: true}
}

func (v NullableLLMAsJudgeScoringFnParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLLMAsJudgeScoringFnParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


