/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ToolInvocationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolInvocationResult{}

// ToolInvocationResult struct for ToolInvocationResult
type ToolInvocationResult struct {
	Content *InterleavedContent `json:"content,omitempty"`
	ErrorMessage *string `json:"error_message,omitempty"`
	ErrorCode *int32 `json:"error_code,omitempty"`
	Metadata map[string]AppendRowsRequestRowsInnerValue `json:"metadata,omitempty"`
}

// NewToolInvocationResult instantiates a new ToolInvocationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolInvocationResult() *ToolInvocationResult {
	this := ToolInvocationResult{}
	return &this
}

// NewToolInvocationResultWithDefaults instantiates a new ToolInvocationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolInvocationResultWithDefaults() *ToolInvocationResult {
	this := ToolInvocationResult{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ToolInvocationResult) GetContent() InterleavedContent {
	if o == nil || IsNil(o.Content) {
		var ret InterleavedContent
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolInvocationResult) GetContentOk() (*InterleavedContent, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ToolInvocationResult) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given InterleavedContent and assigns it to the Content field.
func (o *ToolInvocationResult) SetContent(v InterleavedContent) {
	o.Content = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ToolInvocationResult) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolInvocationResult) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ToolInvocationResult) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *ToolInvocationResult) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *ToolInvocationResult) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolInvocationResult) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *ToolInvocationResult) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *ToolInvocationResult) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ToolInvocationResult) GetMetadata() map[string]AppendRowsRequestRowsInnerValue {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]AppendRowsRequestRowsInnerValue
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolInvocationResult) GetMetadataOk() (map[string]AppendRowsRequestRowsInnerValue, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]AppendRowsRequestRowsInnerValue{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ToolInvocationResult) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]AppendRowsRequestRowsInnerValue and assigns it to the Metadata field.
func (o *ToolInvocationResult) SetMetadata(v map[string]AppendRowsRequestRowsInnerValue) {
	o.Metadata = v
}

func (o ToolInvocationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolInvocationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["error_message"] = o.ErrorMessage
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableToolInvocationResult struct {
	value *ToolInvocationResult
	isSet bool
}

func (v NullableToolInvocationResult) Get() *ToolInvocationResult {
	return v.value
}

func (v *NullableToolInvocationResult) Set(val *ToolInvocationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableToolInvocationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableToolInvocationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolInvocationResult(val *ToolInvocationResult) *NullableToolInvocationResult {
	return &NullableToolInvocationResult{value: val, isSet: true}
}

func (v NullableToolInvocationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolInvocationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


