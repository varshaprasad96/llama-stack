/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RegisterScoringFunctionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterScoringFunctionRequest{}

// RegisterScoringFunctionRequest struct for RegisterScoringFunctionRequest
type RegisterScoringFunctionRequest struct {
	ScoringFnId string `json:"scoring_fn_id"`
	Description string `json:"description"`
	ReturnType ParamType `json:"return_type"`
	ProviderScoringFnId *string `json:"provider_scoring_fn_id,omitempty"`
	ProviderId *string `json:"provider_id,omitempty"`
	Params *ScoringFnParams `json:"params,omitempty"`
}

type _RegisterScoringFunctionRequest RegisterScoringFunctionRequest

// NewRegisterScoringFunctionRequest instantiates a new RegisterScoringFunctionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterScoringFunctionRequest(scoringFnId string, description string, returnType ParamType) *RegisterScoringFunctionRequest {
	this := RegisterScoringFunctionRequest{}
	this.ScoringFnId = scoringFnId
	this.Description = description
	this.ReturnType = returnType
	return &this
}

// NewRegisterScoringFunctionRequestWithDefaults instantiates a new RegisterScoringFunctionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterScoringFunctionRequestWithDefaults() *RegisterScoringFunctionRequest {
	this := RegisterScoringFunctionRequest{}
	return &this
}

// GetScoringFnId returns the ScoringFnId field value
func (o *RegisterScoringFunctionRequest) GetScoringFnId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScoringFnId
}

// GetScoringFnIdOk returns a tuple with the ScoringFnId field value
// and a boolean to check if the value has been set.
func (o *RegisterScoringFunctionRequest) GetScoringFnIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScoringFnId, true
}

// SetScoringFnId sets field value
func (o *RegisterScoringFunctionRequest) SetScoringFnId(v string) {
	o.ScoringFnId = v
}

// GetDescription returns the Description field value
func (o *RegisterScoringFunctionRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RegisterScoringFunctionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RegisterScoringFunctionRequest) SetDescription(v string) {
	o.Description = v
}

// GetReturnType returns the ReturnType field value
func (o *RegisterScoringFunctionRequest) GetReturnType() ParamType {
	if o == nil {
		var ret ParamType
		return ret
	}

	return o.ReturnType
}

// GetReturnTypeOk returns a tuple with the ReturnType field value
// and a boolean to check if the value has been set.
func (o *RegisterScoringFunctionRequest) GetReturnTypeOk() (*ParamType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnType, true
}

// SetReturnType sets field value
func (o *RegisterScoringFunctionRequest) SetReturnType(v ParamType) {
	o.ReturnType = v
}

// GetProviderScoringFnId returns the ProviderScoringFnId field value if set, zero value otherwise.
func (o *RegisterScoringFunctionRequest) GetProviderScoringFnId() string {
	if o == nil || IsNil(o.ProviderScoringFnId) {
		var ret string
		return ret
	}
	return *o.ProviderScoringFnId
}

// GetProviderScoringFnIdOk returns a tuple with the ProviderScoringFnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterScoringFunctionRequest) GetProviderScoringFnIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderScoringFnId) {
		return nil, false
	}
	return o.ProviderScoringFnId, true
}

// HasProviderScoringFnId returns a boolean if a field has been set.
func (o *RegisterScoringFunctionRequest) HasProviderScoringFnId() bool {
	if o != nil && !IsNil(o.ProviderScoringFnId) {
		return true
	}

	return false
}

// SetProviderScoringFnId gets a reference to the given string and assigns it to the ProviderScoringFnId field.
func (o *RegisterScoringFunctionRequest) SetProviderScoringFnId(v string) {
	o.ProviderScoringFnId = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *RegisterScoringFunctionRequest) GetProviderId() string {
	if o == nil || IsNil(o.ProviderId) {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterScoringFunctionRequest) GetProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderId) {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *RegisterScoringFunctionRequest) HasProviderId() bool {
	if o != nil && !IsNil(o.ProviderId) {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *RegisterScoringFunctionRequest) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *RegisterScoringFunctionRequest) GetParams() ScoringFnParams {
	if o == nil || IsNil(o.Params) {
		var ret ScoringFnParams
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterScoringFunctionRequest) GetParamsOk() (*ScoringFnParams, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *RegisterScoringFunctionRequest) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given ScoringFnParams and assigns it to the Params field.
func (o *RegisterScoringFunctionRequest) SetParams(v ScoringFnParams) {
	o.Params = &v
}

func (o RegisterScoringFunctionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterScoringFunctionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["scoring_fn_id"] = o.ScoringFnId
	toSerialize["description"] = o.Description
	toSerialize["return_type"] = o.ReturnType
	if !IsNil(o.ProviderScoringFnId) {
		toSerialize["provider_scoring_fn_id"] = o.ProviderScoringFnId
	}
	if !IsNil(o.ProviderId) {
		toSerialize["provider_id"] = o.ProviderId
	}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	return toSerialize, nil
}

func (o *RegisterScoringFunctionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"scoring_fn_id",
		"description",
		"return_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegisterScoringFunctionRequest := _RegisterScoringFunctionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRegisterScoringFunctionRequest)

	if err != nil {
		return err
	}

	*o = RegisterScoringFunctionRequest(varRegisterScoringFunctionRequest)

	return err
}

type NullableRegisterScoringFunctionRequest struct {
	value *RegisterScoringFunctionRequest
	isSet bool
}

func (v NullableRegisterScoringFunctionRequest) Get() *RegisterScoringFunctionRequest {
	return v.value
}

func (v *NullableRegisterScoringFunctionRequest) Set(val *RegisterScoringFunctionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterScoringFunctionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterScoringFunctionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterScoringFunctionRequest(val *RegisterScoringFunctionRequest) *NullableRegisterScoringFunctionRequest {
	return &NullableRegisterScoringFunctionRequest{value: val, isSet: true}
}

func (v NullableRegisterScoringFunctionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterScoringFunctionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


