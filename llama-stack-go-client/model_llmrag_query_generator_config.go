/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LLMRAGQueryGeneratorConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LLMRAGQueryGeneratorConfig{}

// LLMRAGQueryGeneratorConfig struct for LLMRAGQueryGeneratorConfig
type LLMRAGQueryGeneratorConfig struct {
	Type string `json:"type"`
	Model string `json:"model"`
	Template string `json:"template"`
}

type _LLMRAGQueryGeneratorConfig LLMRAGQueryGeneratorConfig

// NewLLMRAGQueryGeneratorConfig instantiates a new LLMRAGQueryGeneratorConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLLMRAGQueryGeneratorConfig(type_ string, model string, template string) *LLMRAGQueryGeneratorConfig {
	this := LLMRAGQueryGeneratorConfig{}
	this.Type = type_
	this.Model = model
	this.Template = template
	return &this
}

// NewLLMRAGQueryGeneratorConfigWithDefaults instantiates a new LLMRAGQueryGeneratorConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLLMRAGQueryGeneratorConfigWithDefaults() *LLMRAGQueryGeneratorConfig {
	this := LLMRAGQueryGeneratorConfig{}
	var type_ string = "llm"
	this.Type = type_
	return &this
}

// GetType returns the Type field value
func (o *LLMRAGQueryGeneratorConfig) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LLMRAGQueryGeneratorConfig) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LLMRAGQueryGeneratorConfig) SetType(v string) {
	o.Type = v
}

// GetModel returns the Model field value
func (o *LLMRAGQueryGeneratorConfig) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *LLMRAGQueryGeneratorConfig) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *LLMRAGQueryGeneratorConfig) SetModel(v string) {
	o.Model = v
}

// GetTemplate returns the Template field value
func (o *LLMRAGQueryGeneratorConfig) GetTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *LLMRAGQueryGeneratorConfig) GetTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *LLMRAGQueryGeneratorConfig) SetTemplate(v string) {
	o.Template = v
}

func (o LLMRAGQueryGeneratorConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LLMRAGQueryGeneratorConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["model"] = o.Model
	toSerialize["template"] = o.Template
	return toSerialize, nil
}

func (o *LLMRAGQueryGeneratorConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"model",
		"template",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLLMRAGQueryGeneratorConfig := _LLMRAGQueryGeneratorConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLLMRAGQueryGeneratorConfig)

	if err != nil {
		return err
	}

	*o = LLMRAGQueryGeneratorConfig(varLLMRAGQueryGeneratorConfig)

	return err
}

type NullableLLMRAGQueryGeneratorConfig struct {
	value *LLMRAGQueryGeneratorConfig
	isSet bool
}

func (v NullableLLMRAGQueryGeneratorConfig) Get() *LLMRAGQueryGeneratorConfig {
	return v.value
}

func (v *NullableLLMRAGQueryGeneratorConfig) Set(val *LLMRAGQueryGeneratorConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLLMRAGQueryGeneratorConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLLMRAGQueryGeneratorConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLLMRAGQueryGeneratorConfig(val *LLMRAGQueryGeneratorConfig) *NullableLLMRAGQueryGeneratorConfig {
	return &NullableLLMRAGQueryGeneratorConfig{value: val, isSet: true}
}

func (v NullableLLMRAGQueryGeneratorConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLLMRAGQueryGeneratorConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


