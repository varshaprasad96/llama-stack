/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetSpanTreeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSpanTreeRequest{}

// GetSpanTreeRequest struct for GetSpanTreeRequest
type GetSpanTreeRequest struct {
	AttributesToReturn []string `json:"attributes_to_return,omitempty"`
	MaxDepth *int32 `json:"max_depth,omitempty"`
}

// NewGetSpanTreeRequest instantiates a new GetSpanTreeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSpanTreeRequest() *GetSpanTreeRequest {
	this := GetSpanTreeRequest{}
	return &this
}

// NewGetSpanTreeRequestWithDefaults instantiates a new GetSpanTreeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSpanTreeRequestWithDefaults() *GetSpanTreeRequest {
	this := GetSpanTreeRequest{}
	return &this
}

// GetAttributesToReturn returns the AttributesToReturn field value if set, zero value otherwise.
func (o *GetSpanTreeRequest) GetAttributesToReturn() []string {
	if o == nil || IsNil(o.AttributesToReturn) {
		var ret []string
		return ret
	}
	return o.AttributesToReturn
}

// GetAttributesToReturnOk returns a tuple with the AttributesToReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSpanTreeRequest) GetAttributesToReturnOk() ([]string, bool) {
	if o == nil || IsNil(o.AttributesToReturn) {
		return nil, false
	}
	return o.AttributesToReturn, true
}

// HasAttributesToReturn returns a boolean if a field has been set.
func (o *GetSpanTreeRequest) HasAttributesToReturn() bool {
	if o != nil && !IsNil(o.AttributesToReturn) {
		return true
	}

	return false
}

// SetAttributesToReturn gets a reference to the given []string and assigns it to the AttributesToReturn field.
func (o *GetSpanTreeRequest) SetAttributesToReturn(v []string) {
	o.AttributesToReturn = v
}

// GetMaxDepth returns the MaxDepth field value if set, zero value otherwise.
func (o *GetSpanTreeRequest) GetMaxDepth() int32 {
	if o == nil || IsNil(o.MaxDepth) {
		var ret int32
		return ret
	}
	return *o.MaxDepth
}

// GetMaxDepthOk returns a tuple with the MaxDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSpanTreeRequest) GetMaxDepthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDepth) {
		return nil, false
	}
	return o.MaxDepth, true
}

// HasMaxDepth returns a boolean if a field has been set.
func (o *GetSpanTreeRequest) HasMaxDepth() bool {
	if o != nil && !IsNil(o.MaxDepth) {
		return true
	}

	return false
}

// SetMaxDepth gets a reference to the given int32 and assigns it to the MaxDepth field.
func (o *GetSpanTreeRequest) SetMaxDepth(v int32) {
	o.MaxDepth = &v
}

func (o GetSpanTreeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSpanTreeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributesToReturn) {
		toSerialize["attributes_to_return"] = o.AttributesToReturn
	}
	if !IsNil(o.MaxDepth) {
		toSerialize["max_depth"] = o.MaxDepth
	}
	return toSerialize, nil
}

type NullableGetSpanTreeRequest struct {
	value *GetSpanTreeRequest
	isSet bool
}

func (v NullableGetSpanTreeRequest) Get() *GetSpanTreeRequest {
	return v.value
}

func (v *NullableGetSpanTreeRequest) Set(val *GetSpanTreeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSpanTreeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSpanTreeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSpanTreeRequest(val *GetSpanTreeRequest) *NullableGetSpanTreeRequest {
	return &NullableGetSpanTreeRequest{value: val, isSet: true}
}

func (v NullableGetSpanTreeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSpanTreeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


