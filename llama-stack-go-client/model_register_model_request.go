/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RegisterModelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterModelRequest{}

// RegisterModelRequest struct for RegisterModelRequest
type RegisterModelRequest struct {
	ModelId string `json:"model_id"`
	ProviderModelId *string `json:"provider_model_id,omitempty"`
	ProviderId *string `json:"provider_id,omitempty"`
	Metadata map[string]AppendRowsRequestRowsInnerValue `json:"metadata,omitempty"`
	ModelType *ModelType `json:"model_type,omitempty"`
}

type _RegisterModelRequest RegisterModelRequest

// NewRegisterModelRequest instantiates a new RegisterModelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterModelRequest(modelId string) *RegisterModelRequest {
	this := RegisterModelRequest{}
	this.ModelId = modelId
	return &this
}

// NewRegisterModelRequestWithDefaults instantiates a new RegisterModelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterModelRequestWithDefaults() *RegisterModelRequest {
	this := RegisterModelRequest{}
	return &this
}

// GetModelId returns the ModelId field value
func (o *RegisterModelRequest) GetModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value
// and a boolean to check if the value has been set.
func (o *RegisterModelRequest) GetModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelId, true
}

// SetModelId sets field value
func (o *RegisterModelRequest) SetModelId(v string) {
	o.ModelId = v
}

// GetProviderModelId returns the ProviderModelId field value if set, zero value otherwise.
func (o *RegisterModelRequest) GetProviderModelId() string {
	if o == nil || IsNil(o.ProviderModelId) {
		var ret string
		return ret
	}
	return *o.ProviderModelId
}

// GetProviderModelIdOk returns a tuple with the ProviderModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterModelRequest) GetProviderModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderModelId) {
		return nil, false
	}
	return o.ProviderModelId, true
}

// HasProviderModelId returns a boolean if a field has been set.
func (o *RegisterModelRequest) HasProviderModelId() bool {
	if o != nil && !IsNil(o.ProviderModelId) {
		return true
	}

	return false
}

// SetProviderModelId gets a reference to the given string and assigns it to the ProviderModelId field.
func (o *RegisterModelRequest) SetProviderModelId(v string) {
	o.ProviderModelId = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *RegisterModelRequest) GetProviderId() string {
	if o == nil || IsNil(o.ProviderId) {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterModelRequest) GetProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderId) {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *RegisterModelRequest) HasProviderId() bool {
	if o != nil && !IsNil(o.ProviderId) {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *RegisterModelRequest) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *RegisterModelRequest) GetMetadata() map[string]AppendRowsRequestRowsInnerValue {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]AppendRowsRequestRowsInnerValue
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterModelRequest) GetMetadataOk() (map[string]AppendRowsRequestRowsInnerValue, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]AppendRowsRequestRowsInnerValue{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *RegisterModelRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]AppendRowsRequestRowsInnerValue and assigns it to the Metadata field.
func (o *RegisterModelRequest) SetMetadata(v map[string]AppendRowsRequestRowsInnerValue) {
	o.Metadata = v
}

// GetModelType returns the ModelType field value if set, zero value otherwise.
func (o *RegisterModelRequest) GetModelType() ModelType {
	if o == nil || IsNil(o.ModelType) {
		var ret ModelType
		return ret
	}
	return *o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterModelRequest) GetModelTypeOk() (*ModelType, bool) {
	if o == nil || IsNil(o.ModelType) {
		return nil, false
	}
	return o.ModelType, true
}

// HasModelType returns a boolean if a field has been set.
func (o *RegisterModelRequest) HasModelType() bool {
	if o != nil && !IsNil(o.ModelType) {
		return true
	}

	return false
}

// SetModelType gets a reference to the given ModelType and assigns it to the ModelType field.
func (o *RegisterModelRequest) SetModelType(v ModelType) {
	o.ModelType = &v
}

func (o RegisterModelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterModelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model_id"] = o.ModelId
	if !IsNil(o.ProviderModelId) {
		toSerialize["provider_model_id"] = o.ProviderModelId
	}
	if !IsNil(o.ProviderId) {
		toSerialize["provider_id"] = o.ProviderId
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.ModelType) {
		toSerialize["model_type"] = o.ModelType
	}
	return toSerialize, nil
}

func (o *RegisterModelRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegisterModelRequest := _RegisterModelRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRegisterModelRequest)

	if err != nil {
		return err
	}

	*o = RegisterModelRequest(varRegisterModelRequest)

	return err
}

type NullableRegisterModelRequest struct {
	value *RegisterModelRequest
	isSet bool
}

func (v NullableRegisterModelRequest) Get() *RegisterModelRequest {
	return v.value
}

func (v *NullableRegisterModelRequest) Set(val *RegisterModelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterModelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterModelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterModelRequest(val *RegisterModelRequest) *NullableRegisterModelRequest {
	return &NullableRegisterModelRequest{value: val, isSet: true}
}

func (v NullableRegisterModelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterModelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


