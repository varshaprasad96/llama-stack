/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the Turn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Turn{}

// Turn A single turn in an interaction with an Agentic System.
type Turn struct {
	TurnId string `json:"turn_id"`
	SessionId string `json:"session_id"`
	InputMessages []CreateAgentTurnRequestMessagesInner `json:"input_messages"`
	Steps []TurnStepsInner `json:"steps"`
	OutputMessage CompletionMessage `json:"output_message"`
	OutputAttachments []Attachment `json:"output_attachments,omitempty"`
	StartedAt time.Time `json:"started_at"`
	CompletedAt *time.Time `json:"completed_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Turn Turn

// NewTurn instantiates a new Turn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTurn(turnId string, sessionId string, inputMessages []CreateAgentTurnRequestMessagesInner, steps []TurnStepsInner, outputMessage CompletionMessage, startedAt time.Time) *Turn {
	this := Turn{}
	this.TurnId = turnId
	this.SessionId = sessionId
	this.InputMessages = inputMessages
	this.Steps = steps
	this.OutputMessage = outputMessage
	this.StartedAt = startedAt
	return &this
}

// NewTurnWithDefaults instantiates a new Turn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTurnWithDefaults() *Turn {
	this := Turn{}
	return &this
}

// GetTurnId returns the TurnId field value
func (o *Turn) GetTurnId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TurnId
}

// GetTurnIdOk returns a tuple with the TurnId field value
// and a boolean to check if the value has been set.
func (o *Turn) GetTurnIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TurnId, true
}

// SetTurnId sets field value
func (o *Turn) SetTurnId(v string) {
	o.TurnId = v
}

// GetSessionId returns the SessionId field value
func (o *Turn) GetSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value
// and a boolean to check if the value has been set.
func (o *Turn) GetSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionId, true
}

// SetSessionId sets field value
func (o *Turn) SetSessionId(v string) {
	o.SessionId = v
}

// GetInputMessages returns the InputMessages field value
func (o *Turn) GetInputMessages() []CreateAgentTurnRequestMessagesInner {
	if o == nil {
		var ret []CreateAgentTurnRequestMessagesInner
		return ret
	}

	return o.InputMessages
}

// GetInputMessagesOk returns a tuple with the InputMessages field value
// and a boolean to check if the value has been set.
func (o *Turn) GetInputMessagesOk() ([]CreateAgentTurnRequestMessagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.InputMessages, true
}

// SetInputMessages sets field value
func (o *Turn) SetInputMessages(v []CreateAgentTurnRequestMessagesInner) {
	o.InputMessages = v
}

// GetSteps returns the Steps field value
func (o *Turn) GetSteps() []TurnStepsInner {
	if o == nil {
		var ret []TurnStepsInner
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *Turn) GetStepsOk() ([]TurnStepsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *Turn) SetSteps(v []TurnStepsInner) {
	o.Steps = v
}

// GetOutputMessage returns the OutputMessage field value
func (o *Turn) GetOutputMessage() CompletionMessage {
	if o == nil {
		var ret CompletionMessage
		return ret
	}

	return o.OutputMessage
}

// GetOutputMessageOk returns a tuple with the OutputMessage field value
// and a boolean to check if the value has been set.
func (o *Turn) GetOutputMessageOk() (*CompletionMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputMessage, true
}

// SetOutputMessage sets field value
func (o *Turn) SetOutputMessage(v CompletionMessage) {
	o.OutputMessage = v
}

// GetOutputAttachments returns the OutputAttachments field value if set, zero value otherwise.
func (o *Turn) GetOutputAttachments() []Attachment {
	if o == nil || IsNil(o.OutputAttachments) {
		var ret []Attachment
		return ret
	}
	return o.OutputAttachments
}

// GetOutputAttachmentsOk returns a tuple with the OutputAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Turn) GetOutputAttachmentsOk() ([]Attachment, bool) {
	if o == nil || IsNil(o.OutputAttachments) {
		return nil, false
	}
	return o.OutputAttachments, true
}

// HasOutputAttachments returns a boolean if a field has been set.
func (o *Turn) HasOutputAttachments() bool {
	if o != nil && !IsNil(o.OutputAttachments) {
		return true
	}

	return false
}

// SetOutputAttachments gets a reference to the given []Attachment and assigns it to the OutputAttachments field.
func (o *Turn) SetOutputAttachments(v []Attachment) {
	o.OutputAttachments = v
}

// GetStartedAt returns the StartedAt field value
func (o *Turn) GetStartedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *Turn) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *Turn) SetStartedAt(v time.Time) {
	o.StartedAt = v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise.
func (o *Turn) GetCompletedAt() time.Time {
	if o == nil || IsNil(o.CompletedAt) {
		var ret time.Time
		return ret
	}
	return *o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Turn) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompletedAt) {
		return nil, false
	}
	return o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *Turn) HasCompletedAt() bool {
	if o != nil && !IsNil(o.CompletedAt) {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given time.Time and assigns it to the CompletedAt field.
func (o *Turn) SetCompletedAt(v time.Time) {
	o.CompletedAt = &v
}

func (o Turn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Turn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["turn_id"] = o.TurnId
	toSerialize["session_id"] = o.SessionId
	toSerialize["input_messages"] = o.InputMessages
	toSerialize["steps"] = o.Steps
	toSerialize["output_message"] = o.OutputMessage
	if !IsNil(o.OutputAttachments) {
		toSerialize["output_attachments"] = o.OutputAttachments
	}
	toSerialize["started_at"] = o.StartedAt
	if !IsNil(o.CompletedAt) {
		toSerialize["completed_at"] = o.CompletedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Turn) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"turn_id",
		"session_id",
		"input_messages",
		"steps",
		"output_message",
		"started_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTurn := _Turn{}

	err = json.Unmarshal(data, &varTurn)

	if err != nil {
		return err
	}

	*o = Turn(varTurn)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "turn_id")
		delete(additionalProperties, "session_id")
		delete(additionalProperties, "input_messages")
		delete(additionalProperties, "steps")
		delete(additionalProperties, "output_message")
		delete(additionalProperties, "output_attachments")
		delete(additionalProperties, "started_at")
		delete(additionalProperties, "completed_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTurn struct {
	value *Turn
	isSet bool
}

func (v NullableTurn) Get() *Turn {
	return v.value
}

func (v *NullableTurn) Set(val *Turn) {
	v.value = val
	v.isSet = true
}

func (v NullableTurn) IsSet() bool {
	return v.isSet
}

func (v *NullableTurn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTurn(val *Turn) *NullableTurn {
	return &NullableTurn{value: val, isSet: true}
}

func (v NullableTurn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTurn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


