/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// CreateAgentTurnRequestMessagesInner - struct for CreateAgentTurnRequestMessagesInner
type CreateAgentTurnRequestMessagesInner struct {
	ToolResponseMessage *ToolResponseMessage
	UserMessage *UserMessage
}

// ToolResponseMessageAsCreateAgentTurnRequestMessagesInner is a convenience function that returns ToolResponseMessage wrapped in CreateAgentTurnRequestMessagesInner
func ToolResponseMessageAsCreateAgentTurnRequestMessagesInner(v *ToolResponseMessage) CreateAgentTurnRequestMessagesInner {
	return CreateAgentTurnRequestMessagesInner{
		ToolResponseMessage: v,
	}
}

// UserMessageAsCreateAgentTurnRequestMessagesInner is a convenience function that returns UserMessage wrapped in CreateAgentTurnRequestMessagesInner
func UserMessageAsCreateAgentTurnRequestMessagesInner(v *UserMessage) CreateAgentTurnRequestMessagesInner {
	return CreateAgentTurnRequestMessagesInner{
		UserMessage: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateAgentTurnRequestMessagesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ToolResponseMessage
	err = newStrictDecoder(data).Decode(&dst.ToolResponseMessage)
	if err == nil {
		jsonToolResponseMessage, _ := json.Marshal(dst.ToolResponseMessage)
		if string(jsonToolResponseMessage) == "{}" { // empty struct
			dst.ToolResponseMessage = nil
		} else {
			if err = validator.Validate(dst.ToolResponseMessage); err != nil {
				dst.ToolResponseMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.ToolResponseMessage = nil
	}

	// try to unmarshal data into UserMessage
	err = newStrictDecoder(data).Decode(&dst.UserMessage)
	if err == nil {
		jsonUserMessage, _ := json.Marshal(dst.UserMessage)
		if string(jsonUserMessage) == "{}" { // empty struct
			dst.UserMessage = nil
		} else {
			if err = validator.Validate(dst.UserMessage); err != nil {
				dst.UserMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.UserMessage = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ToolResponseMessage = nil
		dst.UserMessage = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateAgentTurnRequestMessagesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateAgentTurnRequestMessagesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateAgentTurnRequestMessagesInner) MarshalJSON() ([]byte, error) {
	if src.ToolResponseMessage != nil {
		return json.Marshal(&src.ToolResponseMessage)
	}

	if src.UserMessage != nil {
		return json.Marshal(&src.UserMessage)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateAgentTurnRequestMessagesInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ToolResponseMessage != nil {
		return obj.ToolResponseMessage
	}

	if obj.UserMessage != nil {
		return obj.UserMessage
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj CreateAgentTurnRequestMessagesInner) GetActualInstanceValue() (interface{}) {
	if obj.ToolResponseMessage != nil {
		return *obj.ToolResponseMessage
	}

	if obj.UserMessage != nil {
		return *obj.UserMessage
	}

	// all schemas are nil
	return nil
}

type NullableCreateAgentTurnRequestMessagesInner struct {
	value *CreateAgentTurnRequestMessagesInner
	isSet bool
}

func (v NullableCreateAgentTurnRequestMessagesInner) Get() *CreateAgentTurnRequestMessagesInner {
	return v.value
}

func (v *NullableCreateAgentTurnRequestMessagesInner) Set(val *CreateAgentTurnRequestMessagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAgentTurnRequestMessagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAgentTurnRequestMessagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAgentTurnRequestMessagesInner(val *CreateAgentTurnRequestMessagesInner) *NullableCreateAgentTurnRequestMessagesInner {
	return &NullableCreateAgentTurnRequestMessagesInner{value: val, isSet: true}
}

func (v NullableCreateAgentTurnRequestMessagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAgentTurnRequestMessagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


