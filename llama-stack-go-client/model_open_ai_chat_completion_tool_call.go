/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OpenAIChatCompletionToolCall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenAIChatCompletionToolCall{}

// OpenAIChatCompletionToolCall struct for OpenAIChatCompletionToolCall
type OpenAIChatCompletionToolCall struct {
	Index *int32 `json:"index,omitempty"`
	Id *string `json:"id,omitempty"`
	Type string `json:"type"`
	Function *OpenAIChatCompletionToolCallFunction `json:"function,omitempty"`
}

type _OpenAIChatCompletionToolCall OpenAIChatCompletionToolCall

// NewOpenAIChatCompletionToolCall instantiates a new OpenAIChatCompletionToolCall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenAIChatCompletionToolCall(type_ string) *OpenAIChatCompletionToolCall {
	this := OpenAIChatCompletionToolCall{}
	this.Type = type_
	return &this
}

// NewOpenAIChatCompletionToolCallWithDefaults instantiates a new OpenAIChatCompletionToolCall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenAIChatCompletionToolCallWithDefaults() *OpenAIChatCompletionToolCall {
	this := OpenAIChatCompletionToolCall{}
	var type_ string = "function"
	this.Type = type_
	return &this
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *OpenAIChatCompletionToolCall) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenAIChatCompletionToolCall) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *OpenAIChatCompletionToolCall) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *OpenAIChatCompletionToolCall) SetIndex(v int32) {
	o.Index = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpenAIChatCompletionToolCall) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenAIChatCompletionToolCall) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpenAIChatCompletionToolCall) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OpenAIChatCompletionToolCall) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *OpenAIChatCompletionToolCall) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OpenAIChatCompletionToolCall) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OpenAIChatCompletionToolCall) SetType(v string) {
	o.Type = v
}

// GetFunction returns the Function field value if set, zero value otherwise.
func (o *OpenAIChatCompletionToolCall) GetFunction() OpenAIChatCompletionToolCallFunction {
	if o == nil || IsNil(o.Function) {
		var ret OpenAIChatCompletionToolCallFunction
		return ret
	}
	return *o.Function
}

// GetFunctionOk returns a tuple with the Function field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenAIChatCompletionToolCall) GetFunctionOk() (*OpenAIChatCompletionToolCallFunction, bool) {
	if o == nil || IsNil(o.Function) {
		return nil, false
	}
	return o.Function, true
}

// HasFunction returns a boolean if a field has been set.
func (o *OpenAIChatCompletionToolCall) HasFunction() bool {
	if o != nil && !IsNil(o.Function) {
		return true
	}

	return false
}

// SetFunction gets a reference to the given OpenAIChatCompletionToolCallFunction and assigns it to the Function field.
func (o *OpenAIChatCompletionToolCall) SetFunction(v OpenAIChatCompletionToolCallFunction) {
	o.Function = &v
}

func (o OpenAIChatCompletionToolCall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenAIChatCompletionToolCall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Function) {
		toSerialize["function"] = o.Function
	}
	return toSerialize, nil
}

func (o *OpenAIChatCompletionToolCall) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOpenAIChatCompletionToolCall := _OpenAIChatCompletionToolCall{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOpenAIChatCompletionToolCall)

	if err != nil {
		return err
	}

	*o = OpenAIChatCompletionToolCall(varOpenAIChatCompletionToolCall)

	return err
}

type NullableOpenAIChatCompletionToolCall struct {
	value *OpenAIChatCompletionToolCall
	isSet bool
}

func (v NullableOpenAIChatCompletionToolCall) Get() *OpenAIChatCompletionToolCall {
	return v.value
}

func (v *NullableOpenAIChatCompletionToolCall) Set(val *OpenAIChatCompletionToolCall) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenAIChatCompletionToolCall) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenAIChatCompletionToolCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenAIChatCompletionToolCall(val *OpenAIChatCompletionToolCall) *NullableOpenAIChatCompletionToolCall {
	return &NullableOpenAIChatCompletionToolCall{value: val, isSet: true}
}

func (v NullableOpenAIChatCompletionToolCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenAIChatCompletionToolCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


