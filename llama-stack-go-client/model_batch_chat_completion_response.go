/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BatchChatCompletionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchChatCompletionResponse{}

// BatchChatCompletionResponse struct for BatchChatCompletionResponse
type BatchChatCompletionResponse struct {
	Batch []ChatCompletionResponse `json:"batch"`
}

type _BatchChatCompletionResponse BatchChatCompletionResponse

// NewBatchChatCompletionResponse instantiates a new BatchChatCompletionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchChatCompletionResponse(batch []ChatCompletionResponse) *BatchChatCompletionResponse {
	this := BatchChatCompletionResponse{}
	this.Batch = batch
	return &this
}

// NewBatchChatCompletionResponseWithDefaults instantiates a new BatchChatCompletionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchChatCompletionResponseWithDefaults() *BatchChatCompletionResponse {
	this := BatchChatCompletionResponse{}
	return &this
}

// GetBatch returns the Batch field value
func (o *BatchChatCompletionResponse) GetBatch() []ChatCompletionResponse {
	if o == nil {
		var ret []ChatCompletionResponse
		return ret
	}

	return o.Batch
}

// GetBatchOk returns a tuple with the Batch field value
// and a boolean to check if the value has been set.
func (o *BatchChatCompletionResponse) GetBatchOk() ([]ChatCompletionResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Batch, true
}

// SetBatch sets field value
func (o *BatchChatCompletionResponse) SetBatch(v []ChatCompletionResponse) {
	o.Batch = v
}

func (o BatchChatCompletionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchChatCompletionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["batch"] = o.Batch
	return toSerialize, nil
}

func (o *BatchChatCompletionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"batch",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBatchChatCompletionResponse := _BatchChatCompletionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBatchChatCompletionResponse)

	if err != nil {
		return err
	}

	*o = BatchChatCompletionResponse(varBatchChatCompletionResponse)

	return err
}

type NullableBatchChatCompletionResponse struct {
	value *BatchChatCompletionResponse
	isSet bool
}

func (v NullableBatchChatCompletionResponse) Get() *BatchChatCompletionResponse {
	return v.value
}

func (v *NullableBatchChatCompletionResponse) Set(val *BatchChatCompletionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchChatCompletionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchChatCompletionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchChatCompletionResponse(val *BatchChatCompletionResponse) *NullableBatchChatCompletionResponse {
	return &NullableBatchChatCompletionResponse{value: val, isSet: true}
}

func (v NullableBatchChatCompletionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchChatCompletionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


