/*
Llama Stack Specification

This is the specification of the Llama Stack that provides                 a set of endpoints and their corresponding interfaces that are tailored to                 best leverage Llama Models.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OpenAIDeveloperMessageParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenAIDeveloperMessageParam{}

// OpenAIDeveloperMessageParam A message from the developer in an OpenAI-compatible chat completion request.
type OpenAIDeveloperMessageParam struct {
	// Must be \"developer\" to identify this as a developer message
	Role string `json:"role"`
	Content OpenAIDeveloperMessageParamContent `json:"content"`
	// (Optional) The name of the developer message participant.
	Name *string `json:"name,omitempty"`
}

type _OpenAIDeveloperMessageParam OpenAIDeveloperMessageParam

// NewOpenAIDeveloperMessageParam instantiates a new OpenAIDeveloperMessageParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenAIDeveloperMessageParam(role string, content OpenAIDeveloperMessageParamContent) *OpenAIDeveloperMessageParam {
	this := OpenAIDeveloperMessageParam{}
	this.Role = role
	this.Content = content
	return &this
}

// NewOpenAIDeveloperMessageParamWithDefaults instantiates a new OpenAIDeveloperMessageParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenAIDeveloperMessageParamWithDefaults() *OpenAIDeveloperMessageParam {
	this := OpenAIDeveloperMessageParam{}
	var role string = "developer"
	this.Role = role
	return &this
}

// GetRole returns the Role field value
func (o *OpenAIDeveloperMessageParam) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *OpenAIDeveloperMessageParam) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *OpenAIDeveloperMessageParam) SetRole(v string) {
	o.Role = v
}

// GetContent returns the Content field value
func (o *OpenAIDeveloperMessageParam) GetContent() OpenAIDeveloperMessageParamContent {
	if o == nil {
		var ret OpenAIDeveloperMessageParamContent
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *OpenAIDeveloperMessageParam) GetContentOk() (*OpenAIDeveloperMessageParamContent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *OpenAIDeveloperMessageParam) SetContent(v OpenAIDeveloperMessageParamContent) {
	o.Content = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenAIDeveloperMessageParam) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenAIDeveloperMessageParam) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenAIDeveloperMessageParam) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenAIDeveloperMessageParam) SetName(v string) {
	o.Name = &v
}

func (o OpenAIDeveloperMessageParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenAIDeveloperMessageParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role"] = o.Role
	toSerialize["content"] = o.Content
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

func (o *OpenAIDeveloperMessageParam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"role",
		"content",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOpenAIDeveloperMessageParam := _OpenAIDeveloperMessageParam{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOpenAIDeveloperMessageParam)

	if err != nil {
		return err
	}

	*o = OpenAIDeveloperMessageParam(varOpenAIDeveloperMessageParam)

	return err
}

type NullableOpenAIDeveloperMessageParam struct {
	value *OpenAIDeveloperMessageParam
	isSet bool
}

func (v NullableOpenAIDeveloperMessageParam) Get() *OpenAIDeveloperMessageParam {
	return v.value
}

func (v *NullableOpenAIDeveloperMessageParam) Set(val *OpenAIDeveloperMessageParam) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenAIDeveloperMessageParam) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenAIDeveloperMessageParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenAIDeveloperMessageParam(val *OpenAIDeveloperMessageParam) *NullableOpenAIDeveloperMessageParam {
	return &NullableOpenAIDeveloperMessageParam{value: val, isSet: true}
}

func (v NullableOpenAIDeveloperMessageParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenAIDeveloperMessageParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


